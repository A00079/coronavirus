{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\home\\\\geographics\\\\TestMap.js\";\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\n\nconst INDIA_TOPO_JSON = require('./india.topo.json');\n\nconst PROJECTION_CONFIG = {\n  scale: 350,\n  center: [78.9629, 22.5937]\n};\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(ComposableMap, {\n    projectionConfig: PROJECTION_CONFIG,\n    projection: \"geoMercator\",\n    width: 600,\n    height: 220,\n    \"data-tip\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Geographies, {\n    geography: INDIA_TOPO_JSON,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, ({\n    geographies\n  }) => geographies.map(geo => {\n    const current = data.find(s => s.id === geo.id);\n    return /*#__PURE__*/React.createElement(Geography, {\n      key: geo.rsmKey,\n      geography: geo,\n      fill: current ? colorScale(current.value) : DEFAULT_COLOR,\n      style: geographyStyle,\n      onMouseEnter: onMouseEnter(geo, current),\n      onMouseLeave: onMouseLeave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/home/geographics/TestMap.js"],"names":["ComposableMap","Geographies","Geography","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","App","geographies","map","geo","current","data","find","s","id","rsmKey","colorScale","value","DEFAULT_COLOR","geographyStyle","onMouseEnter","onMouseLeave"],"mappings":";AAAA,SACIA,aADJ,EACmBC,WADnB,EACgCC,SADhC,QAES,mBAFT;;AAIE,MAAMC,eAAe,GAAGC,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,GADiB;AAExBC,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV;AAFgB,CAA1B;;AAKA,SAASC,GAAT,GAAe;AACb,sBACE,oBAAC,aAAD;AACI,IAAA,gBAAgB,EAAEH,iBADtB;AAEI,IAAA,UAAU,EAAC,aAFf;AAGI,IAAA,KAAK,EAAE,GAHX;AAII,IAAA,MAAM,EAAE,GAJZ;AAKI,gBAAS,EALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEF,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEM,IAAAA;AAAF,GAAD,KACCA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,IAAI;AACrB,UAAMC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,GAAG,CAACK,EAA5B,CAAhB;AACA,wBACE,oBAAC,SAAD;AACE,MAAA,GAAG,EAAEL,GAAG,CAACM,MADX;AAEE,MAAA,SAAS,EAAEN,GAFb;AAGE,MAAA,IAAI,EAAEC,OAAO,GAAGM,UAAU,CAACN,OAAO,CAACO,KAAT,CAAb,GAA+BC,aAH9C;AAIE,MAAA,KAAK,EAAEC,cAJT;AAKE,MAAA,YAAY,EAAEC,YAAY,CAACX,GAAD,EAAMC,OAAN,CAL5B;AAME,MAAA,YAAY,EAAEW,YANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAZD,CAFJ,CAPJ,CADF;AA2BD","sourcesContent":["import { \r\n    ComposableMap, Geographies, Geography \r\n  } from 'react-simple-maps';\r\n  \r\n  const INDIA_TOPO_JSON = require('./india.topo.json');\r\n  \r\n  const PROJECTION_CONFIG = {\r\n    scale: 350,\r\n    center: [78.9629, 22.5937]\r\n  };\r\n  \r\n  function App() {\r\n    return (\r\n      <ComposableMap\r\n          projectionConfig={PROJECTION_CONFIG}\r\n          projection=\"geoMercator\"\r\n          width={600}\r\n          height={220}\r\n          data-tip=\"\"\r\n      >\r\n          <Geographies geography={INDIA_TOPO_JSON}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => {\r\n                const current = data.find(s => s.id === geo.id);\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    fill={current ? colorScale(current.value) : DEFAULT_COLOR}\r\n                    style={geographyStyle}\r\n                    onMouseEnter={onMouseEnter(geo, current)}\r\n                    onMouseLeave={onMouseLeave}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n      </ComposableMap>\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}