{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\home\\\\StateInfo.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./stateinfo.css\";\nimport { stateInfoAction } from \"../../store/actions/stateInfoActions\";\nimport LiveStats from \"./LiveStats\";\n\nconst StateInfo = props => {\n  const [impData, setImpData] = useState({});\n  useEffect(() => {\n    props.getStatesData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (props.stateInfo.length !== 0) {\n      const stateCode = props.match.params.statename;\n      const index = props.stateInfo.findIndex(name => name.statecode === stateCode);\n      const state = props.stateInfo[index];\n      setImpData(state);\n    }\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"bc-icons-2 bread\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    class: \"breadcrumb grey lighten-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    class: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    class: \"black-text\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 53\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n    class: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 53\n    }\n  }, \" \", impData.state, \" \"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"state-counts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card mt-4 view overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `card-body card-settings  ${props.modeState && 'dark-body'} rgba-${props.hoverColor}-slight`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: `card-title ${props.badgeColor}`,\n    style: {\n      fontSize: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, props.name), /*#__PURE__*/React.createElement(\"h3\", {\n    className: `${props.textColor} ml-auto`,\n    style: {\n      fontSize: \"20px\",\n      fontWeight: 700\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, props.count)), props.activegraph, props.todayCount <= 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: `${props.textColor} d-flex justify-content-start `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"No new cases yet\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: `${props.textColor} card-title`,\n    style: {\n      fontSize: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-arrow-alt-circle-up cc_pointer text-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    className: `${props.textColor} ml-auto`,\n    style: {\n      fontSize: \"20px\",\n      fontWeight: 700\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"[+\", props.todayCount, \"]\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `mask flex-center rgba-${props.hoverColor}-slight`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateInfo: state.stateInfo.statesInfoData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getStatesData: () => dispatch(stateInfoAction())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StateInfo);","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/home/StateInfo.js"],"names":["React","useState","useEffect","connect","Link","stateInfoAction","LiveStats","StateInfo","props","impData","setImpData","getStatesData","stateInfo","length","stateCode","match","params","statename","index","findIndex","name","statecode","state","modeState","hoverColor","badgeColor","fontSize","textColor","fontWeight","count","activegraph","todayCount","mapStateToProps","statesInfoData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./stateinfo.css\";\r\nimport { stateInfoAction } from \"../../store/actions/stateInfoActions\";\r\nimport LiveStats from \"./LiveStats\";\r\n\r\n\r\nconst StateInfo = (props) => {\r\n    const [impData, setImpData] = useState({})\r\n\r\n    useEffect(() => {\r\n        props.getStatesData()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (props.stateInfo.length !== 0) {\r\n            const stateCode = props.match.params.statename\r\n            const index = props.stateInfo.findIndex(name => name.statecode === stateCode)\r\n            const state = props.stateInfo[index]\r\n            setImpData(state)\r\n        }\r\n    }, [props])\r\n\r\n\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            <div class=\"bc-icons-2 bread\">\r\n\r\n                <nav aria-label=\"breadcrumb \">\r\n                    <ol class=\"breadcrumb grey lighten-4\">\r\n                        <li class=\"breadcrumb-item\"><Link class=\"black-text\" to=\"/\">Home</Link></li>\r\n                        <li class=\"breadcrumb-item\"><span> {impData.state} </span></li>\r\n                    </ol>\r\n                </nav>\r\n\r\n            </div>\r\n\r\n            <div className=\"state-counts\">\r\n\r\n\r\n                <div className=\"card mt-4 view overlay\">\r\n        <div\r\n          className={`card-body card-settings  ${props.modeState && 'dark-body'} rgba-${props.hoverColor}-slight`}\r\n        >\r\n          <div className=\"container row\">\r\n            <h3\r\n              className={`card-title ${props.badgeColor}`}\r\n              style={{ fontSize: \"20px\" }}\r\n            >\r\n              {props.name}\r\n            </h3>\r\n            <h3\r\n              className={`${props.textColor} ml-auto`}\r\n              style={{ fontSize: \"20px\", fontWeight: 700 }}\r\n            >\r\n              {props.count}\r\n            </h3>\r\n          </div>\r\n          {props.activegraph}\r\n\r\n          {/* CR for new delta cases */}\r\n          \r\n          {props.todayCount <= 0 ? (\r\n            <p className={`${props.textColor} d-flex justify-content-start `}>No new cases yet</p>\r\n          ) : (\r\n              <div className=\"container row\">\r\n                <h3\r\n                  className={`${props.textColor} card-title`}\r\n                  style={{ fontSize: \"20px\" }}\r\n                >\r\n                  <i className=\"far fa-arrow-alt-circle-up cc_pointer text-small\"></i>\r\n                </h3>\r\n\r\n                <h3\r\n                  className={`${props.textColor} ml-auto`}\r\n                  style={{ fontSize: \"20px\", fontWeight: 700 }}\r\n                >\r\n                  [+{props.todayCount}]\r\n              </h3>\r\n              </div>\r\n            )}\r\n\r\n        </div>\r\n        <div\r\n          className={`mask flex-center rgba-${props.hoverColor}-slight`}\r\n        ></div>\r\n      </div>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        stateInfo: state.stateInfo.statesInfoData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getStatesData: () => dispatch(stateInfoAction())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StateInfo)"]},"metadata":{},"sourceType":"module"}