{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\home\\\\Home.js\";\nimport React, { useEffect } from \"react\";\nimport LiveStats from \"./LiveStats\";\nimport UpdateLiveStats from \"./UpdateLiveStats\";\nimport StateTable from \"./StateTable\";\nimport { connect } from \"react-redux\";\nimport { getLiveStatsAction } from \"../../store/actions/statActions\";\nimport ActiveMiniGraph from \"./minigraphs/ActiveMiniGraph\";\nimport ConfirmedMiniGraph from \"./minigraphs/ConfirmedMiniGraph\";\nimport RecoveredMiniGraph from \"./minigraphs/RecoveredMiniGraph\";\nimport DeceasedMiniGraph from \"./minigraphs/DeceasedMiniGraph\";\nimport TestedSamples from \"./TestedSamples\";\nimport Factoids from './Factoids';\nimport { useEffectOnce, useLocalStorage } from 'react-use';\n\nconst Home = props => {\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage('lastViewedLog', null);\n  const [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false);\n  console.log(props.getLatestUpdates);\n  useEffect(() => {\n    props.getLiveStats();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UpdateLiveStats, {\n    lastUpdatedTime: props.liveStatsData.lastupdatedtime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-6 col-lg-3 d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LiveStats, {\n    name: \"Confirmed\",\n    count: props.liveStatsData.confirmed,\n    todayCount: props.liveStatsData.deltaconfirmed,\n    badgeColor: \"badge badge-danger\",\n    hoverColor: \"red\",\n    textColor: \"text-danger\",\n    activegraph: /*#__PURE__*/React.createElement(ConfirmedMiniGraph, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-6 col-lg-3 d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LiveStats, {\n    name: \"Active\",\n    count: props.liveStatsData.active,\n    todayCount: props.liveStatsData.deltaconfirmed,\n    badgeColor: \"badge badge-primary\",\n    hoverColor: \"blue\",\n    textColor: \"text-primary\",\n    activegraph: /*#__PURE__*/React.createElement(ActiveMiniGraph, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-6 col-lg-3 d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LiveStats, {\n    name: \"Recovered\",\n    count: props.liveStatsData.recovered,\n    todayCount: props.liveStatsData.deltarecovered,\n    badgeColor: \"badge badge-success\",\n    hoverColor: \"green\",\n    textColor: \"text-success\",\n    activegraph: /*#__PURE__*/React.createElement(RecoveredMiniGraph, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-6 col-lg-3 d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LiveStats, {\n    name: \"Deceased\",\n    count: props.liveStatsData.deaths,\n    todayCount: props.liveStatsData.deltadeaths,\n    badgeColor: \"badge badge-light\",\n    hoverColor: \"grey\",\n    textColor: \"text-dark\",\n    activegraph: /*#__PURE__*/React.createElement(DeceasedMiniGraph, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(TestedSamples, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(StateTable, {\n    stateData: props.statesData,\n    textConfirmed: \"text-danger\",\n    textActive: \"text-primary\",\n    textRecovered: \"text-success\",\n    textDeceased: \"text-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    liveStatsData: state.stats.liveStats,\n    statesData: state.stats.statesData,\n    timeSeriesData: state.stats.timeSeries,\n    getLatestUpdates: state.stats.latestUpdates\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getLiveStats: () => dispatch(getLiveStatsAction())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/home/Home.js"],"names":["React","useEffect","LiveStats","UpdateLiveStats","StateTable","connect","getLiveStatsAction","ActiveMiniGraph","ConfirmedMiniGraph","RecoveredMiniGraph","DeceasedMiniGraph","TestedSamples","Factoids","useEffectOnce","useLocalStorage","Home","props","lastViewedLog","setLastViewedLog","newUpdate","setNewUpdate","console","log","getLatestUpdates","getLiveStats","liveStatsData","lastupdatedtime","confirmed","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","statesData","mapStateToProps","state","stats","liveStats","timeSeriesData","timeSeries","latestUpdates","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport LiveStats from \"./LiveStats\";\r\nimport UpdateLiveStats from \"./UpdateLiveStats\";\r\nimport StateTable from \"./StateTable\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLiveStatsAction } from \"../../store/actions/statActions\";\r\nimport ActiveMiniGraph from \"./minigraphs/ActiveMiniGraph\";\r\nimport ConfirmedMiniGraph from \"./minigraphs/ConfirmedMiniGraph\";\r\nimport RecoveredMiniGraph from \"./minigraphs/RecoveredMiniGraph\";\r\nimport DeceasedMiniGraph from \"./minigraphs/DeceasedMiniGraph\";\r\nimport TestedSamples from \"./TestedSamples\";\r\nimport Factoids from './Factoids';\r\nimport {useEffectOnce, useLocalStorage} from 'react-use';\r\n\r\n\r\nconst Home = (props) => {\r\nconst [lastViewedLog, setLastViewedLog] = useLocalStorage('lastViewedLog', null)\r\nconst [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false)\r\n\r\nconsole.log(props.getLatestUpdates)\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    props.getLiveStats();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n\r\n      {/* factoids banner */}\r\n      {/* <Factoids /> */}\r\n      {/* Stats updated at  */}\r\n  \r\n      <div className=\"container\">\r\n        \r\n        <UpdateLiveStats\r\n          lastUpdatedTime={props.liveStatsData.lastupdatedtime}\r\n        />\r\n\r\n        {/* stats cards  */}\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 col-lg-3 d-flex justify-content-center\">\r\n            <LiveStats\r\n              name=\"Confirmed\"\r\n              count={props.liveStatsData.confirmed}\r\n              todayCount={props.liveStatsData.deltaconfirmed}\r\n              badgeColor=\"badge badge-danger\"\r\n              hoverColor=\"red\"\r\n              textColor=\"text-danger\"\r\n              activegraph={<ConfirmedMiniGraph />}\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-6 col-lg-3 d-flex justify-content-center\">\r\n            <LiveStats\r\n              name=\"Active\"\r\n              count={props.liveStatsData.active}\r\n              todayCount={props.liveStatsData.deltaconfirmed}\r\n              badgeColor=\"badge badge-primary\"\r\n              hoverColor=\"blue\"\r\n              textColor=\"text-primary\"\r\n              activegraph={<ActiveMiniGraph />}\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-6 col-lg-3 d-flex justify-content-center\">\r\n            <LiveStats\r\n              name=\"Recovered\"\r\n              count={props.liveStatsData.recovered}\r\n              todayCount={props.liveStatsData.deltarecovered}\r\n              badgeColor=\"badge badge-success\"\r\n              hoverColor=\"green\"\r\n              textColor=\"text-success\"\r\n              activegraph={<RecoveredMiniGraph />}\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-6 col-lg-3 d-flex justify-content-center\">\r\n            <LiveStats\r\n              name=\"Deceased\"\r\n              count={props.liveStatsData.deaths}\r\n              todayCount={props.liveStatsData.deltadeaths}\r\n              badgeColor=\"badge badge-light\"\r\n              hoverColor=\"grey\"\r\n              textColor=\"text-dark\"\r\n              activegraph={<DeceasedMiniGraph />}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <TestedSamples />\r\n\r\n        {/* State wise Table */}\r\n        <StateTable\r\n          stateData={props.statesData}\r\n          textConfirmed=\"text-danger\"\r\n          textActive=\"text-primary\"\r\n          textRecovered=\"text-success\"\r\n          textDeceased=\"text-dark\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    liveStatsData: state.stats.liveStats,\r\n    statesData: state.stats.statesData,\r\n    timeSeriesData: state.stats.timeSeries,\r\n    getLatestUpdates: state.stats.latestUpdates\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getLiveStats: () => dispatch(getLiveStatsAction()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n"]},"metadata":{},"sourceType":"module"}