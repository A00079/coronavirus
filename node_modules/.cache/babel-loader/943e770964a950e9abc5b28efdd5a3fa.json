{"ast":null,"code":"import axios from \"axios\";\nexport const GET_LIVE_STATS = \"GET_LIVE_STATS\";\nexport const ERROR_LIVE_STATS = \"ERROR_LIVE_STATS\";\nexport const FETCHING_LIVE_STATS = \"FETCHING_LIVE_STATS\";\nexport const GET_STATES_DATA = \"GET_STATES_DATA\";\nexport const GET_TIME_SERIES = \"GET_TIME_SERIES\";\nexport const GET_TEST_SAMPLES = \"GET_TEST_SAMPLES\";\nexport const getLiveStatsAction = () => {\n  return dispatch => {\n    dispatch({\n      type: FETCHING_LIVE_STATS\n    });\n    const statsRequest = \"https://api.covid19india.org/data.json\";\n    const factoidsRequest = \"https://api.covid19india.org/data.json\";\n    axios.all([statsRequest, factoidsRequest]).then(axios.spread((...resp) => {\n      const statsResp = resp[0];\n      const factoidsRequest = resp[1];\n      console.log(statsResp); // dispatch({type:GET_LIVE_STATS, payload:resp.data.statewise[0]})\n\n      dispatch({\n        type: GET_STATES_DATA,\n        payload: resp.data.statewise.slice(1, -1)\n      });\n      dispatch({\n        type: GET_TIME_SERIES,\n        payload: resp.data.cases_time_series\n      });\n      dispatch({\n        type: GET_TEST_SAMPLES,\n        payload: resp.data.tested\n      });\n    })).catch(err => {\n      console.log(err);\n      dispatch({\n        type: ERROR_LIVE_STATS,\n        payload: 'Error. Try again'\n      });\n    });\n  };\n};","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/store/actions/statActions.js"],"names":["axios","GET_LIVE_STATS","ERROR_LIVE_STATS","FETCHING_LIVE_STATS","GET_STATES_DATA","GET_TIME_SERIES","GET_TEST_SAMPLES","getLiveStatsAction","dispatch","type","statsRequest","factoidsRequest","all","then","spread","resp","statsResp","console","log","payload","data","statewise","slice","cases_time_series","tested","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAGP,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACtC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACA,UAAMO,YAAY,GAAG,wCAArB;AACA,UAAMC,eAAe,GAAG,wCAAxB;AACAX,IAAAA,KAAK,CACFY,GADH,CACO,CAACF,YAAD,EAAeC,eAAf,CADP,EAEGE,IAFH,CAEQb,KAAK,CAACc,MAAN,CAAa,CAAC,GAAGC,IAAJ,KAAa;AAC9B,YAAMC,SAAS,GAAGD,IAAI,CAAC,CAAD,CAAtB;AACA,YAAMJ,eAAe,GAAGI,IAAI,CAAC,CAAD,CAA5B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ,EAH8B,CAI9B;;AACAR,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAACL,eAAN;AAAuBe,QAAAA,OAAO,EAACJ,IAAI,CAACK,IAAL,CAAUC,SAAV,CAAoBC,KAApB,CAA0B,CAA1B,EAA6B,CAAC,CAA9B;AAA/B,OAAD,CAAR;AACAd,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAACJ,eAAN;AAAuBc,QAAAA,OAAO,EAACJ,IAAI,CAACK,IAAL,CAAUG;AAAzC,OAAD,CAAR;AACAf,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAACH,gBAAN;AAAwBa,QAAAA,OAAO,EAACJ,IAAI,CAACK,IAAL,CAAUI;AAA1C,OAAD,CAAR;AACD,KARK,CAFR,EAWGC,KAXH,CAWUC,GAAD,IAAS;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACAlB,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAACP,gBAAN;AAAwBiB,QAAAA,OAAO,EAAC;AAAhC,OAAD,CAAR;AACD,KAdH;AAeD,GAnBD;AAoBD,CArBM","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const GET_LIVE_STATS = \"GET_LIVE_STATS\";\r\nexport const ERROR_LIVE_STATS = \"ERROR_LIVE_STATS\";\r\nexport const FETCHING_LIVE_STATS = \"FETCHING_LIVE_STATS\";\r\nexport const GET_STATES_DATA = \"GET_STATES_DATA\";\r\nexport const GET_TIME_SERIES = \"GET_TIME_SERIES\";\r\nexport const GET_TEST_SAMPLES = \"GET_TEST_SAMPLES\";\r\n\r\n\r\nexport const getLiveStatsAction = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: FETCHING_LIVE_STATS });\r\n    const statsRequest = \"https://api.covid19india.org/data.json\"\r\n    const factoidsRequest = \"https://api.covid19india.org/data.json\"\r\n    axios\r\n      .all([statsRequest, factoidsRequest])\r\n      .then(axios.spread((...resp) => {\r\n        const statsResp = resp[0]\r\n        const factoidsRequest = resp[1]\r\n        console.log(statsResp)\r\n        // dispatch({type:GET_LIVE_STATS, payload:resp.data.statewise[0]})\r\n        dispatch({type:GET_STATES_DATA, payload:resp.data.statewise.slice(1, -1)})\r\n        dispatch({type:GET_TIME_SERIES, payload:resp.data.cases_time_series})\r\n        dispatch({type:GET_TEST_SAMPLES, payload:resp.data.tested})\r\n      }))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch({type:ERROR_LIVE_STATS, payload:'Error. Try again'})\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}