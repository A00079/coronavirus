{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\home\\\\geographics\\\\Test.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport Maharashtra from \"./Maharashtra.topo.json\";\nimport { feature, topology } from \"topojson\";\nimport { json } from \"d3\";\nconst MAHARASHTRA_TOPO = Maharashtra;\n\nconst Test = () => {\n  const map = useRef(null);\n  const svg = d3.select(map.current);\n  var projection = d3.geo.equirectangular().scale(153).translate([500 / 2, 500 / 2]).precision(.1);\n  var path = d3.geo.path().projection(projection);\n  d3.json(MAHARASHTRA_TOPO, function (error, topology) {\n    if (error) throw error;\n    svg.append(\"path\").datum(topojson.feature(topology, topology.objects.land)).attr(\"d\", path).attr(\"class\", \"land-boundary\");\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    id: \"chart\",\n    height: \"500\",\n    width: \"500\",\n    ref: map,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Test;","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/home/geographics/Test.js"],"names":["React","useRef","useEffect","d3","Maharashtra","feature","topology","json","MAHARASHTRA_TOPO","Test","map","svg","select","current","projection","geo","equirectangular","scale","translate","precision","path","error","append","datum","topojson","objects","land","attr"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,OAAT,EAAmBC,QAAnB,QAAkC,UAAlC;AACA,SAASC,IAAT,QAAqB,IAArB;AAEA,MAAMC,gBAAgB,GAAGJ,WAAzB;;AAEA,MAAMK,IAAI,GAAG,MAAM;AACf,QAAMC,GAAG,GAAGT,MAAM,CAAC,IAAD,CAAlB;AAEA,QAAMU,GAAG,GAAGR,EAAE,CAACS,MAAH,CAAUF,GAAG,CAACG,OAAd,CAAZ;AAEA,MAAIC,UAAU,GAAGX,EAAE,CAACY,GAAH,CAAOC,eAAP,GAChBC,KADgB,CACV,GADU,EAEhBC,SAFgB,CAEN,CAAC,MAAM,CAAP,EAAU,MAAM,CAAhB,CAFM,EAGhBC,SAHgB,CAGN,EAHM,CAAjB;AAKJ,MAAIC,IAAI,GAAGjB,EAAE,CAACY,GAAH,CAAOK,IAAP,GACNN,UADM,CACKA,UADL,CAAX;AAGAX,EAAAA,EAAE,CAACI,IAAH,CAAQC,gBAAR,EAA0B,UAASa,KAAT,EAAgBf,QAAhB,EAA0B;AAChD,QAAIe,KAAJ,EAAW,MAAMA,KAAN;AAEXV,IAAAA,GAAG,CAACW,MAAJ,CAAW,MAAX,EACGC,KADH,CACSC,QAAQ,CAACnB,OAAT,CAAiBC,QAAjB,EAA2BA,QAAQ,CAACmB,OAAT,CAAiBC,IAA5C,CADT,EAEGC,IAFH,CAEQ,GAFR,EAEaP,IAFb,EAGGO,IAHH,CAGQ,OAHR,EAGiB,eAHjB;AAKH,GARD;AAUI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,EAAE,EAAC,OAAR;AAAgB,IAAA,MAAM,EAAC,KAAvB;AAA6B,IAAA,KAAK,EAAC,KAAnC;AAAyC,IAAA,GAAG,EAAEjB,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAMH,CA7BD;;AA8BA,eAAeD,IAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport * as d3 from \"d3\"\r\nimport Maharashtra from \"./Maharashtra.topo.json\";\r\nimport { feature , topology} from \"topojson\"\r\nimport { json } from \"d3\";\r\n\r\nconst MAHARASHTRA_TOPO = Maharashtra\r\n\r\nconst Test = () => {\r\n    const map = useRef(null)\r\n\r\n    const svg = d3.select(map.current)\r\n\r\n    var projection = d3.geo.equirectangular()\r\n    .scale(153)\r\n    .translate([500 / 2, 500 / 2])\r\n    .precision(.1);\r\n\r\nvar path = d3.geo.path()\r\n    .projection(projection);\r\n\r\nd3.json(MAHARASHTRA_TOPO, function(error, topology) {\r\n    if (error) throw error;\r\n\r\n    svg.append(\"path\")\r\n      .datum(topojson.feature(topology, topology.objects.land))\r\n      .attr(\"d\", path)\r\n      .attr(\"class\", \"land-boundary\");\r\n\r\n});\r\n\r\n    return (\r\n        <div>\r\n            <svg id=\"chart\" height=\"500\" width=\"500\" ref={map} >\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\nexport default Test"]},"metadata":{},"sourceType":"module"}