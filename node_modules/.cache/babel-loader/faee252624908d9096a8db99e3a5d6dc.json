{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\demographics\\\\SelectOptions.js\";\nimport React, { useEffect, useState } from 'react';\nimport './demographics.css';\nimport { connect } from 'react-redux';\nimport { getStatesAction } from '../../store/actions/patientActions';\n\nconst SelectOptions = props => {\n  const [stateSelect, setStateSelect] = useState(false);\n  useEffect(() => {\n    props.getStates();\n  }, []);\n\n  const handleSelectChange = e => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, console.log(stateSelect), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row select-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \" btn btn-outline-primary dropdown-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, \"--Select State--\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"All\"), props.allStatesData.map((state, index) => /*#__PURE__*/React.createElement(\"option\", {\n    onChange: handleSelectChange,\n    value: stateSelect,\n    key: index,\n    defaultValue: state.state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, state.state))), stateSelect === true ? /*#__PURE__*/React.createElement(\"select\", {\n    className: \"  btn btn-outline-primary dropdown-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, \"--Select--\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"genderwise\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"Gender Wise Data\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"currentstatus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Current Status\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"transmissiontype\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"Type of Transmission\")) : ''));\n};\n\nconst mapStateToProps = state => {\n  return {\n    allStatesData: state.patient.getStatesData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getStates: () => dispatch(getStatesAction())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectOptions);","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/demographics/SelectOptions.js"],"names":["React","useEffect","useState","connect","getStatesAction","SelectOptions","props","stateSelect","setStateSelect","getStates","handleSelectChange","e","console","log","allStatesData","map","state","index","mapStateToProps","patient","getStatesData","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,oCAAhC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAACG,SAAN;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,kBAAkB,GAAIC,CAAD,IAAO,CAEjC,CAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACiBC,OAAO,CAACC,GAAR,CAAYN,WAAZ,CADjB,eAGI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,0CADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,EAKKD,KAAK,CAACQ,aAAN,CAAoBC,GAApB,CAAwB,CAACC,KAAD,EAAQC,KAAR,kBACrB;AAAQ,IAAA,QAAQ,EAAEP,kBAAlB;AAAsC,IAAA,KAAK,EAAEH,WAA7C;AAA0D,IAAA,GAAG,EAAEU,KAA/D;AAAsE,IAAA,YAAY,EAAED,KAAK,CAACA,KAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkGA,KAAK,CAACA,KAAxG,CADH,CALL,CADJ,EAYKT,WAAW,KAAK,IAAhB,gBACG;AACI,IAAA,SAAS,EAAC,2CADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAQ,IAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI;AAAQ,IAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAQ,IAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANJ,CADH,GASE,EArBP,CAHJ,CADJ;AA6BH,CAzCD;;AA2CA,MAAMW,eAAe,GAAGF,KAAK,IAAI;AAC7B,SAAO;AACHF,IAAAA,aAAa,EAAEE,KAAK,CAACG,OAAN,CAAcC;AAD1B,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHb,IAAAA,SAAS,EAAE,MAAMa,QAAQ,CAAClB,eAAe,EAAhB;AADtB,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAACe,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,aAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './demographics.css'\r\nimport { connect } from 'react-redux';\r\nimport { getStatesAction } from '../../store/actions/patientActions';\r\n\r\nconst SelectOptions = (props) => {\r\n    const [stateSelect, setStateSelect] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        props.getStates()\r\n    }, [])\r\n\r\n    const handleSelectChange = (e) => {\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n                        {console.log(stateSelect)}\r\n\r\n            <div className=\"row select-option\">\r\n                <select\r\n                    className=\" btn btn-outline-primary dropdown-toggle\"\r\n                >\r\n                    <option value=\"Select\">--Select State--</option>\r\n                    <option value=\"all\">All</option>\r\n                    {props.allStatesData.map((state, index) => (\r\n                        <option onChange={handleSelectChange} value={stateSelect} key={index} defaultValue={state.state}>{state.state}</option>\r\n                    ))}\r\n                </select>\r\n\r\n\r\n                {stateSelect === true ? \r\n                    <select\r\n                        className=\"  btn btn-outline-primary dropdown-toggle\"\r\n                    >\r\n                        <option value=\"Select\">--Select--</option>\r\n                        <option value=\"genderwise\">Gender Wise Data</option>\r\n                        <option value=\"currentstatus\">Current Status</option>\r\n                        <option value=\"transmissiontype\">Type of Transmission</option>\r\n                    </select>\r\n                 : ''}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allStatesData: state.patient.getStatesData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getStates: () => dispatch(getStatesAction())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectOptions)"]},"metadata":{},"sourceType":"module"}