{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\home\\\\StateInfo.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { stateInfoAction } from \"../../store/actions/stateInfoActions\";\n\nconst StateInfo = props => {\n  console.log(props.statesData);\n  useEffect(() => {\n    props.getStatesData();\n  }, []);\n  const stateCode = props.match.params.stateCode;\n  const index = props.statesData.findIndex(name => name.statecode === stateCode);\n  console.log(index);\n  const state = props.statesData[index];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"state information inDEEEP thats wat she said\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"In the state OF fucking \", state.state)));\n};\n\nconst mapStateToProps = state => {\n  return {\n    statesData: state.stateInfo.statesData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getStatesData: () => dispatch(stateInfoAction())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StateInfo);","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/home/StateInfo.js"],"names":["React","useEffect","connect","stateInfoAction","StateInfo","props","console","log","statesData","getStatesData","stateCode","match","params","index","findIndex","name","statecode","state","mapStateToProps","stateInfo","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,sCAAhC;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACI,aAAN;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,QAAMC,SAAS,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBF,SAArC;AAEA,QAAMG,KAAK,GAAGR,KAAK,CAACG,UAAN,CAAiBM,SAAjB,CAA2BC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmBN,SAAtD,CAAd;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,QAAMI,KAAK,GAAGZ,KAAK,CAACG,UAAN,CAAiBK,KAAjB,CAAd;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAC6BI,KAAK,CAACA,KADnC,CADJ,CAFJ,CADJ;AAUH,CAxBD;;AA0BA,MAAMC,eAAe,GAAGD,KAAK,IAAI;AAC7B,SAAO;AACHT,IAAAA,UAAU,EAAES,KAAK,CAACE,SAAN,CAAgBX;AADzB,GAAP;AAGH,CAJD;;AAMA,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHZ,IAAAA,aAAa,EAAE,MAAMY,QAAQ,CAAClB,eAAe,EAAhB;AAD1B,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,SAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { stateInfoAction } from \"../../store/actions/stateInfoActions\";\r\n\r\n\r\nconst StateInfo = (props) => {\r\n    console.log(props.statesData)\r\n\r\n    useEffect(() => {\r\n        props.getStatesData()\r\n    },[])\r\n\r\n    const stateCode = props.match.params.stateCode\r\n\r\n    const index = props.statesData.findIndex(name => name.statecode === stateCode)\r\n    console.log(index)\r\n    const state = props.statesData[index]\r\n\r\n\r\n    return (\r\n        <div>\r\n            state information inDEEEP thats wat she said\r\n            <div>\r\n                <p>\r\n                    In the state OF fucking {state.state}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        statesData: state.stateInfo.statesData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getStatesData: () => dispatch(stateInfoAction())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StateInfo)"]},"metadata":{},"sourceType":"module"}