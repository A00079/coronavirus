{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\home\\\\StateInfo.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./stateinfo.css\";\nimport { stateInfoAction } from \"../../store/actions/stateInfoActions\";\n\nconst StateInfo = props => {\n  const [stateSelect, setStateSelect] = useState();\n  useEffect(() => {\n    props.getStatesData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const stateCode = props.match.params.stateCode;\n  const index = props.stateInfo.findIndex(name => name.statecode === stateCode);\n  console.log(index);\n  const state = props.stateInfo[index];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"bc-icons-2 bread\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    class: \"breadcrumb grey lighten-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    class: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    class: \"black-text\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 53\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-caret-right mx-2\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 96\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    class: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: event => setStateSelect(event.target.value),\n    value: stateSelect,\n    className: \"  dropdown-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    Value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  }, \"--Select State--\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }\n  }, \"All\"), props.stateInfo.sort().map((state, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    Value: state.state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  }, state.state))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateInfo: state.stateInfo.statesInfoData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getStatesData: () => dispatch(stateInfoAction())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StateInfo);","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/home/StateInfo.js"],"names":["React","useEffect","useState","connect","Link","stateInfoAction","StateInfo","props","stateSelect","setStateSelect","getStatesData","stateCode","match","params","index","stateInfo","findIndex","name","statecode","console","log","state","event","target","value","sort","map","mapStateToProps","statesInfoData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./stateinfo.css\";\r\nimport { stateInfoAction } from \"../../store/actions/stateInfoActions\";\r\n\r\n\r\nconst StateInfo = (props) => {\r\n    const [stateSelect, setStateSelect] = useState()\r\n\r\n    useEffect(() => {\r\n        props.getStatesData()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const stateCode = props.match.params.stateCode\r\n    const index = props.stateInfo.findIndex(name => name.statecode === stateCode)\r\n    console.log(index)\r\n    const state = props.stateInfo[index]\r\n\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            <div class=\"bc-icons-2 bread\">\r\n\r\n                <nav aria-label=\"breadcrumb \">\r\n                    <ol class=\"breadcrumb grey lighten-4\">\r\n                        <li class=\"breadcrumb-item\"><Link class=\"black-text\" to=\"/\">Home</Link><i class=\"fas fa-caret-right mx-2\"\r\n                            aria-hidden=\"true\"></i></li>\r\n\r\n                        <li class=\"breadcrumb-item\">\r\n                            <select\r\n                                onChange={(event) => setStateSelect(event.target.value)}\r\n                                value={stateSelect}\r\n                                className=\"  dropdown-toggle\"\r\n                            >\r\n                                <option Value=\"\" disabled>--Select State--</option>\r\n                                <option value=\"all\">All</option>\r\n                                {props.stateInfo.sort().map((state, index) => (\r\n                                    <option key={index} Value={state.state}>{state.state}</option>\r\n                                ))}\r\n                            </select>\r\n                        </li>\r\n                    </ol>\r\n                </nav>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        stateInfo: state.stateInfo.statesInfoData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getStatesData: () => dispatch(stateInfoAction())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StateInfo)"]},"metadata":{},"sourceType":"module"}