{"ast":null,"code":"import axios from \"axios\";\nexport const GET_LIVE_STATS = \"GET_LIVE_STATS\";\nexport const ERROR_LIVE_STATS = \"ERROR_LIVE_STATS\";\nexport const FETCHING_LIVE_STATS = \"FETCHING_LIVE_STATS\";\nexport const GET_STATES_DATA = \"GET_STATES_DATA\";\nexport const GET_TIME_SERIES = \"GET_TIME_SERIES\";\nexport const GET_TEST_SAMPLES = \"GET_TEST_SAMPLES\";\nexport const GET_FACTOIDS = \"GET_FACTOIDS\";\nexport const GET_UPDATES = \"GET_UPDATES\";\nexport const getLiveStatsAction = () => {\n  return dispatch => {\n    dispatch({\n      type: FETCHING_LIVE_STATS\n    });\n    const statsRequest = \"https://api.covid19india.org/data.json\";\n    const factoidsRequest = \"https://api.covid19india.org/website_data.json\";\n    const updatesRequest = \"https://api.covid19india.org/updatelog/log.json\";\n    const statsResp = axios.get(statsRequest);\n    const factoidsResp = axios.get(factoidsRequest);\n    const updatesResp = axios.get(updatesRequest);\n    axios.all([statsResp, factoidsResp, updatesResp]).then(axios.spread((...allData) => {\n      const allDataStats = allData[0];\n      const allDataFactoids = allData[1];\n      const allDataUpdates = allData[2];\n      console.log(allDataUpdates.data);\n      dispatch({\n        type: GET_LIVE_STATS,\n        payload: allDataStats.data.statewise[0]\n      });\n      dispatch({\n        type: GET_STATES_DATA,\n        payload: allDataStats.data.statewise.slice(1, -1)\n      });\n      dispatch({\n        type: GET_TIME_SERIES,\n        payload: allDataStats.data.cases_time_series\n      });\n      dispatch({\n        type: GET_TEST_SAMPLES,\n        payload: allDataStats.data.tested\n      });\n      dispatch({\n        type: GET_FACTOIDS,\n        payload: allDataFactoids.data.factoids\n      });\n      dispatch({\n        type: GET_UPDATES,\n        payload: allDataFactoids.data\n      });\n    })).catch(err => {\n      console.log(err);\n      dispatch({\n        type: ERROR_LIVE_STATS,\n        payload: 'Error. Try again'\n      });\n    });\n  };\n};","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/store/actions/statActions.js"],"names":["axios","GET_LIVE_STATS","ERROR_LIVE_STATS","FETCHING_LIVE_STATS","GET_STATES_DATA","GET_TIME_SERIES","GET_TEST_SAMPLES","GET_FACTOIDS","GET_UPDATES","getLiveStatsAction","dispatch","type","statsRequest","factoidsRequest","updatesRequest","statsResp","get","factoidsResp","updatesResp","all","then","spread","allData","allDataStats","allDataFactoids","allDataUpdates","console","log","data","payload","statewise","slice","cases_time_series","tested","factoids","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAGP,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACtC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AACA,UAAMS,YAAY,GAAG,wCAArB;AACA,UAAMC,eAAe,GAAG,gDAAxB;AACA,UAAMC,cAAc,GAAG,iDAAvB;AAEA,UAAMC,SAAS,GAAGf,KAAK,CAACgB,GAAN,CAAUJ,YAAV,CAAlB;AACA,UAAMK,YAAY,GAAGjB,KAAK,CAACgB,GAAN,CAAUH,eAAV,CAArB;AACA,UAAMK,WAAW,GAAGlB,KAAK,CAACgB,GAAN,CAAUF,cAAV,CAApB;AAEAd,IAAAA,KAAK,CACFmB,GADH,CACO,CAACJ,SAAD,EAAYE,YAAZ,EAA0BC,WAA1B,CADP,EAEGE,IAFH,CAEQpB,KAAK,CAACqB,MAAN,CAAa,CAAC,GAAGC,OAAJ,KAAgB;AACjC,YAAMC,YAAY,GAAGD,OAAO,CAAC,CAAD,CAA5B;AACA,YAAME,eAAe,GAAGF,OAAO,CAAC,CAAD,CAA/B;AACA,YAAMG,cAAc,GAAGH,OAAO,CAAC,CAAD,CAA9B;AAEAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAc,CAACG,IAA3B;AAEAlB,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAACV,cAAN;AAAsB4B,QAAAA,OAAO,EAACN,YAAY,CAACK,IAAb,CAAkBE,SAAlB,CAA4B,CAA5B;AAA9B,OAAD,CAAR;AACApB,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAACP,eAAN;AAAuByB,QAAAA,OAAO,EAACN,YAAY,CAACK,IAAb,CAAkBE,SAAlB,CAA4BC,KAA5B,CAAkC,CAAlC,EAAqC,CAAC,CAAtC;AAA/B,OAAD,CAAR;AACArB,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAACN,eAAN;AAAuBwB,QAAAA,OAAO,EAACN,YAAY,CAACK,IAAb,CAAkBI;AAAjD,OAAD,CAAR;AACAtB,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAACL,gBAAN;AAAwBuB,QAAAA,OAAO,EAACN,YAAY,CAACK,IAAb,CAAkBK;AAAlD,OAAD,CAAR;AACAvB,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAACJ,YAAN;AAAoBsB,QAAAA,OAAO,EAACL,eAAe,CAACI,IAAhB,CAAqBM;AAAjD,OAAD,CAAR;AACAxB,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAACH,WAAN;AAAmBqB,QAAAA,OAAO,EAACL,eAAe,CAACI;AAA3C,OAAD,CAAR;AACD,KAbK,CAFR,EAgBGO,KAhBH,CAgBUC,GAAD,IAAS;AACdV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACA1B,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAACT,gBAAN;AAAwB2B,QAAAA,OAAO,EAAC;AAAhC,OAAD,CAAR;AACD,KAnBH;AAoBD,GA9BD;AA+BD,CAhCM","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const GET_LIVE_STATS = \"GET_LIVE_STATS\";\r\nexport const ERROR_LIVE_STATS = \"ERROR_LIVE_STATS\";\r\nexport const FETCHING_LIVE_STATS = \"FETCHING_LIVE_STATS\";\r\nexport const GET_STATES_DATA = \"GET_STATES_DATA\";\r\nexport const GET_TIME_SERIES = \"GET_TIME_SERIES\";\r\nexport const GET_TEST_SAMPLES = \"GET_TEST_SAMPLES\";\r\nexport const GET_FACTOIDS = \"GET_FACTOIDS\";\r\nexport const GET_UPDATES = \"GET_UPDATES\";\r\n\r\n\r\nexport const getLiveStatsAction = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: FETCHING_LIVE_STATS });\r\n    const statsRequest = \"https://api.covid19india.org/data.json\"\r\n    const factoidsRequest = \"https://api.covid19india.org/website_data.json\"\r\n    const updatesRequest = \"https://api.covid19india.org/updatelog/log.json\"\r\n\r\n    const statsResp = axios.get(statsRequest)\r\n    const factoidsResp = axios.get(factoidsRequest)\r\n    const updatesResp = axios.get(updatesRequest)\r\n\r\n    axios\r\n      .all([statsResp, factoidsResp, updatesResp])\r\n      .then(axios.spread((...allData) => {\r\n        const allDataStats = allData[0]\r\n        const allDataFactoids = allData[1]\r\n        const allDataUpdates = allData[2]\r\n        \r\n        console.log(allDataUpdates.data)\r\n\r\n        dispatch({type:GET_LIVE_STATS, payload:allDataStats.data.statewise[0]})  \r\n        dispatch({type:GET_STATES_DATA, payload:allDataStats.data.statewise.slice(1, -1)})\r\n        dispatch({type:GET_TIME_SERIES, payload:allDataStats.data.cases_time_series})\r\n        dispatch({type:GET_TEST_SAMPLES, payload:allDataStats.data.tested})\r\n        dispatch({type:GET_FACTOIDS, payload:allDataFactoids.data.factoids})\r\n        dispatch({type:GET_UPDATES, payload:allDataFactoids.data})\r\n      }))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch({type:ERROR_LIVE_STATS, payload:'Error. Try again'})\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}