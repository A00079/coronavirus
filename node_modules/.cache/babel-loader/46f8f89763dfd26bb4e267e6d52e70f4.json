{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\home\\\\LatestUpdates.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useEffectOnce, useLocalStorage } from \"react-use\";\nimport { formatDate, formatDateAbsolute, preprocessTimeseries } from \"../../utils/commonFunctions\";\n\nconst LatestUpdates = props => {\n  //   console.log(props.applicationUpdate.lastupdatedtime);\n  //   console.log(props.getLatestUpdates.toString());\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage(\"lastViewedLog\", null);\n  const [newUpdate, setNewUpdate] = useLocalStorage(\"newUpdate\", false);\n  const [lastUpdated, setLastUpdated] = useState(\"\");\n  const [showUpdates, setShowUpdates] = useState(false); //   setting localstorages\n\n  useEffectOnce(() => {\n    const lastTimestamp = props.getLatestUpdates.toString();\n\n    if (lastTimestamp !== lastViewedLog) {\n      setNewUpdate(true);\n      setLastViewedLog(lastTimestamp);\n    }\n  }); //   setting last updated time for this wholeeeeee thing\n\n  setLastUpdated(props.applicationUpdate.lastupdatedtime);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notifications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, isNaN(Date.parse(formatDate(lastUpdated))) ? \"\" : formatDateAbsolute(lastUpdated))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    getLatestUpdates: state.stats.latestUpdates,\n    applicationUpdate: state.stats.liveStats\n  };\n};\n\nexport default connect(mapStateToProps)(LatestUpdates);","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/home/LatestUpdates.js"],"names":["React","useState","connect","useEffectOnce","useLocalStorage","formatDate","formatDateAbsolute","preprocessTimeseries","LatestUpdates","props","lastViewedLog","setLastViewedLog","newUpdate","setNewUpdate","lastUpdated","setLastUpdated","showUpdates","setShowUpdates","lastTimestamp","getLatestUpdates","toString","applicationUpdate","lastupdatedtime","isNaN","Date","parse","mapStateToProps","state","stats","latestUpdates","liveStats"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,WAA/C;AACA,SACEC,UADF,EAEEC,kBAFF,EAGEC,oBAHF,QAIO,6BAJP;;AAMA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B;AACA;AAEA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,eAAe,CACvD,eADuD,EAEvD,IAFuD,CAAzD;AAIA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,eAAe,CAAC,WAAD,EAAc,KAAd,CAAjD;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,KAAD,CAA9C,CAV+B,CAY/B;;AACAE,EAAAA,aAAa,CAAC,MAAM;AAClB,UAAMe,aAAa,GAAGT,KAAK,CAACU,gBAAN,CAAuBC,QAAvB,EAAtB;;AACA,QAAIF,aAAa,KAAKR,aAAtB,EAAqC;AACnCG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,MAAAA,gBAAgB,CAACO,aAAD,CAAhB;AACD;AACF,GANY,CAAb,CAb+B,CAqB/B;;AACAH,EAAAA,cAAc,CAACN,KAAK,CAACY,iBAAN,CAAwBC,eAAzB,CAAd;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,IAAI,CAACC,KAAL,CAAWpB,UAAU,CAACS,WAAD,CAArB,CAAD,CAAL,GACG,EADH,GAEGR,kBAAkB,CAACQ,WAAD,CAHxB,CADF,CADF,CADF;AAWD,CAnCD;;AAqCA,MAAMY,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLR,IAAAA,gBAAgB,EAAEQ,KAAK,CAACC,KAAN,CAAYC,aADzB;AAELR,IAAAA,iBAAiB,EAAEM,KAAK,CAACC,KAAN,CAAYE;AAF1B,GAAP;AAID,CALD;;AAOA,eAAe5B,OAAO,CAACwB,eAAD,CAAP,CAAyBlB,aAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffectOnce, useLocalStorage } from \"react-use\";\r\nimport {\r\n  formatDate,\r\n  formatDateAbsolute,\r\n  preprocessTimeseries,\r\n} from \"../../utils/commonFunctions\";\r\n\r\nconst LatestUpdates = (props) => {\r\n  //   console.log(props.applicationUpdate.lastupdatedtime);\r\n  //   console.log(props.getLatestUpdates.toString());\r\n\r\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage(\r\n    \"lastViewedLog\",\r\n    null\r\n  );\r\n  const [newUpdate, setNewUpdate] = useLocalStorage(\"newUpdate\", false);\r\n  const [lastUpdated, setLastUpdated] = useState(\"\");\r\n  const [showUpdates, setShowUpdates] = useState(false);\r\n\r\n  //   setting localstorages\r\n  useEffectOnce(() => {\r\n    const lastTimestamp = props.getLatestUpdates.toString();\r\n    if (lastTimestamp !== lastViewedLog) {\r\n      setNewUpdate(true);\r\n      setLastViewedLog(lastTimestamp);\r\n    }\r\n  });\r\n\r\n  //   setting last updated time for this wholeeeeee thing\r\n  setLastUpdated(props.applicationUpdate.lastupdatedtime);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"notifications\">\r\n        <h5>\r\n          {isNaN(Date.parse(formatDate(lastUpdated)))\r\n            ? \"\"\r\n            : formatDateAbsolute(lastUpdated)}\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLatestUpdates: state.stats.latestUpdates,\r\n    applicationUpdate: state.stats.liveStats,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LatestUpdates);\r\n"]},"metadata":{},"sourceType":"module"}