{"ast":null,"code":"import React,{useEffect}from\"react\";import LiveStats from\"./LiveStats\";import UpdateLiveStats from\"./UpdateLiveStats\";import StateTable from\"./StateTable\";import{connect}from\"react-redux\";import{getLiveStatsAction}from\"../../store/actions/statActions\";var Home=function Home(props){useEffect(function(){props.getLiveStats();},[]);return/*#__PURE__*/React.createElement(\"div\",{className:\"home\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container mt-3 \"},/*#__PURE__*/React.createElement(UpdateLiveStats,{lastUpdatedTime:props.liveStatsData.lastupdatedtime}),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-sm-6 col-lg-3 d-flex justify-content-center\"},/*#__PURE__*/React.createElement(LiveStats,{name:\"Confirmed\",count:props.liveStatsData.confirmed,todayCount:props.liveStatsData.deltaconfirmed,badgeColor:\"badge badge-danger\",hoverColor:\"red\",textColor:\"text-danger\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"col-sm-6 col-lg-3 d-flex justify-content-center\"},/*#__PURE__*/React.createElement(LiveStats,{name:\"Active\",count:props.liveStatsData.active,todayCount:props.liveStatsData.deltaconfirmed,badgeColor:\"badge badge-primary\",hoverColor:\"blue\",textColor:\"text-primary\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"col-sm-6 col-lg-3 d-flex justify-content-center\"},/*#__PURE__*/React.createElement(LiveStats,{name:\"Recovered\",count:props.liveStatsData.recovered,todayCount:props.liveStatsData.deltarecovered,badgeColor:\"badge badge-success\",hoverColor:\"green\",textColor:\"text-success\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"col-sm-6 col-lg-3 d-flex justify-content-center\"},/*#__PURE__*/React.createElement(LiveStats,{name:\"Deceased\",count:props.liveStatsData.deaths,todayCount:props.liveStatsData.deltadeaths,badgeColor:\"badge badge-light\",hoverColor:\"grey\",textColor:\"text-dark\"}))),/*#__PURE__*/React.createElement(StateTable,{stateData:props.statesData})));};var mapStateToProps=function mapStateToProps(state){return{liveStatsData:state.stats.liveStats,statesData:state.stats.statesData};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getLiveStats:function getLiveStats(){return dispatch(getLiveStatsAction());}};};export default connect(mapStateToProps,mapDispatchToProps)(Home);","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/home/Home.js"],"names":["React","useEffect","LiveStats","UpdateLiveStats","StateTable","connect","getLiveStatsAction","Home","props","getLiveStats","liveStatsData","lastupdatedtime","confirmed","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","statesData","mapStateToProps","state","stats","liveStats","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,kBAAT,KAAmC,iCAAnC,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,CAEtBP,SAAS,CAAC,UAAM,CACdO,KAAK,CAACC,YAAN,GACD,CAFQ,CAEN,EAFM,CAAT,CAKA,mBACE,2BAAK,SAAS,CAAC,MAAf,eAEE,2BAAK,SAAS,CAAC,iBAAf,eACE,oBAAC,eAAD,EAAiB,eAAe,CAAID,KAAK,CAACE,aAAN,CAAoBC,eAAxD,EADF,cAIE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,iDAAf,eACE,oBAAC,SAAD,EACE,IAAI,CAAC,WADP,CAEE,KAAK,CAAEH,KAAK,CAACE,aAAN,CAAoBE,SAF7B,CAGE,UAAU,CAAEJ,KAAK,CAACE,aAAN,CAAoBG,cAHlC,CAIE,UAAU,CAAC,oBAJb,CAKE,UAAU,CAAC,KALb,CAME,SAAS,CAAC,aANZ,EADF,CADF,cAWE,2BAAK,SAAS,CAAC,iDAAf,eACE,oBAAC,SAAD,EACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAEL,KAAK,CAACE,aAAN,CAAoBI,MAF7B,CAGE,UAAU,CAAEN,KAAK,CAACE,aAAN,CAAoBG,cAHlC,CAIE,UAAU,CAAC,qBAJb,CAKE,UAAU,CAAC,MALb,CAME,SAAS,CAAC,cANZ,EADF,CAXF,cAqBE,2BAAK,SAAS,CAAC,iDAAf,eACE,oBAAC,SAAD,EACE,IAAI,CAAC,WADP,CAEE,KAAK,CAAEL,KAAK,CAACE,aAAN,CAAoBK,SAF7B,CAGE,UAAU,CAAEP,KAAK,CAACE,aAAN,CAAoBM,cAHlC,CAIE,UAAU,CAAC,qBAJb,CAKE,UAAU,CAAC,OALb,CAME,SAAS,CAAC,cANZ,EADF,CArBF,cA+BE,2BAAK,SAAS,CAAC,iDAAf,eACE,oBAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,KAAK,CAAER,KAAK,CAACE,aAAN,CAAoBO,MAF7B,CAGE,UAAU,CAAET,KAAK,CAACE,aAAN,CAAoBQ,WAHlC,CAIE,UAAU,CAAC,mBAJb,CAKE,UAAU,CAAC,MALb,CAME,SAAS,CAAC,WANZ,EADF,CA/BF,CAJF,cAgDE,oBAAC,UAAD,EAAY,SAAS,CAAIV,KAAK,CAACW,UAA/B,EAhDF,CAFF,CADF,CAuDD,CA9DD,CAgEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLX,aAAa,CAAEW,KAAK,CAACC,KAAN,CAAYC,SADtB,CAELJ,UAAU,CAAEE,KAAK,CAACC,KAAN,CAAYH,UAFnB,CAAP,CAID,CALD,CAOA,GAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACvC,MAAO,CACLhB,YAAY,CAAE,8BAAMgB,CAAAA,QAAQ,CAACnB,kBAAkB,EAAnB,CAAd,EADT,CAAP,CAGD,CAJD,CAMA,cAAeD,CAAAA,OAAO,CAACe,eAAD,CAAkBI,kBAAlB,CAAP,CAA6CjB,IAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport LiveStats from \"./LiveStats\";\r\nimport UpdateLiveStats from \"./UpdateLiveStats\";\r\nimport StateTable from \"./StateTable\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLiveStatsAction } from \"../../store/actions/statActions\";\r\n\r\nconst Home = (props) => {\r\n\r\n  useEffect(() => {\r\n    props.getLiveStats();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {/* Stats updated at  */}\r\n      <div className=\"container mt-3 \">\r\n        <UpdateLiveStats lastUpdatedTime = {props.liveStatsData.lastupdatedtime}/>\r\n\r\n        {/* stats cards  */}\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 col-lg-3 d-flex justify-content-center\">\r\n            <LiveStats\r\n              name=\"Confirmed\"\r\n              count={props.liveStatsData.confirmed}\r\n              todayCount={props.liveStatsData.deltaconfirmed}\r\n              badgeColor=\"badge badge-danger\"\r\n              hoverColor=\"red\"\r\n              textColor=\"text-danger\"\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-6 col-lg-3 d-flex justify-content-center\">\r\n            <LiveStats\r\n              name=\"Active\"\r\n              count={props.liveStatsData.active}\r\n              todayCount={props.liveStatsData.deltaconfirmed}\r\n              badgeColor=\"badge badge-primary\"\r\n              hoverColor=\"blue\"\r\n              textColor=\"text-primary\"\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-6 col-lg-3 d-flex justify-content-center\">\r\n            <LiveStats\r\n              name=\"Recovered\"\r\n              count={props.liveStatsData.recovered}\r\n              todayCount={props.liveStatsData.deltarecovered}\r\n              badgeColor=\"badge badge-success\"\r\n              hoverColor=\"green\"\r\n              textColor=\"text-success\"\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-6 col-lg-3 d-flex justify-content-center\">\r\n            <LiveStats\r\n              name=\"Deceased\"\r\n              count={props.liveStatsData.deaths}\r\n              todayCount={props.liveStatsData.deltadeaths}\r\n              badgeColor=\"badge badge-light\"\r\n              hoverColor=\"grey\"\r\n              textColor=\"text-dark\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* State wise Table */}\r\n        <StateTable stateData = {props.statesData}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    liveStatsData: state.stats.liveStats,\r\n    statesData: state.stats.statesData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getLiveStats: () => dispatch(getLiveStatsAction()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n"]},"metadata":{},"sourceType":"module"}