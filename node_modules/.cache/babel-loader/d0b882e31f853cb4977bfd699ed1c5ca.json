{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\home\\\\geographics\\\\IndiaMap.js\";\nimport React from 'react';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\n\nconst INDIA_TOPO_JSON = require('./india.topo.json');\n\nconst PROJECTION_CONFIG = {\n  scale: 350,\n  center: [78.9629, 22.5937] // always in [East Latitude, North Longitude]\n\n};\n\nconst IndiaMap = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComposableMap, {\n    projectionConfig: PROJECTION_CONFIG,\n    projection: \"geoMercator\",\n    width: 600,\n    height: 220,\n    \"data-tip\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Geographies, {\n    geography: INDIA_TOPO_JSON,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, ({\n    geographies\n  }) => geographies.map(geo => {\n    const current = data.find(s => s.id === geo.id);\n    return /*#__PURE__*/React.createElement(Geography //   key={geo.rsmKey}\n    //   geography={geo}\n    //   fill={current ? colorScale(current.value) : DEFAULT_COLOR}\n    //   style={geographyStyle}\n    //   onMouseEnter={onMouseEnter(geo, current)}\n    //   onMouseLeave={onMouseLeave}\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    });\n  }))));\n};\n\nexport default IndiaMap;","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/home/geographics/IndiaMap.js"],"names":["React","ComposableMap","Geographies","Geography","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","IndiaMap","geographies","map","geo","current","data","find","s","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,WAAvB,EAAoCC,SAApC,QAAoD,mBAApD;;AACA,MAAMC,eAAe,GAAIC,OAAO,CAAC,mBAAD,CAAhC;;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV,CAFc,CAEK;;AAFL,CAA1B;;AAKA,MAAMC,QAAQ,GAAG,MAAM;AACnB,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AACJ,IAAA,gBAAgB,EAAEH,iBADd;AAEJ,IAAA,UAAU,EAAC,aAFP;AAGJ,IAAA,KAAK,EAAE,GAHH;AAIJ,IAAA,MAAM,EAAE,GAJJ;AAKJ,gBAAS,EALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOJ,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEF,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEM,IAAAA;AAAF,GAAD,KACCA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,IAAI;AACrB,UAAMC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,GAAG,CAACK,EAA5B,CAAhB;AACA,wBACE,oBAAC,SAAD,CACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAZD,CAFJ,CAPI,CADJ,CADJ;AA6BH,CA9BD;;AAgCA,eAAeR,QAAf","sourcesContent":["import React from 'react';\r\nimport {ComposableMap, Geographies, Geography} from 'react-simple-maps';\r\nconst INDIA_TOPO_JSON =  require('./india.topo.json');\r\n\r\nconst PROJECTION_CONFIG = {\r\n    scale: 350,\r\n    center: [78.9629, 22.5937] // always in [East Latitude, North Longitude]\r\n  };\r\n\r\nconst IndiaMap = () => {\r\n    return (\r\n        <div>\r\n            <ComposableMap\r\n        projectionConfig={PROJECTION_CONFIG}\r\n        projection=\"geoMercator\"\r\n        width={600}\r\n        height={220}\r\n        data-tip=\"\"\r\n    >\r\n        <Geographies geography={INDIA_TOPO_JSON}>\r\n          {({ geographies }) =>\r\n            geographies.map(geo => {\r\n              const current = data.find(s => s.id === geo.id);\r\n              return (\r\n                <Geography\r\n                //   key={geo.rsmKey}\r\n                //   geography={geo}\r\n                //   fill={current ? colorScale(current.value) : DEFAULT_COLOR}\r\n                //   style={geographyStyle}\r\n                //   onMouseEnter={onMouseEnter(geo, current)}\r\n                //   onMouseLeave={onMouseLeave}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n    </ComposableMap>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndiaMap"]},"metadata":{},"sourceType":"module"}