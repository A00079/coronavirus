{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\home\\\\LatestUpdates.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport '../../index.css';\n\nconst LatestUpdates = props => {\n  const [latestUpdates, setLatestUpdates] = useState(false);\n  var test;\n  test = localStorage.getItem('dark-mode');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    onClick: () => setLatestUpdates(!latestUpdates),\n    className: \"updates\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 6\n    }\n  }, props.getLatestUpdates.length, \" \"), \"Latest Updates\", latestUpdates ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"mt-1 far fa-bell-slash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"mt-1 far fa-bell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 68\n    }\n  }))), latestUpdates && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"latest-updates col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }\n  }, props.getLatestUpdates.slice(0, -1).map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: ` ${props.modeState && 'dark-body'} note note-info mt-3`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: `${test === true ? 'rgba-red-slight' : 'rgba-black-slight'}  `,\n    style: {\n      padding: \"10px\",\n      borderRadius: \"10px\",\n      fontStyle: \"Italic\",\n      fontWeight: \"600\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Title : \", item.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, item.excerpt), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Published At : \", new Date(item.publishedDateTime).toDateString()))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    getLatestUpdates: state.stats.latestUpdates,\n    modeState: state.darkMode.hasmode\n  };\n};\n\nexport default connect(mapStateToProps)(LatestUpdates);","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/home/LatestUpdates.js"],"names":["React","useState","connect","LatestUpdates","props","latestUpdates","setLatestUpdates","test","localStorage","getItem","getLatestUpdates","length","slice","map","item","index","modeState","padding","borderRadius","fontStyle","fontWeight","title","excerpt","Date","publishedDateTime","toDateString","mapStateToProps","state","stats","darkMode","hasmode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,iBAAP;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAChC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,KAAD,CAAlD;AAEA,MAAIM,IAAJ;AACAA,EAAAA,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAP;AAEA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAG,IAAA,OAAO,EAAE,MAAMH,gBAAgB,CAAC,CAACD,aAAF,CAAlC;AAAoD,IAAA,SAAS,EAAC,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCD,KAAK,CAACM,gBAAN,CAAuBC,MAA3D,MADD,oBAEEN,aAAa,gBAAG;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAgD;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF/D,CADD,CADD,EAQEA,aAAa,iBAEb;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,KAAK,CAACM,gBAAN,CACCE,KADD,CACO,CADP,EACU,CAAC,CADX,EAECC,GAFD,CAEK,CAACC,IAAD,EAAOC,KAAP,kBAEJ;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAG,IAAGX,KAAK,CAACY,SAAN,IAAmB,WAAY,sBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAG,IAAA,SAAS,EAAG,GAAET,IAAI,KAAK,IAAT,GAAgB,iBAAhB,GAAoC,mBAAoB,IAAzE;AAA8E,IAAA,KAAK,EAAE;AAAEU,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,YAAY,EAAE,MAAjC;AAAyCC,MAAAA,SAAS,EAAE,QAApD;AAA8DC,MAAAA,UAAU,EAAE;AAA1E,KAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiLN,IAAI,CAACO,KAAtL,CADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,IAAI,CAACQ,OAAT,CAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoB,IAAIC,IAAJ,CAAST,IAAI,CAACU,iBAAd,EAAiCC,YAAjC,EAApB,CAHD,CADD,CAJD,CADF,CADD,eAeC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfD,CAVF,CADD;AAiCA,CAvCD;;AAyCA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACNjB,IAAAA,gBAAgB,EAAEiB,KAAK,CAACC,KAAN,CAAYvB,aADxB;AAENW,IAAAA,SAAS,EAAEW,KAAK,CAACE,QAAN,CAAeC;AAFpB,GAAP;AAIA,CALD;;AAOA,eAAe5B,OAAO,CAACwB,eAAD,CAAP,CAAyBvB,aAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../../index.css';\r\n\r\nconst LatestUpdates = (props) => {\r\n\tconst [latestUpdates, setLatestUpdates] = useState(false);\r\n\r\n\tvar test\r\n\ttest = localStorage.getItem('dark-mode')\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<p onClick={() => setLatestUpdates(!latestUpdates)} className=\"updates\">\r\n\t\t\t\t\t<span className=\"badge badge-info\">{props.getLatestUpdates.length} </span>Latest Updates\r\n\t\t\t\t\t{latestUpdates ? <i className=\"mt-1 far fa-bell-slash\"></i> : <i className=\"mt-1 far fa-bell\"></i>}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t{latestUpdates && (\r\n\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"latest-updates col-md-6\">\r\n\t\t\t\t\t\t{props.getLatestUpdates\r\n\t\t\t\t\t\t\t.slice(0, -1)\r\n\t\t\t\t\t\t\t.map((item, index) => (\r\n\r\n\t\t\t\t\t\t\t\t<div key={index} >\r\n\t\t\t\t\t\t\t\t\t<div className={` ${props.modeState && 'dark-body'} note note-info mt-3`} >\r\n\t\t\t\t\t\t\t\t\t\t<p className={`${test === true ? 'rgba-red-slight' : 'rgba-black-slight'}  `} style={{ padding: \"10px\", borderRadius: \"10px\", fontStyle: \"Italic\", fontWeight: \"600\" }}>Title : {item.title}</p>\r\n\t\t\t\t\t\t\t\t\t\t<p>{item.excerpt}</p>\r\n\t\t\t\t\t\t\t\t\t\t<p >Published At : {new Date(item.publishedDateTime).toDateString()}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{/* something cool in the near future */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tgetLatestUpdates: state.stats.latestUpdates,\r\n\t\tmodeState: state.darkMode.hasmode\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(LatestUpdates);\r\n"]},"metadata":{},"sourceType":"module"}