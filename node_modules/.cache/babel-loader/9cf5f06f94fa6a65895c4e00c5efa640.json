{"ast":null,"code":"import axios from \"axios\";\nexport const GET_LIVE_STATS = \"GET_LIVE_STATS\";\nexport const ERROR_LIVE_STATS = \"ERROR_LIVE_STATS\";\nexport const FETCHING_LIVE_STATS = \"FETCHING_LIVE_STATS\";\nexport const GET_STATES_DATA = \"GET_STATES_DATA\";\nexport const GET_TIME_SERIES = \"GET_TIME_SERIES\";\nexport const GET_TEST_SAMPLES = \"GET_TEST_SAMPLES\";\nexport const GET_FACTOIDS = \"GET_FACTOIDS\";\nexport const GET_UPDATES = \"GET_UPDATES\";\nexport const getLiveStatsAction = () => {\n  return dispatch => {\n    dispatch({\n      type: FETCHING_LIVE_STATS\n    });\n    const statsRequest = \"https://api.covid19india.org/data.json\";\n    const factoidsRequest = \"https://api.covid19india.org/website_data.json\";\n    const updatesRequest = \"https://api.smartable.ai/coronavirus/news/IN\";\n    const statsResp = axios.get(statsRequest);\n    const factoidsResp = axios.get(factoidsRequest);\n    const updatesResp = axios.get(updatesRequest, (\"Subscription-Key\", \"3009d4ccc29e4808af1ccc25c69b4d5d\"));\n    axios.all([statsResp, factoidsResp, updatesResp]).then(axios.spread((...allData) => {\n      const allDataStats = allData[0];\n      const allDataFactoids = allData[1];\n      const allDataUpdates = allData[2];\n      dispatch({\n        type: GET_LIVE_STATS,\n        payload: allDataStats.data.statewise[0]\n      });\n      dispatch({\n        type: GET_STATES_DATA,\n        payload: allDataStats.data.statewise.slice(1, -1)\n      });\n      dispatch({\n        type: GET_TIME_SERIES,\n        payload: allDataStats.data.cases_time_series\n      });\n      dispatch({\n        type: GET_TEST_SAMPLES,\n        payload: allDataStats.data.tested\n      });\n      dispatch({\n        type: GET_FACTOIDS,\n        payload: allDataFactoids.data.factoids\n      });\n      dispatch({\n        type: GET_UPDATES,\n        payload: allDataUpdates.data\n      });\n    })).catch(err => {\n      console.log(err);\n      dispatch({\n        type: ERROR_LIVE_STATS,\n        payload: \"Error. Try again\"\n      });\n    });\n  };\n};","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/store/actions/statActions.js"],"names":["axios","GET_LIVE_STATS","ERROR_LIVE_STATS","FETCHING_LIVE_STATS","GET_STATES_DATA","GET_TIME_SERIES","GET_TEST_SAMPLES","GET_FACTOIDS","GET_UPDATES","getLiveStatsAction","dispatch","type","statsRequest","factoidsRequest","updatesRequest","statsResp","get","factoidsResp","updatesResp","all","then","spread","allData","allDataStats","allDataFactoids","allDataUpdates","payload","data","statewise","slice","cases_time_series","tested","factoids","catch","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAKP,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACtC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AACA,UAAMS,YAAY,GAAG,wCAArB;AACA,UAAMC,eAAe,GAAG,gDAAxB;AACA,UAAMC,cAAc,GAAG,8CAAvB;AAEA,UAAMC,SAAS,GAAGf,KAAK,CAACgB,GAAN,CAAUJ,YAAV,CAAlB;AACA,UAAMK,YAAY,GAAGjB,KAAK,CAACgB,GAAN,CAAUH,eAAV,CAArB;AACA,UAAMK,WAAW,GAAGlB,KAAK,CAACgB,GAAN,CAAUF,cAAV,GAA0B,oBAAqB,kCAA/C,EAApB;AAGAd,IAAAA,KAAK,CACFmB,GADH,CACO,CAACJ,SAAD,EAAYE,YAAZ,EAA0BC,WAA1B,CADP,EAEGE,IAFH,CAGIpB,KAAK,CAACqB,MAAN,CAAa,CAAC,GAAGC,OAAJ,KAAgB;AAC3B,YAAMC,YAAY,GAAGD,OAAO,CAAC,CAAD,CAA5B;AACA,YAAME,eAAe,GAAGF,OAAO,CAAC,CAAD,CAA/B;AACA,YAAMG,cAAc,GAAGH,OAAO,CAAC,CAAD,CAA9B;AAEAZ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEV,cADC;AAEPyB,QAAAA,OAAO,EAAEH,YAAY,CAACI,IAAb,CAAkBC,SAAlB,CAA4B,CAA5B;AAFF,OAAD,CAAR;AAIAlB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,eADC;AAEPsB,QAAAA,OAAO,EAAEH,YAAY,CAACI,IAAb,CAAkBC,SAAlB,CAA4BC,KAA5B,CAAkC,CAAlC,EAAqC,CAAC,CAAtC;AAFF,OAAD,CAAR;AAIAnB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN,eADC;AAEPqB,QAAAA,OAAO,EAAEH,YAAY,CAACI,IAAb,CAAkBG;AAFpB,OAAD,CAAR;AAIApB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,gBADC;AAEPoB,QAAAA,OAAO,EAAEH,YAAY,CAACI,IAAb,CAAkBI;AAFpB,OAAD,CAAR;AAIArB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,YADC;AAEPmB,QAAAA,OAAO,EAAEF,eAAe,CAACG,IAAhB,CAAqBK;AAFvB,OAAD,CAAR;AAIAtB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEH,WADC;AAEPkB,QAAAA,OAAO,EAAED,cAAc,CAACE;AAFjB,OAAD,CAAR;AAID,KA7BD,CAHJ,EAkCGM,KAlCH,CAkCUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAxB,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAET,gBAAR;AAA0BwB,QAAAA,OAAO,EAAE;AAAnC,OAAD,CAAR;AACD,KArCH;AAsCD,GAjDD;AAkDD,CAnDM","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const GET_LIVE_STATS = \"GET_LIVE_STATS\";\r\nexport const ERROR_LIVE_STATS = \"ERROR_LIVE_STATS\";\r\nexport const FETCHING_LIVE_STATS = \"FETCHING_LIVE_STATS\";\r\nexport const GET_STATES_DATA = \"GET_STATES_DATA\";\r\nexport const GET_TIME_SERIES = \"GET_TIME_SERIES\";\r\nexport const GET_TEST_SAMPLES = \"GET_TEST_SAMPLES\";\r\nexport const GET_FACTOIDS = \"GET_FACTOIDS\";\r\nexport const GET_UPDATES = \"GET_UPDATES\";\r\n\r\n\r\n\r\n\r\nexport const getLiveStatsAction = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: FETCHING_LIVE_STATS });\r\n    const statsRequest = \"https://api.covid19india.org/data.json\";\r\n    const factoidsRequest = \"https://api.covid19india.org/website_data.json\";\r\n    const updatesRequest = \"https://api.smartable.ai/coronavirus/news/IN\";\r\n\r\n    const statsResp = axios.get(statsRequest);\r\n    const factoidsResp = axios.get(factoidsRequest);\r\n    const updatesResp = axios.get(updatesRequest,(\"Subscription-Key\" , \"3009d4ccc29e4808af1ccc25c69b4d5d\"));\r\n\r\n\r\n    axios\r\n      .all([statsResp, factoidsResp, updatesResp])\r\n      .then(\r\n        axios.spread((...allData) => {\r\n          const allDataStats = allData[0];\r\n          const allDataFactoids = allData[1];\r\n          const allDataUpdates = allData[2];\r\n\r\n          dispatch({\r\n            type: GET_LIVE_STATS,\r\n            payload: allDataStats.data.statewise[0],\r\n          });\r\n          dispatch({\r\n            type: GET_STATES_DATA,\r\n            payload: allDataStats.data.statewise.slice(1, -1),\r\n          });\r\n          dispatch({\r\n            type: GET_TIME_SERIES,\r\n            payload: allDataStats.data.cases_time_series,\r\n          });\r\n          dispatch({\r\n            type: GET_TEST_SAMPLES,\r\n            payload: allDataStats.data.tested,\r\n          });\r\n          dispatch({\r\n            type: GET_FACTOIDS,\r\n            payload: allDataFactoids.data.factoids,\r\n          });\r\n          dispatch({\r\n            type: GET_UPDATES,\r\n            payload: allDataUpdates.data,\r\n          });\r\n        })\r\n      )\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch({ type: ERROR_LIVE_STATS, payload: \"Error. Try again\" });\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}