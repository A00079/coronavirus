{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\stateinfo\\\\StateInfo.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./stateinfo.css\";\nimport { stateInfoAction, districtInfoAction, zoneInfoAction, testInfoAction } from \"../../store/actions/stateInfoActions\";\nimport MaharashtraMap from \"../home/geographics/MaharashtraMap\";\nimport EventsTimeline from \"./EventsTimeline\";\nimport * as Icon from \"react-feather\";\n\nconst StateInfo = props => {\n  const [impData, setImpData] = useState({});\n  const [districts, setDistrictData] = useState([]);\n  const [zone, setZone] = useState([]);\n  const [tests, setTests] = useState([]); // Array of zone Data\n\n  var zonedStates = []; // array of tests Data\n\n  var testsData = []; // holds the array of the selected state\n\n  var lastObject = tests;\n  var todaysTestCount = tests[tests.length - 1]; // for counting total tests till the date of the selected state\n\n  var totalTestCount = 0;\n\n  for (var count in lastObject) {\n    totalTestCount += parseInt(lastObject[count].totaltested);\n  }\n\n  useEffect(() => {\n    props.getStatesData();\n    props.getDistrictData();\n    props.getZoneData();\n    props.getTestData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    if (props.stateInfo.length !== 0) {\n      // get the state from the params statecode\n      const stateCode = props.match.params.statename;\n      const index = props.stateInfo.findIndex(name => name.statecode === stateCode);\n      const state = props.stateInfo[index];\n      setImpData(state);\n    }\n\n    if (props.districtInfo.length !== 0) {\n      // get the district data from the statecode\n      const stateCode = props.match.params.statename;\n      const districtIndex = props.districtInfo.findIndex(districtItem => districtItem.statecode === stateCode);\n      const district = props.districtInfo[districtIndex].districtData;\n      setDistrictData(district);\n    }\n\n    if (props.zoneInfo.length !== 0) {\n      // get the Zone Data for current selected state \n      const stateCode = props.match.params.statename;\n\n      for (var i in props.zoneInfo) {\n        if (props.zoneInfo[i].statecode === stateCode) {\n          zonedStates.push(props.zoneInfo[i]);\n        }\n      }\n\n      setZone(zonedStates);\n    }\n\n    if (props.testInfo.length !== 0) {\n      // get the Zone Data for current selected state \n      // const stateCode = props.match.params.statename\n      for (var tests in props.testInfo) {\n        if (props.testInfo[tests].state === impData.state) {\n          testsData.push(props.testInfo[tests]);\n        }\n      }\n\n      setTests(testsData);\n    }\n  }, [props]); // Adding zone property in the OG districts state array \n\n  for (var i in districts) {\n    for (var j in zone) {\n      if (districts[i].district === zone[j].district) {\n        districts[i]['zone'] = zone[j].zone;\n      }\n    }\n  }\n\n  const handleStateSelect = e => {\n    props.history.push(`${e.target.value}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bc-icons-2 bread col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: `breadcrumb ${props.modeState && 'grey lighten-1'} grey lighten-4`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"black-text\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 61\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleStateSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    defaultValue: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 37\n    }\n  }, impData.state), props.stateInfo.slice(0, 32).map((state, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: state.statecode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 41\n    }\n  }, state.state))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    style: {\n      margin: 0,\n      fontSize: \"24px\",\n      fontWeight: 600\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, impData.state, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted font-italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"Last updated on - \", new Date(impData.lastupdatedtime).toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \" Total tests conducted : \", lastObject !== undefined && Number(totalTestCount).toLocaleString()), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, \" Todays tests count : \", todaysTestCount !== undefined && Number(todaysTestCount.totaltested).toLocaleString()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"state-counts row\",\n    style: {\n      margin: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 col-md-3 state-count-box rgba-red-slight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, \"Confirm \", /*#__PURE__*/React.createElement(Icon.Info, {\n    type: \"button\",\n    class: \"btn btn-secondary\",\n    \"data-toggle\": \"tooltip\",\n    \"data-placement\": \"top\",\n    className: \"info-icon\",\n    size: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 56\n    }\n  }, \"asdada \"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary\",\n    \"data-toggle\": \"tooltip\",\n    \"data-placement\": \"top\",\n    title: \"Tooltip on top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, \"Tooltip on top\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, impData.confirmed), impData.deltaconfirmed <= 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"5px\"\n    },\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 52\n    }\n  }, \"No new cases yet\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row delta-data text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \" far fa-arrow-alt-circle-up cc_pointer text-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"delta-confirmed \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 98\n    }\n  }, impData.deltaconfirmed)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    style: {\n      fontSize: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, \"Confirm/Mill\", /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 89\n    }\n  }, \"n\"), \" : \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6  col-md-3 state-count-box rgba-blue-slight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-info\",\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, impData.active), impData.deltaconfirmed <= 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"5px\"\n    },\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 52\n    }\n  }, \"No new cases yet\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row delta-data text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \" far fa-arrow-alt-circle-up cc_pointer text-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"delta-confirmed \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 98\n    }\n  }, impData.deltaconfirmed)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-info\",\n    style: {\n      fontSize: \"12px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, \"Active Rate : \", parseFloat(impData.active / impData.confirmed * 100).toFixed(2), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \" col-6 col-md-3  state-count-box rgba-green-slight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, \"Recovered\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-success\",\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, impData.recovered), impData.deltarecovered <= 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"5px\"\n    },\n    className: \"text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 52\n    }\n  }, \"No new cases yet\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row delta-data text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \" far fa-arrow-alt-circle-up cc_pointer text-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"delta-confirmed \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 98\n    }\n  }, impData.deltarecovered)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-success\",\n    style: {\n      fontSize: \"12px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, \"Recovery Rate : \", parseFloat(impData.recovered / impData.confirmed * 100).toFixed(2), \"% \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \" col-6  col-md-3 state-count-box rgba-grey-slight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, \"Deceased\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    className: \"text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, impData.deaths), impData.deltadeaths <= 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"5px\"\n    },\n    className: \"text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 49\n    }\n  }, \"No new cases yet\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row delta-data text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \" far fa-arrow-alt-circle-up cc_pointer text-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"delta-confirmed \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 98\n    }\n  }, impData.deltadeaths)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-black\",\n    style: {\n      fontSize: \"12px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, \"Recovery Rate : \", parseFloat(impData.deaths / impData.confirmed * 100).toFixed(2), \"% \"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row districts-map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"district-data col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    style: {\n      fontSize: \"20px\",\n      fontWeight: 600\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, \"District-Wise Stats\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row zone-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"zoneSign red lighten-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 77\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"zoneSign orange lighten-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 80\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"zoneSign green lighten-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sign-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, \"Current zone of Districts\"))), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 33\n    }\n  }, \"Districts\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"confirmed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"recovered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"deceased\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, districts.map((dist, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    className: `${props.modeState && 'dark-table'} ${dist.zone === 'Red' ? 'rgba-red-slight' : dist.zone === 'Orange' ? 'rgba-orange-slight' : dist.zone === '' ? '' : 'rgba-green-slight'} `,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 37\n    }\n  }, dist.district), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 37\n    }\n  }, dist.confirmed, dist.delta.confirmed !== 0 && /*#__PURE__*/React.createElement(\"i\", {\n    className: \"text-danger far fa-arrow-alt-circle-up cc_pointer text-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 45\n    }\n  }, dist.delta.confirmed)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 37\n    }\n  }, dist.active, dist.delta.confirmed !== 0 && /*#__PURE__*/React.createElement(\"i\", {\n    className: \"text-info far fa-arrow-alt-circle-up cc_pointer text-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 45\n    }\n  }, dist.delta.confirmed)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 37\n    }\n  }, dist.recovered, dist.delta.recovered !== 0 && /*#__PURE__*/React.createElement(\"i\", {\n    className: \"text-success far fa-arrow-alt-circle-up cc_pointer text-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 45\n    }\n  }, dist.delta.recovered)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 37\n    }\n  }, dist.deceased, dist.delta.deceased !== 0 && /*#__PURE__*/React.createElement(\"i\", {\n    className: \"text-black far fa-arrow-alt-circle-up cc_pointer text-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 45\n    }\n  }, dist.delta.deceased))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(EventsTimeline, {\n    tests: lastObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateInfo: state.stateInfo.statesInfoData,\n    districtInfo: state.stateInfo.districtData,\n    testInfo: state.stateInfo.testData,\n    zoneInfo: state.stateInfo.zoneData,\n    modeState: state.darkMode.hasmode\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getStatesData: () => dispatch(stateInfoAction()),\n    getDistrictData: () => dispatch(districtInfoAction()),\n    getZoneData: () => dispatch(zoneInfoAction()),\n    getTestData: () => dispatch(testInfoAction())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StateInfo);","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/stateinfo/StateInfo.js"],"names":["React","useState","useEffect","connect","Link","stateInfoAction","districtInfoAction","zoneInfoAction","testInfoAction","MaharashtraMap","EventsTimeline","Icon","StateInfo","props","impData","setImpData","districts","setDistrictData","zone","setZone","tests","setTests","zonedStates","testsData","lastObject","todaysTestCount","length","totalTestCount","count","parseInt","totaltested","getStatesData","getDistrictData","getZoneData","getTestData","window","scrollTo","stateInfo","stateCode","match","params","statename","index","findIndex","name","statecode","state","districtInfo","districtIndex","districtItem","district","districtData","zoneInfo","i","push","testInfo","j","handleStateSelect","e","history","target","value","modeState","slice","map","margin","fontSize","fontWeight","Date","lastupdatedtime","toLocaleString","undefined","Number","confirmed","deltaconfirmed","active","parseFloat","toFixed","recovered","deltarecovered","deaths","deltadeaths","dist","delta","deceased","mapStateToProps","statesInfoData","testData","zoneData","darkMode","hasmode","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./stateinfo.css\";\r\nimport { stateInfoAction, districtInfoAction, zoneInfoAction, testInfoAction } from \"../../store/actions/stateInfoActions\";\r\nimport MaharashtraMap from \"../home/geographics/MaharashtraMap\";\r\nimport EventsTimeline from \"./EventsTimeline\";\r\nimport * as Icon from \"react-feather\";\r\n\r\n\r\n\r\nconst StateInfo = (props) => {\r\n    const [impData, setImpData] = useState({})\r\n    const [districts, setDistrictData] = useState([])\r\n    const [zone, setZone] = useState([])\r\n    const [tests, setTests] = useState([])\r\n\r\n\r\n    // Array of zone Data\r\n    var zonedStates = []\r\n\r\n    // array of tests Data\r\n    var testsData = []\r\n\r\n    // holds the array of the selected state\r\n    var lastObject = tests\r\n    var todaysTestCount = tests[tests.length - 1]\r\n\r\n    // for counting total tests till the date of the selected state\r\n    var totalTestCount = 0\r\n    for (var count in lastObject) {\r\n        totalTestCount += parseInt(lastObject[count].totaltested)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        props.getStatesData()\r\n        props.getDistrictData()\r\n        props.getZoneData()\r\n        props.getTestData()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n\r\n        if (props.stateInfo.length !== 0) {\r\n\r\n            // get the state from the params statecode\r\n            const stateCode = props.match.params.statename\r\n            const index = props.stateInfo.findIndex(name => name.statecode === stateCode)\r\n            const state = props.stateInfo[index]\r\n            setImpData(state)\r\n        }\r\n        if (props.districtInfo.length !== 0) {\r\n\r\n            // get the district data from the statecode\r\n            const stateCode = props.match.params.statename\r\n            const districtIndex = props.districtInfo.findIndex(districtItem => districtItem.statecode === stateCode)\r\n            const district = props.districtInfo[districtIndex].districtData\r\n            setDistrictData(district)\r\n        }\r\n\r\n        if (props.zoneInfo.length !== 0) {\r\n\r\n            // get the Zone Data for current selected state \r\n            const stateCode = props.match.params.statename\r\n            for (var i in props.zoneInfo) {\r\n                if (props.zoneInfo[i].statecode === stateCode) {\r\n                    zonedStates.push(props.zoneInfo[i])\r\n                }\r\n            }\r\n            setZone(zonedStates)\r\n        }\r\n\r\n\r\n        if (props.testInfo.length !== 0) {\r\n\r\n            // get the Zone Data for current selected state \r\n            // const stateCode = props.match.params.statename\r\n            for (var tests in props.testInfo) {\r\n                if (props.testInfo[tests].state === impData.state) {\r\n                    testsData.push(props.testInfo[tests])\r\n                }\r\n            }\r\n            setTests(testsData)\r\n        }\r\n\r\n    }, [props])\r\n\r\n    // Adding zone property in the OG districts state array \r\n    for (var i in districts) {\r\n        for (var j in zone) {\r\n            if (districts[i].district === zone[j].district) {\r\n                districts[i]['zone'] = zone[j].zone\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleStateSelect = e => {\r\n        props.history.push(`${e.target.value}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-3\">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"bc-icons-2 bread col-sm-4\">\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className={`breadcrumb ${props.modeState && 'grey lighten-1'} grey lighten-4`}>\r\n                            <li className=\"breadcrumb-item\"><Link className=\"black-text\" to=\"/\">Home</Link></li>\r\n                            <li className=\"breadcrumb-item\">\r\n                                <select onChange={handleStateSelect}>\r\n                                    <option defaultValue>{impData.state}</option>\r\n                                    {props.stateInfo.slice(0, 32).map((state, index) => (\r\n                                        <option key={index} value={state.statecode}>{state.state}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </li>\r\n                            {/* <li className=\"breadcrumb-item\"><span className=\"badge badge-pill badge-info\" style={{ fontSize: \"14px\" }}> {impData.state} </span></li> */}\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-sm-4\">\r\n                    <p className=\"text-danger\" style={{ margin: 0, fontSize: \"24px\", fontWeight: 600 }}>{impData.state} </p>\r\n                    <p className=\"text-muted font-italic\" >Last updated on - {new Date(impData.lastupdatedtime).toLocaleString()}</p>\r\n                </div>\r\n\r\n                <div className=\"col-sm-4\">\r\n                    <p> Total tests conducted : {lastObject !== undefined && Number(totalTestCount).toLocaleString()}</p>\r\n                    <p> Todays tests count : {todaysTestCount !== undefined && Number(todaysTestCount.totaltested).toLocaleString()}</p>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"state-counts row\" style={{ margin: \"5px\" }}>\r\n                <div className=\"col-6 col-md-3 state-count-box rgba-red-slight\">\r\n                    <p className=\"text-danger\">Confirm <Icon.Info type=\"button\" class=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"top\" className=\"info-icon\" size={15} >asdada </Icon.Info>\r\n\r\n                        <button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Tooltip on top\">\r\n                            Tooltip on top\r\n</button>\r\n\r\n\r\n                    </p>\r\n                    <p className=\"text-danger\" style={{ margin: 0 }}>{impData.confirmed}</p>\r\n\r\n                    {impData.deltaconfirmed <= 0 ? <p style={{ margin: \"5px\" }} className=\"text-danger\">No new cases yet</p> :\r\n                        <div className=\"row delta-data text-danger\">\r\n                            <i className=\" far fa-arrow-alt-circle-up cc_pointer text-small\"></i><p className=\"delta-confirmed \">{impData.deltaconfirmed}</p>\r\n                        </div>\r\n                    }\r\n                    <p className=\"text-danger\" style={{ fontSize: '12px' }}>Confirm/Mill<sup>n</sup> : </p>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-6  col-md-3 state-count-box rgba-blue-slight\">\r\n                    <p className=\"text-info\">Active</p>\r\n                    <p className=\"text-info\" style={{ margin: 0 }}>{impData.active}</p>\r\n\r\n                    {impData.deltaconfirmed <= 0 ? <p style={{ margin: \"5px\" }} className=\"text-info\">No new cases yet</p> :\r\n                        <div className=\"row delta-data text-info\">\r\n                            <i className=\" far fa-arrow-alt-circle-up cc_pointer text-small\"></i><p className=\"delta-confirmed \">{impData.deltaconfirmed}</p>\r\n                        </div>\r\n                    }\r\n                    <p className=\"text-info\" style={{ fontSize: \"12px\" }}>Active Rate : {parseFloat(impData.active / impData.confirmed * 100).toFixed(2)} </p>\r\n                </div>\r\n\r\n                <div className=\" col-6 col-md-3  state-count-box rgba-green-slight\">\r\n                    <p className=\"text-success\">Recovered</p>\r\n                    <p className=\"text-success\" style={{ margin: 0 }}>{impData.recovered}</p>\r\n\r\n                    {impData.deltarecovered <= 0 ? <p style={{ margin: \"5px\" }} className=\"text-success\">No new cases yet</p> :\r\n                        <div className=\"row delta-data text-success\">\r\n                            <i className=\" far fa-arrow-alt-circle-up cc_pointer text-small\"></i><p className=\"delta-confirmed \">{impData.deltarecovered}</p>\r\n                        </div>\r\n                    }\r\n                    <p className=\"text-success\" style={{ fontSize: \"12px\" }}>Recovery Rate : {parseFloat(impData.recovered / impData.confirmed * 100).toFixed(2)}% </p>\r\n                </div>\r\n                <div className=\" col-6  col-md-3 state-count-box rgba-grey-slight\">\r\n                    <p className=\"text-black\">Deceased</p>\r\n                    <p style={{ margin: 0 }} className=\"text-black\">{impData.deaths}</p>\r\n\r\n                    {impData.deltadeaths <= 0 ? <p style={{ margin: \"5px\" }} className=\"text-black\">No new cases yet</p> :\r\n\r\n                        <div className=\"row delta-data text-black\">\r\n                            <i className=\" far fa-arrow-alt-circle-up cc_pointer text-small\"></i><p className=\"delta-confirmed \">{impData.deltadeaths}</p>\r\n                        </div>\r\n                    }\r\n                    <p className=\"text-black\" style={{ fontSize: \"12px\" }}>Recovery Rate : {parseFloat(impData.deaths / impData.confirmed * 100).toFixed(2)}% </p>\r\n                </div>\r\n            </div>\r\n\r\n            {/* District table and map */}\r\n\r\n            <div className=\"row districts-map\">\r\n                <div className=\"district-data col-md-6\">\r\n                    <p className=\"text-danger\" style={{ fontSize: \"20px\", fontWeight: 600 }}>District-Wise Stats</p>\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"row zone-info\">\r\n                            <span className=\"zoneSign red lighten-2\"></span><br />\r\n                            <span className=\"zoneSign orange lighten-2\"></span><br />\r\n                            <span className=\"zoneSign green lighten-2\"></span>\r\n                            <span className=\"sign-text\">Current zone of Districts</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <table className=\"table\">\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <th>Districts</th>\r\n                                <th className=\"confirmed\"></th>\r\n                                <th className=\"active\"></th>\r\n                                <th className=\"recovered\"></th>\r\n                                <th className=\"deceased\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {districts.map((dist, index) => (\r\n                                <tr className={`${props.modeState && 'dark-table'} ${dist.zone === 'Red' ? 'rgba-red-slight' : dist.zone === 'Orange' ? 'rgba-orange-slight' : dist.zone === '' ? '' : 'rgba-green-slight'} `} key={index}>\r\n                                    <td >{dist.district}</td>\r\n                                    <td>{dist.confirmed}\r\n                                        {dist.delta.confirmed !== 0 &&\r\n                                            <i className=\"text-danger far fa-arrow-alt-circle-up cc_pointer text-small\">{dist.delta.confirmed}</i>\r\n                                        }\r\n                                        {/* {dist.zone && <p style={{ margin: 0 }}>Zone : {dist.zone}</p>} */}\r\n                                        {/* {zone.map((z, index) => (\r\n                                            dist.district === z.district && <p key={index}>{z.zone}</p>\r\n                                        ))} */}\r\n\r\n                                        {/* {zone[index] !== undefined  && dist.district === zone[index].district ? <p className=\"text-danger\"> { zone[index].zone} </p> : <p>Not available</p>} */}\r\n\r\n                                    </td>\r\n                                    <td>{dist.active}\r\n                                        {dist.delta.confirmed !== 0 &&\r\n                                            <i className=\"text-info far fa-arrow-alt-circle-up cc_pointer text-small\">{dist.delta.confirmed}</i>\r\n                                        }\r\n                                    </td>\r\n                                    <td>{dist.recovered}\r\n                                        {dist.delta.recovered !== 0 &&\r\n                                            <i className=\"text-success far fa-arrow-alt-circle-up cc_pointer text-small\">{dist.delta.recovered}</i>\r\n                                        }\r\n                                    </td>\r\n                                    <td>{dist.deceased}\r\n                                        {dist.delta.deceased !== 0 &&\r\n                                            <i className=\"text-black far fa-arrow-alt-circle-up cc_pointer text-small\">{dist.delta.deceased}</i>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                    {/* {props.match.params.statename === 'MH' && <MaharashtraMap />} */}\r\n                    <EventsTimeline tests={lastObject} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        stateInfo: state.stateInfo.statesInfoData,\r\n        districtInfo: state.stateInfo.districtData,\r\n        testInfo: state.stateInfo.testData,\r\n        zoneInfo: state.stateInfo.zoneData,\r\n        modeState: state.darkMode.hasmode\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getStatesData: () => dispatch(stateInfoAction()),\r\n        getDistrictData: () => dispatch(districtInfoAction()),\r\n        getZoneData: () => dispatch(zoneInfoAction()),\r\n        getTestData: () => dispatch(testInfoAction())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StateInfo)  "]},"metadata":{},"sourceType":"module"}