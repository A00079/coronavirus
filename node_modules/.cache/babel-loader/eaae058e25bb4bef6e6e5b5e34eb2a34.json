{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\home\\\\geographics\\\\TestMap.js\";\nimport React, { memo } from \"react\";\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport Maharashtra from \"./Maharashtra.topo.json\";\nconst geoUrl = Maharashtra;\nconst PROJECTION_CONFIG = {\n  scale: 2000,\n  center: [76.9629, 18.5937] // always in [East Latitude, North Longitude]\n\n};\n\nconst MapChart = ({\n  setTooltipContent\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ComposableMap, {\n    \"data-tip\": \"\",\n    projectionConfig: {\n      scale: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ZoomableGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Geographies, {\n    geography: geoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, ({\n    geographies\n  }) => geographies.map(geo => /*#__PURE__*/React.createElement(Geography, {\n    key: geo.rsmKey,\n    geography: geo,\n    onMouseEnter: () => {\n      const {\n        NAME\n      } = geo.properties;\n      setTooltipContent(`${NAME}`);\n    },\n    onMouseLeave: () => {\n      setTooltipContent(\"\");\n    },\n    style: {\n      default: {\n        fill: \"#D6D6DA\",\n        outline: \"none\"\n      },\n      hover: {\n        fill: \"#F53\",\n        outline: \"none\"\n      },\n      pressed: {\n        fill: \"#E42\",\n        outline: \"none\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default memo(MapChart);","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/home/geographics/TestMap.js"],"names":["React","memo","ZoomableGroup","ComposableMap","Geographies","Geography","Maharashtra","geoUrl","PROJECTION_CONFIG","scale","center","MapChart","setTooltipContent","geographies","map","geo","rsmKey","NAME","properties","default","fill","outline","hover","pressed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,SAJF,QAKO,mBALP;AAOA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,MAAMC,MAAM,GAAGD,WAAf;AAEA,MAAME,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,IADe;AAEtBC,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV,CAFc,CAEK;;AAFL,CAA1B;;AAMA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AAC1C,sBACE,uDACE,oBAAC,aAAD;AAAe,gBAAS,EAAxB;AAA2B,IAAA,gBAAgB,EAAE;AAAEH,MAAAA,KAAK,EAAE;AAAT,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEF,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEM,IAAAA;AAAF,GAAD,KACCA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,iBACjB,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEA,GAAG,CAACC,MADX;AAEE,IAAA,SAAS,EAAED,GAFb;AAGE,IAAA,YAAY,EAAE,MAAM;AAClB,YAAM;AAAEE,QAAAA;AAAF,UAAWF,GAAG,CAACG,UAArB;AACAN,MAAAA,iBAAiB,CAAE,GAAEK,IAAK,EAAT,CAAjB;AACD,KANH;AAOE,IAAA,YAAY,EAAE,MAAM;AAClBL,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,KATH;AAUE,IAAA,KAAK,EAAE;AACLO,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,SADC;AAEPC,QAAAA,OAAO,EAAE;AAFF,OADJ;AAKLC,MAAAA,KAAK,EAAE;AACLF,QAAAA,IAAI,EAAE,MADD;AAELC,QAAAA,OAAO,EAAE;AAFJ,OALF;AASLE,MAAAA,OAAO,EAAE;AACPH,QAAAA,IAAI,EAAE,MADC;AAEPC,QAAAA,OAAO,EAAE;AAFF;AATJ,KAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF,CADF,CADF,CADF;AAuCD,CAxCD;;AA0CA,eAAepB,IAAI,CAACU,QAAD,CAAnB","sourcesContent":["import React, { memo } from \"react\";\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\n\r\nimport Maharashtra from \"./Maharashtra.topo.json\";\r\n\r\nconst geoUrl = Maharashtra\r\n  \r\nconst PROJECTION_CONFIG = {\r\n    scale: 2000,\r\n    center: [76.9629, 18.5937] // always in [East Latitude, North Longitude]\r\n};\r\n\r\n\r\nconst MapChart = ({ setTooltipContent }) => {\r\n  return (\r\n    <>\r\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 300 }}>\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  onMouseEnter={() => {\r\n                    const { NAME,} = geo.properties;\r\n                    setTooltipContent(`${NAME}`);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  style={{\r\n                    default: {\r\n                      fill: \"#D6D6DA\",\r\n                      outline: \"none\"\r\n                    },\r\n                    hover: {\r\n                      fill: \"#F53\",\r\n                      outline: \"none\"\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#E42\",\r\n                      outline: \"none\"\r\n                    }\r\n                  }}\r\n                />\r\n              ))\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(MapChart);\r\n"]},"metadata":{},"sourceType":"module"}