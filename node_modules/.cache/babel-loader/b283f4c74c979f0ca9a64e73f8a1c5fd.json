{"ast":null,"code":"import React from\"react\";import\"./livestats.css\";import{connect}from'react-redux';var LiveStats=function LiveStats(props){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"card mt-4 view overlay\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-body card-settings  \".concat(props.modeState&&'dark-body',\" rgba-\").concat(props.hoverColor,\"-slight\")},/*#__PURE__*/React.createElement(\"div\",{className:\"container row\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"card-title \".concat(props.badgeColor),style:{fontSize:\"20px\"}},props.name),/*#__PURE__*/React.createElement(\"h3\",{className:\"\".concat(props.textColor,\" ml-auto\"),style:{fontSize:\"20px\",fontWeight:700}},props.count)),props.activegraph,props.todayCount<=0?/*#__PURE__*/React.createElement(\"p\",{className:\"\".concat(props.textColor,\" d-flex justify-content-start \")},\"No new cases yet\"):/*#__PURE__*/React.createElement(\"div\",{className:\"container row\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"\".concat(props.textColor,\" card-title\"),style:{fontSize:\"20px\"}},/*#__PURE__*/React.createElement(\"i\",{className:\"far fa-arrow-alt-circle-up cc_pointer text-small\"})),/*#__PURE__*/React.createElement(\"h3\",{className:\"\".concat(props.textColor,\" ml-auto\"),style:{fontSize:\"20px\",fontWeight:700}},\"[+\",props.todayCount,\"]\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"mask flex-center rgba-\".concat(props.hoverColor,\"-slight\")})));};var mapStateToProps=function mapStateToProps(state){return{modeState:state.darkMode.hasmode};};export default connect(mapStateToProps)(LiveStats);","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/home/LiveStats.js"],"names":["React","connect","LiveStats","props","modeState","hoverColor","badgeColor","fontSize","name","textColor","fontWeight","count","activegraph","todayCount","mapStateToProps","state","darkMode","hasmode"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,iBAAP,CACA,OAAQC,OAAR,KAAsB,aAAtB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAE3B,mBACE,4CACE,2BAAK,SAAS,CAAC,wBAAf,eACE,2BACE,SAAS,oCAA8BA,KAAK,CAACC,SAAN,EAAmB,WAAjD,kBAAqED,KAAK,CAACE,UAA3E,WADX,eAGE,2BAAK,SAAS,CAAC,eAAf,eACE,0BACE,SAAS,sBAAgBF,KAAK,CAACG,UAAtB,CADX,CAEE,KAAK,CAAE,CAAEC,QAAQ,CAAE,MAAZ,CAFT,EAIGJ,KAAK,CAACK,IAJT,CADF,cAOE,0BACE,SAAS,WAAKL,KAAK,CAACM,SAAX,YADX,CAEE,KAAK,CAAE,CAAEF,QAAQ,CAAE,MAAZ,CAAoBG,UAAU,CAAE,GAAhC,CAFT,EAIGP,KAAK,CAACQ,KAJT,CAPF,CAHF,CAiBGR,KAAK,CAACS,WAjBT,CAoBGT,KAAK,CAACU,UAAN,EAAoB,CAApB,cACC,yBAAG,SAAS,WAAKV,KAAK,CAACM,SAAX,kCAAZ,qBADD,cAGC,2BAAK,SAAS,CAAC,eAAf,eACE,0BACE,SAAS,WAAKN,KAAK,CAACM,SAAX,eADX,CAEE,KAAK,CAAE,CAAEF,QAAQ,CAAE,MAAZ,CAFT,eAIE,yBAAG,SAAS,CAAC,kDAAb,EAJF,CADF,cAQE,0BACE,SAAS,WAAKJ,KAAK,CAACM,SAAX,YADX,CAEE,KAAK,CAAE,CAAEF,QAAQ,CAAE,MAAZ,CAAoBG,UAAU,CAAE,GAAhC,CAFT,OAIKP,KAAK,CAACU,UAJX,KARF,CAvBJ,CADF,cA0CE,2BACE,SAAS,iCAA2BV,KAAK,CAACE,UAAjC,WADX,EA1CF,CADF,CADF,CAkDD,CApDD,CAsDA,GAAMS,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC/B,MAAM,CACJX,SAAS,CAAGW,KAAK,CAACC,QAAN,CAAeC,OADvB,CAAN,CAGD,CAJD,CAMA,cAAehB,CAAAA,OAAO,CAACa,eAAD,CAAP,CAAyBZ,SAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport \"./livestats.css\";\r\nimport {connect} from 'react-redux';\r\n\r\nconst LiveStats = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card mt-4 view overlay\">\r\n        <div\r\n          className={`card-body card-settings  ${props.modeState && 'dark-body'} rgba-${props.hoverColor}-slight`}\r\n        >\r\n          <div className=\"container row\">\r\n            <h3\r\n              className={`card-title ${props.badgeColor}`}\r\n              style={{ fontSize: \"20px\" }}\r\n            >\r\n              {props.name}\r\n            </h3>\r\n            <h3\r\n              className={`${props.textColor} ml-auto`}\r\n              style={{ fontSize: \"20px\", fontWeight: 700 }}\r\n            >\r\n              {props.count}\r\n            </h3>\r\n          </div>\r\n          {props.activegraph}\r\n\r\n          {/* CR for new delta cases */}\r\n          {props.todayCount  <=0 ? (\r\n            <p className={`${props.textColor} d-flex justify-content-start `}>No new cases yet</p>\r\n          ) : (\r\n            <div className=\"container row\">\r\n              <h3\r\n                className={`${props.textColor} card-title`}\r\n                style={{ fontSize: \"20px\" }}\r\n              >\r\n                <i className=\"far fa-arrow-alt-circle-up cc_pointer text-small\"></i>\r\n              </h3>\r\n\r\n              <h3\r\n                className={`${props.textColor} ml-auto`}\r\n                style={{ fontSize: \"20px\", fontWeight: 700 }}\r\n              >\r\n                [+{props.todayCount}]\r\n              </h3>\r\n            </div>\r\n          )}\r\n\r\n        </div>\r\n        <div\r\n          className={`mask flex-center rgba-${props.hoverColor}-slight`}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    modeState : state.darkMode.hasmode\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LiveStats);\r\n"]},"metadata":{},"sourceType":"module"}