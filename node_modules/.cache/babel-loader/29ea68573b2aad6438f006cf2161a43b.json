{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\navbar\\\\NotificationCenter.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport '../../index.css';\n\nconst LatestUpdates = props => {\n  const [latestUpdates, setLatestUpdates] = useState(false);\n  var test;\n  test = localStorage.getItem('dark-mode');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    onClick: () => setLatestUpdates(!latestUpdates),\n    className: \"updates\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-info notification\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, \" \", props.getLatestUpdates.length, \" \"), latestUpdates ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"mt-1 far fa-bell-slash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"mt-1 far fa-bell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 68\n    }\n  }))), latestUpdates && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"latest-updates col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, props.getLatestUpdates.slice(0, -1).map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: ` ${props.modeState && 'dark-body'} note note-info mt-3`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: `${test === true ? 'rgba-red-slight' : 'rgba-black-slight'}  `,\n    style: {\n      padding: \"10px\",\n      borderRadius: \"10px\",\n      fontStyle: \"Italic\",\n      fontWeight: \"600\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 189\n    }\n  }, index + 1), \" Title : \", item.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, item.excerpt), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"Published At : \", new Date(item.publishedDateTime).toDateString())))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    getLatestUpdates: state.stats.latestUpdates,\n    modeState: state.darkMode.hasmode\n  };\n};\n\nexport default connect(mapStateToProps)(LatestUpdates);","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/navbar/NotificationCenter.js"],"names":["React","useState","connect","LatestUpdates","props","latestUpdates","setLatestUpdates","test","localStorage","getItem","getLatestUpdates","length","slice","map","item","index","modeState","padding","borderRadius","fontStyle","fontWeight","title","excerpt","Date","publishedDateTime","toDateString","mapStateToProps","state","stats","darkMode","hasmode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,iBAAP;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,KAAD,CAAlD;AAGA,MAAIM,IAAJ;AACAA,EAAAA,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAP;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,OAAO,EAAE,MAAMH,gBAAgB,CAAC,CAACD,aAAF,CAAlC;AAAoD,IAAA,SAAS,EAAC,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkDD,KAAK,CAACM,gBAAN,CAAuBC,MAAzE,MADF,EAEFN,aAAa,gBAAG;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAgD;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF3D,CADF,CADF,EAQGA,aAAa,iBAEZ;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACM,gBAAN,CACEE,KADF,CACQ,CADR,EACW,CAAC,CADZ,EAEEC,GAFF,CAEM,CAACC,IAAD,EAAOC,KAAP,kBAEH;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAG,IAAGX,KAAK,CAACY,SAAN,IAAmB,WAAY,sBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAG,GAAET,IAAI,KAAK,IAAT,GAAgB,iBAAhB,GAAoC,mBAAoB,IAAzE;AAA8E,IAAA,KAAK,EAAE;AAAEU,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,YAAY,EAAE,MAAjC;AAAyCC,MAAAA,SAAS,EAAE,QAApD;AAA8DC,MAAAA,UAAU,EAAE;AAA1E,KAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwK;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCL,KAAK,GAAG,CAA9C,CAAxK,eAAyOD,IAAI,CAACO,KAA9O,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,IAAI,CAACQ,OAAT,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoB,IAAIC,IAAJ,CAAST,IAAI,CAACU,iBAAd,EAAiCC,YAAjC,EAApB,CAHF,CADF,CAJH,CADH,CADF,CAVJ,CADF;AA8BD,CArCD;;AAuCA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLjB,IAAAA,gBAAgB,EAAEiB,KAAK,CAACC,KAAN,CAAYvB,aADzB;AAELW,IAAAA,SAAS,EAAEW,KAAK,CAACE,QAAN,CAAeC;AAFrB,GAAP;AAID,CALD;;AAOA,eAAe5B,OAAO,CAACwB,eAAD,CAAP,CAAyBvB,aAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../../index.css';\r\n\r\nconst LatestUpdates = (props) => {\r\n  const [latestUpdates, setLatestUpdates] = useState(false);\r\n\r\n\r\n  var test\r\n  test = localStorage.getItem('dark-mode')\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p onClick={() => setLatestUpdates(!latestUpdates)} className=\"updates\">\r\n          <span className=\"badge badge-info notification\"> {props.getLatestUpdates.length} </span>\r\n\t\t\t\t\t{latestUpdates ? <i className=\"mt-1 far fa-bell-slash\"></i> : <i className=\"mt-1 far fa-bell\"></i>}\r\n        </p>\r\n      </div>\r\n\r\n      {latestUpdates && (\r\n\r\n        <div className=\"row\">\r\n          <div className=\"latest-updates col-md-6\">\r\n            {props.getLatestUpdates\r\n              .slice(0, -1)\r\n              .map((item, index) => (\r\n\r\n                <div key={index} >\r\n                  <div className={` ${props.modeState && 'dark-body'} note note-info mt-3`} >\r\n                    <p className={`${test === true ? 'rgba-red-slight' : 'rgba-black-slight'}  `} style={{ padding: \"10px\", borderRadius: \"10px\", fontStyle: \"Italic\", fontWeight: \"600\" }}><span className=\"badge badge-danger\">{index + 1}</span> Title : {item.title}</p>\r\n                    <p>{item.excerpt}</p>\r\n                    <p >Published At : {new Date(item.publishedDateTime).toDateString()}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLatestUpdates: state.stats.latestUpdates,\r\n    modeState: state.darkMode.hasmode\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LatestUpdates);\r\n"]},"metadata":{},"sourceType":"module"}