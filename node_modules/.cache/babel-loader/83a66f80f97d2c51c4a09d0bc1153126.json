{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\navbar\\\\NavBar.js\";\nimport React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { darkModeAction } from '../../store/actions/darkModeActions';\nimport * as Icon from 'react-feather';\nimport NotificationCenter from './NotificationCenter';\n\nconst getInitialMode = () => {\n  const saevdMode = JSON.parse(localStorage.getItem('dark-mode'));\n  return saevdMode || false;\n};\n\nconst NavBar = props => {\n  const [mode, setMode] = useState(getInitialMode());\n  const [notification, setNotification] = useState(false);\n  useEffect(() => {\n    props.setModeProp(mode);\n    localStorage.setItem('dark-mode', JSON.stringify(mode));\n  }, [mode]);\n\n  const handleNotification = () => {\n    setNotification(!notification);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: `nav justify-content-center ${props.modeState === false ? \"grey lighten-4\" : 'dark-body'} py-4`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => setMode(!mode),\n    className: \"dark-mode nav-item w3-animate-opacity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link\",\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, mode === false ? /*#__PURE__*/React.createElement(Icon.Moon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Icon.Sun, {\n    color: '#ffc107',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), \" \")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link w3-animate-opacity\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item w3-animate-opacity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link\",\n    to: \"/demographics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Demographics\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item w3-animate-opacity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link\",\n    to: \"/deep-dive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Visuals\")), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: handleNotification,\n    className: \"nav-item dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      borderRadius: \"50px\"\n    },\n    className: \"nav-link  waves-effect waves-light\",\n    id: \"navbarDropdownMenuLink\",\n    \"data-toggle\": \"dropdown\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, notification === true ? /*#__PURE__*/React.createElement(Icon.BellOff, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 216\n    }\n  }) : /*#__PURE__*/React.createElement(Icon.Bell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 235\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"380px\",\n      marginLeft: \"0px\"\n    },\n    className: `dropdown-menu dropdown-menu-right dropdown-info ${props.modeState === false ? \"grey lighten-2\" : 'dark-body'}`,\n    \"aria-labelledby\": \"navbarDropdownMenuLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NotificationCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    modeState: state.darkMode.hasmode\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setModeProp: mode => dispatch(darkModeAction(mode))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/navbar/NavBar.js"],"names":["React","useState","useEffect","NavLink","connect","darkModeAction","Icon","NotificationCenter","getInitialMode","saevdMode","JSON","parse","localStorage","getItem","NavBar","props","mode","setMode","notification","setNotification","setModeProp","setItem","stringify","handleNotification","modeState","borderRadius","width","marginLeft","mapStateToProps","state","darkMode","hasmode","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,qCAA/B;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlB;AACA,SAAOJ,SAAS,IAAI,KAApB;AACD,CAHD;;AAKA,MAAMK,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAACO,cAAc,EAAf,CAAhC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,KAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAACK,WAAN,CAAkBJ,IAAlB;AACAJ,IAAAA,YAAY,CAACS,OAAb,CAAqB,WAArB,EAAkCX,IAAI,CAACY,SAAL,CAAeN,IAAf,CAAlC;AACD,GAHQ,EAGN,CAACA,IAAD,CAHM,CAAT;;AAKA,QAAMO,kBAAkB,GAAG,MAAM;AAC/BJ,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAG,8BAA6BH,KAAK,CAACS,SAAN,KAAoB,KAApB,GAA4B,gBAA5B,GAA+C,WAAY,OAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE,MAAMP,OAAO,CAAC,CAACD,IAAF,CADxB;AAEE,IAAA,SAAS,EAAC,uCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,UAAnB;AAA8B,IAAA,EAAE,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,KAAK,KAAT,gBACC,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAEG,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,KAAK,EAAE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,MAHF,CADF,eASE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,6BAAnB;AAAiD,IAAA,EAAE,EAAC,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CATF,eAcE;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,UAAnB;AAA8B,IAAA,EAAE,EAAC,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAdF,eAmBE;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,UAAnB;AAA8B,IAAA,EAAE,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAnBF,eAwBE;AAAI,IAAA,OAAO,EAAEO,kBAAb;AAAiC,IAAA,SAAS,EAAC,mBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,KAAK,EAAE;AAAEE,MAAAA,YAAY,EAAE;AAAhB,KAAb;AAAuC,IAAA,SAAS,EAAC,oCAAjD;AAAsF,IAAA,EAAE,EAAC,wBAAzF;AAAkH,mBAAY,UAA9H;AAAyI,qBAAc,MAAvJ;AAA8J,qBAAc,OAA5K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqLP,YAAY,KAAK,IAAjB,gBAAwB,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,gBAA2C,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhO,CADF,eAEE;AAAK,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,UAAU,EAAE;AAA9B,KAAZ;AAAmD,IAAA,SAAS,EAAG,mDAAkDZ,KAAK,CAACS,SAAN,KAAoB,KAApB,GAA4B,gBAA5B,GAA+C,WAAY,EAA5K;AAA+K,uBAAgB,wBAA/L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAxBF,CADF,CADF;AAmCD,CAhDD;;AAkDA,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLL,IAAAA,SAAS,EAAEK,KAAK,CAACC,QAAN,CAAeC;AADrB,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLb,IAAAA,WAAW,EAAGJ,IAAD,IAAUiB,QAAQ,CAAC5B,cAAc,CAACW,IAAD,CAAf;AAD1B,GAAP;AAGD,CAJD;;AAMA,eAAeZ,OAAO,CAACwB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ClB,MAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { darkModeAction } from '../../store/actions/darkModeActions';\r\nimport * as Icon from 'react-feather';\r\nimport NotificationCenter from './NotificationCenter';\r\n\r\nconst getInitialMode = () => {\r\n  const saevdMode = JSON.parse(localStorage.getItem('dark-mode'))\r\n  return saevdMode || false\r\n}\r\n\r\nconst NavBar = (props) => {\r\n  const [mode, setMode] = useState(getInitialMode())\r\n  const [notification, setNotification] = useState(false)\r\n\r\n  useEffect(() => {\r\n    props.setModeProp(mode)\r\n    localStorage.setItem('dark-mode', JSON.stringify(mode))\r\n  }, [mode])\r\n\r\n  const handleNotification = () => {\r\n    setNotification(!notification)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ul className={`nav justify-content-center ${props.modeState === false ? \"grey lighten-4\" : 'dark-body'} py-4`}>\r\n        <li\r\n          onClick={() => setMode(!mode)}\r\n          className=\"dark-mode nav-item w3-animate-opacity\">\r\n          <NavLink className=\"nav-link\" to=\"#\">\r\n            {mode === false ?\r\n              <Icon.Moon />\r\n              : <Icon.Sun color={'#ffc107'} />} </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link w3-animate-opacity\" to=\"/\">\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item w3-animate-opacity\">\r\n          <NavLink className=\"nav-link\" to=\"/demographics\">\r\n            Demographics\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item w3-animate-opacity\">\r\n          <NavLink className=\"nav-link\" to=\"/deep-dive\">\r\n            Visuals\r\n          </NavLink>\r\n        </li>\r\n        <li onClick={handleNotification} className=\"nav-item dropdown\">\r\n          <span style={{ borderRadius: \"50px\" }} className=\"nav-link  waves-effect waves-light\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">{notification === true ? <Icon.BellOff /> : <Icon.Bell />}</span>\r\n          <div style={{ width: \"380px\", marginLeft: \"0px\" }} className={`dropdown-menu dropdown-menu-right dropdown-info ${props.modeState === false ? \"grey lighten-2\" : 'dark-body'}`} aria-labelledby=\"navbarDropdownMenuLink\">\r\n            <NotificationCenter />\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modeState: state.darkMode.hasmode\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setModeProp: (mode) => dispatch(darkModeAction(mode))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\r\n"]},"metadata":{},"sourceType":"module"}