{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\demographics\\\\SelectOptions.js\";\nimport React, { useEffect, useState } from 'react';\nimport './demographics.css';\nimport { connect } from 'react-redux';\nimport { getStatesAction } from '../../store/actions/patientActions';\n\nconst SelectOptions = props => {\n  const [stateSelect, setStateSelect] = useState('');\n  useEffect(() => {\n    props.getStates();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row select-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: event => setStateSelect(event.target.value),\n    value: stateSelect,\n    className: \" btn btn-outline-primary dropdown-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    Value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"--Select State--\"), props.allStatesData.sort().map((state, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    Value: state.state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, state.state))), stateSelect && stateSelect !== 'all' ? /*#__PURE__*/React.createElement(\"select\", {\n    className: \"  btn btn-outline-primary dropdown-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, \"--Select District--\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"genderwise\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"Gender Wise Data\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"currentstatus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, \"Current Status\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"transmissiontype\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, \"Type of Transmission\")) : ''));\n};\n\nconst mapStateToProps = state => {\n  return {\n    allStatesData: state.patient.getStatesData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getStates: () => dispatch(getStatesAction())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectOptions);","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/demographics/SelectOptions.js"],"names":["React","useEffect","useState","connect","getStatesAction","SelectOptions","props","stateSelect","setStateSelect","getStates","event","target","value","allStatesData","sort","map","state","index","mapStateToProps","patient","getStatesData","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,oCAAhC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AACjC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AAEID,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAACG,SAAN;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,QAAQ,EAAGC,KAAD,IAAWF,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CADvC;AAEI,IAAA,KAAK,EAAEL,WAFX;AAGI,IAAA,SAAS,EAAC,0CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAiB,IAAA,QAAQ,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,EAMKD,KAAK,CAACO,aAAN,CAAoBC,IAApB,GAA2BC,GAA3B,CAA+B,CAACC,KAAD,EAAQC,KAAR,kBAC5B;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,KAAK,EAAED,KAAK,CAACA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,KAAK,CAACA,KAA/C,CADH,CANL,CADJ,EAaKT,WAAW,IAAIA,WAAW,KAAK,KAA/B,gBACG;AACI,IAAA,SAAS,EAAC,2CADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHJ,eAII;AAAQ,IAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI;AAAQ,IAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAQ,IAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANJ,CADH,GASK,EAtBV,CADJ,CADJ;AA4BH,CAnCD;;AAqCA,MAAMW,eAAe,GAAGF,KAAK,IAAI;AAC7B,SAAO;AACHH,IAAAA,aAAa,EAAEG,KAAK,CAACG,OAAN,CAAcC;AAD1B,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHb,IAAAA,SAAS,EAAE,MAAMa,QAAQ,CAAClB,eAAe,EAAhB;AADtB,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAACe,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,aAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './demographics.css'\r\nimport { connect } from 'react-redux';\r\nimport { getStatesAction } from '../../store/actions/patientActions';\r\n\r\nconst SelectOptions = (props) => {\r\nconst [stateSelect, setStateSelect] = useState('')\r\n\r\n    useEffect(() => {\r\n        props.getStates()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row select-option\">\r\n                <select\r\n                    onChange={(event) => setStateSelect(event.target.value)}\r\n                    value={stateSelect}\r\n                    className=\" btn btn-outline-primary dropdown-toggle\"\r\n                >\r\n                    <option Value=\"\" disabled>--Select State--</option>\r\n                    {props.allStatesData.sort().map((state, index) => (\r\n                        <option key={index} Value={state.state}>{state.state}</option>\r\n                    ))}\r\n                </select>\r\n\r\n\r\n                {stateSelect && stateSelect !== 'all' ?\r\n                    <select\r\n                        className=\"  btn btn-outline-primary dropdown-toggle\"\r\n                    >\r\n                        <option value=\"\">--Select District--</option>\r\n                        <option value=\"genderwise\">Gender Wise Data</option>\r\n                        <option value=\"currentstatus\">Current Status</option>\r\n                        <option value=\"transmissiontype\">Type of Transmission</option>\r\n                    </select>\r\n                    : ''}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allStatesData: state.patient.getStatesData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getStates: () => dispatch(getStatesAction())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectOptions)"]},"metadata":{},"sourceType":"module"}