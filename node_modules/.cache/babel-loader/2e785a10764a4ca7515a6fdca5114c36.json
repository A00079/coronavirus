{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\home\\\\geographics\\\\IndiaMap.js\";\nimport React, { useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { scaleQuantile } from 'd3-scale';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\n\nconst INDIA_TOPO_JSON = require('./india.topo.json');\n\nconst PROJECTION_CONFIG = {\n  scale: 650,\n  center: [78.9629, 22.5937] // always in [East Latitude, North Longitude]\n\n}; // Red Variants\n\nconst COLOR_RANGE = ['#ffedea', '#ffcec5', '#ffad9f', '#ff8a75', '#ff5533', '#e2492d', '#be3d26', '#9a311f', '#782618'];\nconst DEFAULT_COLOR = '#EEE';\n\nconst getRandomInt = () => {\n  return parseInt(Math.random() * 100);\n};\n\nconst geographyStyle = {\n  default: {\n    outline: 'none'\n  },\n  hover: {\n    fill: '#ccc',\n    transition: 'all 250ms',\n    outline: 'none'\n  },\n  pressed: {\n    outline: 'none'\n  }\n}; // will generate random heatmap data on every call\n// const getHeatMapData = () => {\n//     return [\n//         { id: 'AP', state: 'Andhra Pradesh', value: getRandomInt() },\n//         { id: 'AR', state: 'Arunachal Pradesh', value: getRandomInt() },\n//         { id: 'AS', state: 'Assam', value: getRandomInt() },\n//         { id: 'BR', state: 'Bihar', value: getRandomInt() },\n//         { id: 'CT', state: 'Chhattisgarh', value: getRandomInt() },\n//         { id: 'GA', state: 'Goa', value: 21 },\n//         { id: 'GJ', state: 'Gujarat', value: 22 },\n//         { id: 'HR', state: 'Haryana', value: getRandomInt() },\n//         { id: 'HP', state: 'Himachal Pradesh', value: 24 },\n//         { id: 'JH', state: 'Jharkhand', value: 26 },\n//         { id: 'KA', state: 'Karnataka', value: 27 },\n//         { id: 'KL', state: 'Kerala', value: getRandomInt() },\n//         { id: 'MP', state: 'Madhya Pradesh', value: getRandomInt() },\n//         { id: 'MH', state: 'Maharashtra', value: getRandomInt() },\n//         { id: 'MN', state: 'Manipur', value: getRandomInt() },\n//         { id: 'ML', state: 'Meghalaya', value: 59 },\n//         { id: 'MZ', state: 'Mizoram', value: getRandomInt() },\n//         { id: 'NL', state: 'Nagaland', value: 59 },\n//         { id: 'OR', state: 'Odisha', value: 59 },\n//         { id: 'PB', state: 'Punjab', value: getRandomInt() },\n//         { id: 'RJ', state: 'Rajasthan', value: getRandomInt() },\n//         { id: 'SK', state: 'Sikkim', value: getRandomInt() },\n//         { id: 'TN', state: 'Tamil Nadu', value: getRandomInt() },\n//         { id: 'TG', state: 'Telangana', value: getRandomInt() },\n//         { id: 'TR', state: 'Tripura', value: 14 },\n//         { id: 'UT', state: 'Uttarakhand', value: getRandomInt() },\n//         { id: 'UP', state: 'Uttar Pradesh', value: 15 },\n//         { id: 'WB', state: 'West Bengal', value: 17 },\n//         { id: 'WB', state: 'West Bengal', value: 17 },\n//         { id: 'AN', state: 'Andaman and Nicobar Islands', value: getRandomInt() },\n//         { id: 'CH', state: 'Chandigarh', value: getRandomInt() },\n//         { id: 'DN', state: 'Dadra and Nagar Haveli', value: 19 },\n//         { id: 'DD', state: 'Daman and Diu', value: 20 },\n//         { id: 'DL', state: 'Delhi', value: 59 },\n//         { id: 'JK', state: 'Jammu and Kashmir', value: 25 },\n//         { id: 'LA', state: 'Ladakh', value: getRandomInt() },\n//         { id: 'LD', state: 'Lakshadweep', value: getRandomInt() },\n//         { id: 'PY', state: 'Puducherry', value: getRandomInt() }\n//     ];\n// };\n\nconst IndiaMap = () => {\n  const [tooltipContent, setTooltipContent] = useState(''); // const [data, setData] = useState(getHeatMapData());\n\n  const [data, setData] = useState(''); // const gradientData = {\n  //     fromColor: COLOR_RANGE[0],\n  //     toColor: COLOR_RANGE[COLOR_RANGE.length - 1],\n  //     min: 0,\n  //     max: data.reduce((max, item) => (item.value > max ? item.value : max), 0)\n  //   };\n\n  const colorScale = scaleQuantile().domain(data.map(d => d.value)).range(COLOR_RANGE);\n\n  const onMouseEnter = (geo, current = {\n    value: 'NA'\n  }) => {\n    return () => {\n      setTooltipContent(`${geo.properties.name}: ${current.value}`);\n    };\n  };\n\n  const onMouseLeave = () => {\n    setTooltipContent('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactTooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, tooltipContent), /*#__PURE__*/React.createElement(ComposableMap, {\n    projectionConfig: PROJECTION_CONFIG,\n    projection: \"geoMercator\",\n    width: 420,\n    height: 520,\n    \"data-tip\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Geographies, {\n    geography: INDIA_TOPO_JSON,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, ({\n    geographies\n  }) => geographies.map(geo => {\n    const current = data.find(s => s.id === geo.id);\n    return /*#__PURE__*/React.createElement(Geography, {\n      key: geo.rsmKey,\n      geography: geo,\n      fill: current ? colorScale(current.value) : DEFAULT_COLOR,\n      style: geographyStyle,\n      onMouseEnter: onMouseEnter(geo, current),\n      onMouseLeave: onMouseLeave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    });\n  }))));\n};\n\nexport default IndiaMap;","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/home/geographics/IndiaMap.js"],"names":["React","useState","ReactTooltip","scaleQuantile","ComposableMap","Geographies","Geography","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","DEFAULT_COLOR","getRandomInt","parseInt","Math","random","geographyStyle","default","outline","hover","fill","transition","pressed","IndiaMap","tooltipContent","setTooltipContent","data","setData","colorScale","domain","map","d","value","range","onMouseEnter","geo","current","properties","name","onMouseLeave","geographies","find","s","id","rsmKey"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { scaleQuantile } from 'd3-scale';\r\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\r\nconst INDIA_TOPO_JSON = require('./india.topo.json');\r\n\r\nconst PROJECTION_CONFIG = {\r\n    scale: 650,\r\n    center: [78.9629, 22.5937] // always in [East Latitude, North Longitude]\r\n};\r\n\r\n\r\n// Red Variants\r\nconst COLOR_RANGE = [\r\n    '#ffedea',\r\n    '#ffcec5',\r\n    '#ffad9f',\r\n    '#ff8a75',\r\n    '#ff5533',\r\n    '#e2492d',\r\n    '#be3d26',\r\n    '#9a311f',\r\n    '#782618'\r\n];\r\n\r\nconst DEFAULT_COLOR = '#EEE';\r\n\r\nconst getRandomInt = () => {\r\n    return parseInt(Math.random() * 100);\r\n};\r\n\r\nconst geographyStyle = {\r\n    default: {\r\n        outline: 'none'\r\n    },\r\n    hover: {\r\n        fill: '#ccc',\r\n        transition: 'all 250ms',\r\n        outline: 'none'\r\n    },\r\n    pressed: {\r\n        outline: 'none'\r\n    }\r\n};\r\n\r\n// will generate random heatmap data on every call\r\n// const getHeatMapData = () => {\r\n//     return [\r\n//         { id: 'AP', state: 'Andhra Pradesh', value: getRandomInt() },\r\n//         { id: 'AR', state: 'Arunachal Pradesh', value: getRandomInt() },\r\n//         { id: 'AS', state: 'Assam', value: getRandomInt() },\r\n//         { id: 'BR', state: 'Bihar', value: getRandomInt() },\r\n//         { id: 'CT', state: 'Chhattisgarh', value: getRandomInt() },\r\n//         { id: 'GA', state: 'Goa', value: 21 },\r\n//         { id: 'GJ', state: 'Gujarat', value: 22 },\r\n//         { id: 'HR', state: 'Haryana', value: getRandomInt() },\r\n//         { id: 'HP', state: 'Himachal Pradesh', value: 24 },\r\n//         { id: 'JH', state: 'Jharkhand', value: 26 },\r\n//         { id: 'KA', state: 'Karnataka', value: 27 },\r\n//         { id: 'KL', state: 'Kerala', value: getRandomInt() },\r\n//         { id: 'MP', state: 'Madhya Pradesh', value: getRandomInt() },\r\n//         { id: 'MH', state: 'Maharashtra', value: getRandomInt() },\r\n//         { id: 'MN', state: 'Manipur', value: getRandomInt() },\r\n//         { id: 'ML', state: 'Meghalaya', value: 59 },\r\n//         { id: 'MZ', state: 'Mizoram', value: getRandomInt() },\r\n//         { id: 'NL', state: 'Nagaland', value: 59 },\r\n//         { id: 'OR', state: 'Odisha', value: 59 },\r\n//         { id: 'PB', state: 'Punjab', value: getRandomInt() },\r\n//         { id: 'RJ', state: 'Rajasthan', value: getRandomInt() },\r\n//         { id: 'SK', state: 'Sikkim', value: getRandomInt() },\r\n//         { id: 'TN', state: 'Tamil Nadu', value: getRandomInt() },\r\n//         { id: 'TG', state: 'Telangana', value: getRandomInt() },\r\n//         { id: 'TR', state: 'Tripura', value: 14 },\r\n//         { id: 'UT', state: 'Uttarakhand', value: getRandomInt() },\r\n//         { id: 'UP', state: 'Uttar Pradesh', value: 15 },\r\n//         { id: 'WB', state: 'West Bengal', value: 17 },\r\n//         { id: 'WB', state: 'West Bengal', value: 17 },\r\n//         { id: 'AN', state: 'Andaman and Nicobar Islands', value: getRandomInt() },\r\n//         { id: 'CH', state: 'Chandigarh', value: getRandomInt() },\r\n//         { id: 'DN', state: 'Dadra and Nagar Haveli', value: 19 },\r\n//         { id: 'DD', state: 'Daman and Diu', value: 20 },\r\n//         { id: 'DL', state: 'Delhi', value: 59 },\r\n//         { id: 'JK', state: 'Jammu and Kashmir', value: 25 },\r\n//         { id: 'LA', state: 'Ladakh', value: getRandomInt() },\r\n//         { id: 'LD', state: 'Lakshadweep', value: getRandomInt() },\r\n//         { id: 'PY', state: 'Puducherry', value: getRandomInt() }\r\n//     ];\r\n// };\r\n\r\n\r\n\r\nconst IndiaMap = () => {\r\n    const [tooltipContent, setTooltipContent] = useState('');\r\n    // const [data, setData] = useState(getHeatMapData());\r\n    const [data, setData] = useState('');\r\n\r\n    // const gradientData = {\r\n    //     fromColor: COLOR_RANGE[0],\r\n    //     toColor: COLOR_RANGE[COLOR_RANGE.length - 1],\r\n    //     min: 0,\r\n    //     max: data.reduce((max, item) => (item.value > max ? item.value : max), 0)\r\n    //   };\r\n    \r\n      const colorScale = scaleQuantile()\r\n        .domain(data.map(d => d.value))\r\n        .range(COLOR_RANGE);\r\n    \r\n      const onMouseEnter = (geo, current = { value: 'NA' }) => {\r\n        return () => {\r\n          setTooltipContent(`${geo.properties.name}: ${current.value}`);\r\n        };\r\n      };\r\n    \r\n      const onMouseLeave = () => {\r\n        setTooltipContent('');\r\n      };\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <ReactTooltip>{tooltipContent}</ReactTooltip>\r\n            <ComposableMap\r\n                projectionConfig={PROJECTION_CONFIG}\r\n                projection=\"geoMercator\"\r\n                width={420}\r\n                height={520}\r\n                data-tip=\"\"\r\n            >\r\n                <Geographies geography={INDIA_TOPO_JSON}>\r\n                    {({ geographies }) =>\r\n                        geographies.map(geo => {\r\n                            const current = data.find(s => s.id === geo.id);\r\n                            return (\r\n                                <Geography\r\n                                    key={geo.rsmKey}\r\n                                    geography={geo}\r\n                                    fill={current ? colorScale(current.value) : DEFAULT_COLOR}\r\n                                    style={geographyStyle}\r\n                                    onMouseEnter={onMouseEnter(geo, current)}\r\n                                    onMouseLeave={onMouseLeave}\r\n                                />\r\n                            );\r\n                        })\r\n                    }\r\n                </Geographies>\r\n            </ComposableMap>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndiaMap"]},"metadata":{},"sourceType":"module"}