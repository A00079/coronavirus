{"ast":null,"code":"import _slicedToArray from\"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import ReactTooltip from'react-tooltip';import LinearGradient from'./LinearGradient.js';import{scaleQuantile}from'd3-scale';import StateStats from'./StateStats';import{ComposableMap,Geographies,Geography}from'react-simple-maps';import{connect}from'react-redux';var INDIA_TOPO_JSON=require('./india.topo.json');var PROJECTION_CONFIG={scale:650,center:[78.9629,22.5937]// always in [East Latitude, North Longitude]\n};// Red Variants\nvar COLOR_RANGE=['#ffedea','#ffcec5','#ffad9f','#ff8a75','#ff5533','#e2492d','#be3d26','#9a311f','#782618'];var DEFAULT_COLOR='#EEE';var getRandomInt=function getRandomInt(){return parseInt(Math.random()*100);};var geographyStyle={default:{outline:'none'},hover:{fill:'#ccc',transition:'all 250ms',outline:'none'},pressed:{outline:'none'}};var IndiaMap=function IndiaMap(props){// custom array of objects for states of map\nvar newArr=[];newArr=props.states.map(function(state){// newArr.push(state)\nnewArr.push(state.active);});// will generate random heatmap data on every call\nvar getHeatMapData=function getHeatMapData(){// return newArr\nreturn[{id:'AP',state:'Andhra Pradesh',value:524},{id:'AR',state:'Arunachal Pradesh',value:getRandomInt()},{id:'AS',state:'Assam',value:getRandomInt()},{id:'BR',state:'Bihar',value:getRandomInt()},{id:'CT',state:'Chhattisgarh',value:getRandomInt()},{id:'GA',state:'Goa',value:21},{id:'GJ',state:'Gujarat',value:22},{id:'HR',state:'Haryana',value:getRandomInt()},{id:'HP',state:'Himachal Pradesh',value:24},{id:'JH',state:'Jharkhand',value:26},{id:'KA',state:'Karnataka',value:27},{id:'KL',state:'Kerala',value:getRandomInt()},{id:'MP',state:'Madhya Pradesh',value:getRandomInt()},{id:'MH',state:'Maharashtra',value:55},{id:'MN',state:'Manipur',value:getRandomInt()},{id:'ML',state:'Meghalaya',value:59},{id:'MZ',state:'Mizoram',value:getRandomInt()},{id:'NL',state:'Nagaland',value:59},{id:'OR',state:'Odisha',value:59},{id:'PB',state:'Punjab',value:getRandomInt()},{id:'RJ',state:'Rajasthan',value:getRandomInt()},{id:'SK',state:'Sikkim',value:getRandomInt()},{id:'TN',state:'Tamil Nadu',value:getRandomInt()},{id:'TG',state:'Telangana',value:getRandomInt()},{id:'TR',state:'Tripura',value:14},{id:'UT',state:'Uttarakhand',value:getRandomInt()},{id:'UP',state:'Uttar Pradesh',value:15},{id:'WB',state:'West Bengal',value:17},{id:'WB',state:'West Bengal',value:17},{id:'AN',state:'Andaman and Nicobar Islands',value:getRandomInt()},{id:'CH',state:'Chandigarh',value:getRandomInt()},{id:'DN',state:'Dadra and Nagar Haveli',value:19},{id:'DD',state:'Daman and Diu',value:20},{id:'DL',state:'Delhi',value:59},{id:'JK',state:'Jammu and Kashmir',value:25},{id:'LA',state:'Ladakh',value:getRandomInt()},{id:'LD',state:'Lakshadweep',value:getRandomInt()},{id:'PY',state:'Puducherry',value:getRandomInt()}];};var _useState=useState(''),_useState2=_slicedToArray(_useState,2),tooltipContent=_useState2[0],setTooltipContent=_useState2[1];var _useState3=useState(getHeatMapData()),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),confirmed=_useState6[0],setConfirmed=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),stateName=_useState8[0],setStateName=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),lastUpdatedTime=_useState10[0],setLastUpdatedTime=_useState10[1];var gradientData={fromColor:COLOR_RANGE[0],toColor:COLOR_RANGE[COLOR_RANGE.length-1],min:0,max:data.reduce(function(max,item){return item.value>max?item.value:max;},0)};var colorScale=scaleQuantile().domain(data.map(function(d){return d.value;})).range(COLOR_RANGE);var onMouseEnter=function onMouseEnter(geo){var current=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{value:'NA'};return function(){setTooltipContent(\"\".concat(geo.properties.name,\": \").concat(current.value));setConfirmed(current.value);setStateName(\"\".concat(geo.properties.name));};};var onMouseLeave=function onMouseLeave(){setTooltipContent('');};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(StateStats,{confirmed:confirmed,stateName:stateName}),/*#__PURE__*/React.createElement(ReactTooltip,null,tooltipContent),/*#__PURE__*/React.createElement(ComposableMap,{projectionConfig:PROJECTION_CONFIG,projection:\"geoMercator\",width:420,height:520,\"data-tip\":\"\"},/*#__PURE__*/React.createElement(Geographies,{geography:INDIA_TOPO_JSON},function(_ref){var geographies=_ref.geographies;return geographies.map(function(geo){var current=data.find(function(s){return s.id===geo.id;});return/*#__PURE__*/React.createElement(Geography,{key:geo.rsmKey,geography:geo,fill:current?colorScale(current.value):DEFAULT_COLOR,style:geographyStyle,onMouseEnter:onMouseEnter(geo,current),onMouseLeave:onMouseLeave});});})),/*#__PURE__*/React.createElement(LinearGradient,{data:gradientData}));};var mapStateToProps=function mapStateToProps(state){return{states:state.stats.statesData};};export default connect(mapStateToProps)(IndiaMap);","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/home/geographics/IndiaMap.js"],"names":["React","useState","useEffect","ReactTooltip","LinearGradient","scaleQuantile","StateStats","ComposableMap","Geographies","Geography","connect","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","DEFAULT_COLOR","getRandomInt","parseInt","Math","random","geographyStyle","default","outline","hover","fill","transition","pressed","IndiaMap","props","newArr","states","map","state","push","active","getHeatMapData","id","value","tooltipContent","setTooltipContent","data","setData","confirmed","setConfirmed","stateName","setStateName","lastUpdatedTime","setLastUpdatedTime","gradientData","fromColor","toColor","length","min","max","reduce","item","colorScale","domain","d","range","onMouseEnter","geo","current","properties","name","onMouseLeave","geographies","find","s","rsmKey","mapStateToProps","stats","statesData"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport LinearGradient from './LinearGradient.js';\r\nimport { scaleQuantile } from 'd3-scale';\r\nimport StateStats from './StateStats';\r\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\r\nimport { connect } from 'react-redux';\r\nconst INDIA_TOPO_JSON = require('./india.topo.json');\r\n\r\n\r\nconst PROJECTION_CONFIG = {\r\n    scale: 650,\r\n    center: [78.9629, 22.5937] // always in [East Latitude, North Longitude]\r\n};\r\n\r\n\r\n// Red Variants\r\nconst COLOR_RANGE = [\r\n    '#ffedea',\r\n    '#ffcec5',\r\n    '#ffad9f',\r\n    '#ff8a75',\r\n    '#ff5533',\r\n    '#e2492d',\r\n    '#be3d26',\r\n    '#9a311f',\r\n    '#782618'\r\n];\r\n\r\nconst DEFAULT_COLOR = '#EEE';\r\n\r\nconst getRandomInt = () => {\r\n    return parseInt(Math.random() * 100);\r\n};\r\n\r\nconst geographyStyle = {\r\n    default: {\r\n        outline: 'none'\r\n    },\r\n    hover: {\r\n        fill: '#ccc',\r\n        transition: 'all 250ms',\r\n        outline: 'none'\r\n    },\r\n    pressed: {\r\n        outline: 'none'\r\n    }\r\n};\r\n\r\n\r\n\r\nconst IndiaMap = (props) => {\r\n    // custom array of objects for states of map\r\n\r\n    var newArr = []\r\n\r\n    newArr = props.states.map(state => {\r\n        // newArr.push(state)\r\n        newArr.push(state.active)\r\n    })\r\n\r\n\r\n    // will generate random heatmap data on every call\r\n    const getHeatMapData = () => {\r\n        // return newArr\r\n\r\n        return [\r\n            { id: 'AP', state: 'Andhra Pradesh', value: 524 },\r\n            { id: 'AR', state: 'Arunachal Pradesh', value: getRandomInt() },\r\n            { id: 'AS', state: 'Assam', value: getRandomInt() },\r\n            { id: 'BR', state: 'Bihar', value: getRandomInt() },\r\n            { id: 'CT', state: 'Chhattisgarh', value: getRandomInt() },\r\n            { id: 'GA', state: 'Goa', value: 21 },\r\n            { id: 'GJ', state: 'Gujarat', value: 22 },\r\n            { id: 'HR', state: 'Haryana', value: getRandomInt() },\r\n            { id: 'HP', state: 'Himachal Pradesh', value: 24 },\r\n            { id: 'JH', state: 'Jharkhand', value: 26 },\r\n            { id: 'KA', state: 'Karnataka', value: 27 },\r\n            { id: 'KL', state: 'Kerala', value: getRandomInt() },\r\n            { id: 'MP', state: 'Madhya Pradesh', value: getRandomInt() },\r\n            { id: 'MH', state: 'Maharashtra', value: 55 },\r\n            { id: 'MN', state: 'Manipur', value: getRandomInt() },\r\n            { id: 'ML', state: 'Meghalaya', value: 59 },\r\n            { id: 'MZ', state: 'Mizoram', value: getRandomInt() },\r\n            { id: 'NL', state: 'Nagaland', value: 59 },\r\n            { id: 'OR', state: 'Odisha', value: 59 },\r\n            { id: 'PB', state: 'Punjab', value: getRandomInt() },\r\n            { id: 'RJ', state: 'Rajasthan', value: getRandomInt() },\r\n            { id: 'SK', state: 'Sikkim', value: getRandomInt() },\r\n            { id: 'TN', state: 'Tamil Nadu', value: getRandomInt() },\r\n            { id: 'TG', state: 'Telangana', value: getRandomInt() },\r\n            { id: 'TR', state: 'Tripura', value: 14 },\r\n            { id: 'UT', state: 'Uttarakhand', value: getRandomInt() },\r\n            { id: 'UP', state: 'Uttar Pradesh', value: 15 },\r\n            { id: 'WB', state: 'West Bengal', value: 17 },\r\n            { id: 'WB', state: 'West Bengal', value: 17 },\r\n            { id: 'AN', state: 'Andaman and Nicobar Islands', value: getRandomInt() },\r\n            { id: 'CH', state: 'Chandigarh', value: getRandomInt() },\r\n            { id: 'DN', state: 'Dadra and Nagar Haveli', value: 19 },\r\n            { id: 'DD', state: 'Daman and Diu', value: 20 },\r\n            { id: 'DL', state: 'Delhi', value: 59 },\r\n            { id: 'JK', state: 'Jammu and Kashmir', value: 25 },\r\n            { id: 'LA', state: 'Ladakh', value: getRandomInt() },\r\n            { id: 'LD', state: 'Lakshadweep', value: getRandomInt() },\r\n            { id: 'PY', state: 'Puducherry', value: getRandomInt() }\r\n        ];\r\n    };\r\n\r\n    const [tooltipContent, setTooltipContent] = useState('');\r\n    const [data, setData] = useState(getHeatMapData());\r\n    const [confirmed, setConfirmed] = useState('');\r\n    const [stateName, setStateName] = useState('');\r\n    const [lastUpdatedTime, setLastUpdatedTime] = useState('');\r\n\r\n\r\n    const gradientData = {\r\n        fromColor: COLOR_RANGE[0],\r\n        toColor: COLOR_RANGE[COLOR_RANGE.length - 1],\r\n        min: 0,\r\n        max: data.reduce((max, item) => (item.value > max ? item.value : max), 0)\r\n    };\r\n\r\n    const colorScale = scaleQuantile()\r\n        .domain(data.map(d => d.value))\r\n        .range(COLOR_RANGE);\r\n\r\n    const onMouseEnter = (geo, current = { value: 'NA' }) => {\r\n        \r\n        return () => {\r\n            setTooltipContent(`${geo.properties.name}: ${current.value}`);\r\n            setConfirmed(current.value)\r\n            setStateName(`${geo.properties.name}`)\r\n        };\r\n    };\r\n\r\n    const onMouseLeave = () => {\r\n        setTooltipContent('');\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <StateStats confirmed = {confirmed} stateName = {stateName}/>\r\n            <ReactTooltip>{tooltipContent}</ReactTooltip>\r\n            <ComposableMap\r\n                projectionConfig={PROJECTION_CONFIG}\r\n                projection=\"geoMercator\"\r\n                width={420}\r\n                height={520}\r\n                data-tip=\"\"\r\n            >\r\n                <Geographies geography={INDIA_TOPO_JSON}>\r\n                    {({ geographies }) =>\r\n                        geographies.map(geo => {\r\n                            const current = data.find(s => s.id === geo.id);\r\n                            return (\r\n                                <Geography\r\n                                    key={geo.rsmKey}\r\n                                    geography={geo}\r\n                                    fill={current ? colorScale(current.value) : DEFAULT_COLOR}\r\n                                    style={geographyStyle}\r\n                                    onMouseEnter={onMouseEnter(geo, current)}\r\n                                    onMouseLeave={onMouseLeave}\r\n                                />\r\n                            );\r\n                        })\r\n                    }\r\n                </Geographies>\r\n            </ComposableMap>\r\n        <LinearGradient data={gradientData} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        states : state.stats.statesData\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(IndiaMap)"]},"metadata":{},"sourceType":"module"}