{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\sagar\\\\Desktop\\\\projects\\\\React projects\\\\coronavirus\\\\src\\\\components\\\\home\\\\geographics\\\\TestMap.js\";\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\n\nconst INDIA_TOPO_JSON = require('./Maharashtra.topo.json');\n\nconst PROJECTION_CONFIG = {\n  scale: 350,\n  center: [78.9629, 22.5937]\n};\n\nconst getHeatMapData = () => {\n  return [{\n    id: 'AP',\n    state: 'Andhra Pradesh',\n    value: getRandomInt()\n  }, {\n    id: 'AR',\n    state: 'Arunachal Pradesh',\n    value: getRandomInt()\n  }, {\n    id: 'AS',\n    state: 'Assam',\n    value: getRandomInt()\n  }, {\n    id: 'BR',\n    state: 'Bihar',\n    value: getRandomInt()\n  }, {\n    id: 'CT',\n    state: 'Chhattisgarh',\n    value: getRandomInt()\n  }, {\n    id: 'GA',\n    state: 'Goa',\n    value: 21\n  }, {\n    id: 'GJ',\n    state: 'Gujarat',\n    value: 22\n  }, {\n    id: 'HR',\n    state: 'Haryana',\n    value: getRandomInt()\n  }, {\n    id: 'HP',\n    state: 'Himachal Pradesh',\n    value: 24\n  }, {\n    id: 'JH',\n    state: 'Jharkhand',\n    value: 26\n  }, {\n    id: 'KA',\n    state: 'Karnataka',\n    value: 27\n  }, {\n    id: 'KL',\n    state: 'Kerala',\n    value: getRandomInt()\n  }, {\n    id: 'MP',\n    state: 'Madhya Pradesh',\n    value: getRandomInt()\n  }, {\n    id: 'MH',\n    state: 'Maharashtra',\n    value: getRandomInt()\n  }, {\n    id: 'MN',\n    state: 'Manipur',\n    value: getRandomInt()\n  }, {\n    id: 'ML',\n    state: 'Meghalaya',\n    value: 59\n  }, {\n    id: 'MZ',\n    state: 'Mizoram',\n    value: getRandomInt()\n  }, {\n    id: 'NL',\n    state: 'Nagaland',\n    value: 59\n  }, {\n    id: 'OR',\n    state: 'Odisha',\n    value: 59\n  }, {\n    id: 'PB',\n    state: 'Punjab',\n    value: getRandomInt()\n  }, {\n    id: 'RJ',\n    state: 'Rajasthan',\n    value: getRandomInt()\n  }, {\n    id: 'SK',\n    state: 'Sikkim',\n    value: getRandomInt()\n  }, {\n    id: 'TN',\n    state: 'Tamil Nadu',\n    value: getRandomInt()\n  }, {\n    id: 'TG',\n    state: 'Telangana',\n    value: getRandomInt()\n  }, {\n    id: 'TR',\n    state: 'Tripura',\n    value: 14\n  }, {\n    id: 'UT',\n    state: 'Uttarakhand',\n    value: getRandomInt()\n  }, {\n    id: 'UP',\n    state: 'Uttar Pradesh',\n    value: 15\n  }, {\n    id: 'WB',\n    state: 'West Bengal',\n    value: 17\n  }, {\n    id: 'WB',\n    state: 'West Bengal',\n    value: 17\n  }, {\n    id: 'AN',\n    state: 'Andaman and Nicobar Islands',\n    value: getRandomInt()\n  }, {\n    id: 'CH',\n    state: 'Chandigarh',\n    value: getRandomInt()\n  }, {\n    id: 'DN',\n    state: 'Dadra and Nagar Haveli',\n    value: 19\n  }, {\n    id: 'DD',\n    state: 'Daman and Diu',\n    value: 20\n  }, {\n    id: 'DL',\n    state: 'Delhi',\n    value: 59\n  }, {\n    id: 'JK',\n    state: 'Jammu and Kashmir',\n    value: 25\n  }, {\n    id: 'LA',\n    state: 'Ladakh',\n    value: getRandomInt()\n  }, {\n    id: 'LD',\n    state: 'Lakshadweep',\n    value: getRandomInt()\n  }, {\n    id: 'PY',\n    state: 'Puducherry',\n    value: getRandomInt()\n  }];\n};\n\nfunction TestMap() {\n  return /*#__PURE__*/React.createElement(ComposableMap, {\n    projectionConfig: PROJECTION_CONFIG,\n    projection: \"geoMercator\",\n    width: 600,\n    height: 220,\n    \"data-tip\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Geographies, {\n    geography: INDIA_TOPO_JSON,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, ({\n    geographies\n  }) => geographies.map(geo => {\n    const current = data.find(s => s.id === geo.id);\n    return /*#__PURE__*/React.createElement(Geography, {\n      key: geo.rsmKey,\n      geography: geo,\n      fill: current ? colorScale(current.value) : DEFAULT_COLOR,\n      style: geographyStyle,\n      onMouseEnter: onMouseEnter(geo, current),\n      onMouseLeave: onMouseLeave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    });\n  })));\n}\n\nexport default TestMap;","map":{"version":3,"sources":["D:/Users/sagar/Desktop/projects/React projects/coronavirus/src/components/home/geographics/TestMap.js"],"names":["ComposableMap","Geographies","Geography","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","getHeatMapData","id","state","value","getRandomInt","TestMap","geographies","map","geo","current","data","find","s","rsmKey","colorScale","DEFAULT_COLOR","geographyStyle","onMouseEnter","onMouseLeave"],"mappings":"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","sourcesContent":["import { \r\n    ComposableMap, Geographies, Geography \r\n  } from 'react-simple-maps';\r\n  \r\n  const INDIA_TOPO_JSON = require('./Maharashtra.topo.json');\r\n  \r\n  const PROJECTION_CONFIG = {\r\n    scale: 350,\r\n    center: [78.9629, 22.5937]\r\n  };\r\n\r\n  const getHeatMapData = () => {\r\n    return [\r\n      { id: 'AP', state: 'Andhra Pradesh', value: getRandomInt() },\r\n      { id: 'AR', state: 'Arunachal Pradesh', value: getRandomInt() },\r\n      { id: 'AS', state: 'Assam', value: getRandomInt() },\r\n      { id: 'BR', state: 'Bihar', value: getRandomInt() },\r\n      { id: 'CT', state: 'Chhattisgarh', value: getRandomInt() },\r\n      { id: 'GA', state: 'Goa', value: 21 },\r\n      { id: 'GJ', state: 'Gujarat', value: 22 },\r\n      { id: 'HR', state: 'Haryana', value: getRandomInt() },\r\n      { id: 'HP', state: 'Himachal Pradesh', value: 24 },\r\n      { id: 'JH', state: 'Jharkhand', value: 26 },\r\n      { id: 'KA', state: 'Karnataka', value: 27 },\r\n      { id: 'KL', state: 'Kerala', value: getRandomInt() },\r\n      { id: 'MP', state: 'Madhya Pradesh', value: getRandomInt() },\r\n      { id: 'MH', state: 'Maharashtra', value: getRandomInt() },\r\n      { id: 'MN', state: 'Manipur', value: getRandomInt() },\r\n      { id: 'ML', state: 'Meghalaya', value: 59 },\r\n      { id: 'MZ', state: 'Mizoram', value: getRandomInt() },\r\n      { id: 'NL', state: 'Nagaland', value: 59 },\r\n      { id: 'OR', state: 'Odisha', value: 59 },\r\n      { id: 'PB', state: 'Punjab', value: getRandomInt() },\r\n      { id: 'RJ', state: 'Rajasthan', value: getRandomInt() },\r\n      { id: 'SK', state: 'Sikkim', value: getRandomInt() },\r\n      { id: 'TN', state: 'Tamil Nadu', value: getRandomInt() },\r\n      { id: 'TG', state: 'Telangana', value: getRandomInt() },\r\n      { id: 'TR', state: 'Tripura', value: 14 },\r\n      { id: 'UT', state: 'Uttarakhand', value: getRandomInt() },\r\n      { id: 'UP', state: 'Uttar Pradesh', value: 15 },\r\n      { id: 'WB', state: 'West Bengal', value: 17 },\r\n      { id: 'WB', state: 'West Bengal', value: 17 },\r\n      { id: 'AN', state: 'Andaman and Nicobar Islands', value: getRandomInt() },\r\n      { id: 'CH', state: 'Chandigarh', value: getRandomInt() },\r\n      { id: 'DN', state: 'Dadra and Nagar Haveli', value: 19 },\r\n      { id: 'DD', state: 'Daman and Diu', value: 20 },\r\n      { id: 'DL', state: 'Delhi', value: 59 },\r\n      { id: 'JK', state: 'Jammu and Kashmir', value: 25 },\r\n      { id: 'LA', state: 'Ladakh', value: getRandomInt() },\r\n      { id: 'LD', state: 'Lakshadweep', value: getRandomInt() },\r\n      { id: 'PY', state: 'Puducherry', value: getRandomInt() }\r\n    ];\r\n  };\r\n\r\n  function TestMap() {\r\n    return (\r\n      <ComposableMap\r\n          projectionConfig={PROJECTION_CONFIG}\r\n          projection=\"geoMercator\"\r\n          width={600}\r\n          height={220}\r\n          data-tip=\"\"\r\n      >\r\n          <Geographies geography={INDIA_TOPO_JSON}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => {\r\n                const current = data.find(s => s.id === geo.id);\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    fill={current ? colorScale(current.value) : DEFAULT_COLOR}\r\n                    style={geographyStyle}\r\n                    onMouseEnter={onMouseEnter(geo, current)}\r\n                    onMouseLeave={onMouseLeave}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n      </ComposableMap>\r\n    )\r\n  }\r\n\r\n  export default TestMap"]},"metadata":{},"sourceType":"module"}