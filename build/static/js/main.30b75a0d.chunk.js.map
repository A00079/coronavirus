{"version":3,"sources":["components/navbar/NavBar.js","store/actions/darkModeActions.js","components/home/LiveStats.js","components/home/UpdateLiveStats.js","components/home/StateTable.js","store/actions/statActions.js","components/home/minigraphs/ActiveMiniGraph.js","components/home/minigraphs/ConfirmedMiniGraph.js","components/home/minigraphs/RecoveredMiniGraph.js","components/home/minigraphs/DeceasedMiniGraph.js","components/home/TestedSamples.js","components/home/LatestUpdates.js","components/home/Home.js","components/demographics/BoxMessage.js","components/demographics/PatientModel.js","components/demographics/PatientHeatMap.js","components/demographics/SelectOptions.js","store/actions/patientActions.js","components/demographics/Demographics.js","components/deep-dive/DeepDive.js","components/App.js","serviceWorker.js","store/reducers/patientReducer.js","store/reducers/statsReducer.js","store/reducers/darkModeReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","state","modeState","darkMode","hasmode","dispatch","setModeProp","mode","type","payload","darkModeAction","props","useState","JSON","parse","localStorage","getItem","setMode","useEffect","setItem","stringify","className","to","onClick","hoverColor","badgeColor","style","fontSize","name","textColor","fontWeight","count","activegraph","todayCount","UpdateLiveStats","convertedTime","lastUpdatedTime","isConfirmed","isRecover","searchValue","setSearchValue","helperVar","helperVar2","filteredStates","stateData","filter","stateName","push","deltaconfirmed","deltarecovered","toLowerCase","includes","i","console","log","id","placeholder","value","onChange","e","target","map","data","index","key","confirmed","textConfirmed","active","textActive","recovered","textRecovered","deaths","deltadeaths","textDeceased","getLiveStatsAction","statsResp","axios","get","factoidsResp","updatesResp","all","then","spread","allDataStats","allDataFactoids","allDataUpdates","statewise","slice","cases_time_series","tested","factoids","catch","err","timeseries","stats","timeSeries","getLiveStats","setTimeseries","graphElement1","useRef","length","graphData","useCallback","svg2","d3","current","width","height","x","domain","d","Date","range","y1","path2","append","datum","attr","y","curve","totalLength2","node","getTotalLength","transition","duration","animate","selectAll","enter","on","animationDelay","ref","viewBox","preserveAspectRatio","svg1","path1","totalLength1","svg3","path3","totalLength3","svg4","path4","totalLength4","samples","lastElement","last","Obj","bar","totalindividualstested","getLatestUpdates","latestUpdates","setLatestUpdates","reverse","item","update","liveStatsData","liveStats","statesData","timeSeriesData","lastupdatedtime","BoxMessage","setMessageBox","useLocalStorage","box","setBox","PatientModel","tabIndex","role","aria-labelledby","aria-hidden","patientNumber","patientData","patient","getPatientData","isChecked","setIsChecked","setPatientNumber","defaultChecked","htmlFor","patientnumber","data-toggle","data-target","gender","lineHeight","textAlign","allStatesData","getStatesData","getStates","resp","stateSelect","setStateSelect","event","Value","disabled","sort","getPatient","raw_data","DeepDive","exact","path","component","Home","Demographics","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initialState","fetchingData","errorPatientData","fetchingStates","errorFetchingStates","patientReducer","action","fetchingStats","errorFetchingStats","statsReducer","initial","darkModeReducer","combineReducers","middlewares","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.30b75a0d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { darkModeAction } from '../../store/actions/darkModeActions';\r\n\r\nconst getInitialMode = () => {\r\n  const saevdMode = JSON.parse(localStorage.getItem('dark-mode'))\r\n  return saevdMode || false\r\n}\r\n\r\nconst NavBar = (props) => {\r\n  const [mode, setMode] = useState(getInitialMode())\r\n\r\nuseEffect(() => {\r\n    props.setModeProp(mode)\r\n    localStorage.setItem('dark-mode', JSON.stringify(mode))\r\n}, [mode])\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ul className={`nav justify-content-center ${props.modeState === false ? \"grey lighten-4\" : 'dark-body'} py-4`}>\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link w3-animate-opacity\" to=\"/\">\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item w3-animate-opacity\">\r\n          <NavLink className=\"nav-link\" to=\"/demographics\">\r\n            Demographics\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item w3-animate-opacity\">\r\n          <NavLink className=\"nav-link\" to=\"/deep-dive\">\r\n            Deep Dive\r\n          </NavLink>\r\n        </li>\r\n        <li\r\n          onClick={() => setMode(!mode)}\r\n          className=\"dark-mode nav-item w3-animate-opacity\">\r\n          <NavLink className=\"nav-link\" to=\"#\">\r\n            {mode === false ?\r\n              <i className=\"far fa-moon\"></i>\r\n              : <i className=\"far fa-sun\"></i>}\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modeState: state.darkMode.hasmode\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setModeProp: (mode) => dispatch(darkModeAction(mode))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\r\n","// Darkmode Action\r\nexport const SET_MODE = \"SET_MODE\";\r\n\r\n\r\nexport const darkModeAction = (mode) => {\r\n    return {\r\n        type: SET_MODE,\r\n        payload: mode\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./livestats.css\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst LiveStats = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card mt-4 view overlay\">\r\n        <div\r\n          className={`card-body card-settings  ${props.modeState && 'dark-body'} rgba-${props.hoverColor}-slight`}\r\n        >\r\n          <div className=\"container row\">\r\n            <h3\r\n              className={`card-title ${props.badgeColor}`}\r\n              style={{ fontSize: \"20px\" }}\r\n            >\r\n              {props.name}\r\n            </h3>\r\n            <h3\r\n              className={`${props.textColor} ml-auto`}\r\n              style={{ fontSize: \"20px\", fontWeight: 700 }}\r\n            >\r\n              {props.count}\r\n            </h3>\r\n          </div>\r\n          {props.activegraph}\r\n\r\n          {/* CR for new delta cases */}\r\n          {props.todayCount <= 0 ? (\r\n            <p className={`${props.textColor} d-flex justify-content-start `}>No new cases yet</p>\r\n          ) : (\r\n              <div className=\"container row\">\r\n                <h3\r\n                  className={`${props.textColor} card-title`}\r\n                  style={{ fontSize: \"20px\" }}\r\n                >\r\n                  <i className=\"far fa-arrow-alt-circle-up cc_pointer text-small\"></i>\r\n                </h3>\r\n\r\n                <h3\r\n                  className={`${props.textColor} ml-auto`}\r\n                  style={{ fontSize: \"20px\", fontWeight: 700 }}\r\n                >\r\n                  [+{props.todayCount}]\r\n              </h3>\r\n              </div>\r\n            )}\r\n\r\n        </div>\r\n        <div\r\n          className={`mask flex-center rgba-${props.hoverColor}-slight`}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modeState: state.darkMode.hasmode\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LiveStats);\r\n","import React from \"react\";\r\nimport \"../../index.css\";\r\n\r\nconst UpdateLiveStats = (props) => {\r\n  let convertedTime;\r\n  convertedTime = (props.lastUpdatedTime);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p className=\"text-muted updatedat rgba-green-slight\">\r\n          Updated AT {convertedTime}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateLiveStats;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './statetable.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst StateTable = (props) => {\r\n\tconst [searchValue, setSearchValue] = useState('');\r\n\r\n\tlet helperVar = [];\r\n\tlet helperVar2 = [];\r\n\t//state search filter\r\n\tlet filteredStates = props.stateData.filter((stateName) => {\r\n\t\thelperVar.push(stateName.deltaconfirmed);\r\n\t\thelperVar2.push(stateName.deltarecovered);\r\n\t\treturn stateName.state.toLowerCase().includes(searchValue.toLowerCase());\r\n\t});\r\n\r\n\t// ==============================================================================\r\n\t// labels setter and unsetter depending upon if there is any case for current date\r\n\tvar isConfirmed;\r\n\tvar deActivate;\r\n\r\n\tfor (var i in helperVar) {\r\n\t\tif (helperVar[i] > 0) {\r\n\t\t\tisConfirmed = 'activate';\r\n\t\t} else {\r\n\t\t\tdeActivate = 'deactivate';\r\n\t\t}\r\n\t}\r\n\r\n\tvar isRecover;\r\n\tfor (var i in helperVar2) {\r\n\t\tif (helperVar2[i] > 0) {\r\n\t\t\tisRecover = 'activate';\r\n\t\t} else {\r\n\t\t\tdeActivate = 'deactivate';\r\n\t\t}\r\n\t}\r\n\t// =============================================================================\r\n\r\n\tconsole.log();\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"row before-table-row mt-3\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={`form-control col-sm-3 ${props.modeState && 'dark-body'}`}\r\n\t\t\t\t\tid=\"tableSearch\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Search State\"\r\n\t\t\t\t\tvalue={searchValue}\r\n\t\t\t\t\tonChange={(e) => setSearchValue(e.target.value)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{isConfirmed && (\r\n\t\t\t\t\t<div className=\"label ml-3\">\r\n\t\t\t\t\t\t<div className=\"box rgba-red-slight text-danger\">Today's High Infection</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{isRecover && (\r\n\t\t\t\t\t<div className=\"label ml-3\">\r\n\t\t\t\t\t\t<div className=\"box rgba-green-slight text-success\">Good Recoveries</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<table className=\"table\">\r\n\t\t\t\t<thead className=\"thead-dark\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>State</th>\r\n\t\t\t\t\t\t<th className=\"confirmed\"></th>\r\n\t\t\t\t\t\t<th className=\"active\"></th>\r\n\t\t\t\t\t\t<th className=\"recovered\"></th>\r\n\t\t\t\t\t\t<th className=\"deceased\"></th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{filteredStates.map((data, index) => (\r\n\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t<td className={`${props.modeState && 'dark-table'} `}>{data.state}</td>\r\n\t\t\t\t\t\t\t<td className={`${data.deltaconfirmed > 60 ? `rgba-red-slight` : ''} ${props.modeState && 'dark-table'}`}>\r\n\t\t\t\t\t\t\t\t{data.confirmed}\r\n\t\t\t\t\t\t\t\t{data.deltaconfirmed <= 0 ? (\r\n\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className={`far fa-arrow-alt-circle-up cc_pointer ${props.textConfirmed}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{data.deltaconfirmed}\r\n\t\t\t\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td className={`${props.modeState && 'dark-table'} `}>\r\n\t\t\t\t\t\t\t\t{data.active}\r\n\t\t\t\t\t\t\t\t{data.deltaconfirmed <= 0 ? (\r\n\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className={`far fa-arrow-alt-circle-up cc_pointer ${props.textActive}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{data.deltaconfirmed}\r\n\t\t\t\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td className={`${data.deltarecovered > 35 ? `rgba-green-slight` : ''} ${props.modeState && 'dark-table'}`}>\r\n\t\t\t\t\t\t\t\t{data.recovered}\r\n\t\t\t\t\t\t\t\t{data.deltarecovered <= 0 ? (\r\n\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className={`far fa-arrow-alt-circle-up cc_pointer ${props.textRecovered}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{data.deltarecovered}\r\n\t\t\t\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td className={`${props.modeState && 'dark-table'} `}>\r\n\t\t\t\t\t\t\t\t{data.deaths}\r\n\t\t\t\t\t\t\t\t{data.deltadeaths <= 0 ? (\r\n\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className={`far fa-arrow-alt-circle-up cc_pointer ${props.textDeceased}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{data.deltadeaths}\r\n\t\t\t\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tmodeState: state.darkMode.hasmode\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(StateTable);\r\n","import axios from \"axios\";\r\n\r\nexport const GET_LIVE_STATS = \"GET_LIVE_STATS\";\r\nexport const ERROR_LIVE_STATS = \"ERROR_LIVE_STATS\";\r\nexport const FETCHING_LIVE_STATS = \"FETCHING_LIVE_STATS\";\r\nexport const GET_STATES_DATA = \"GET_STATES_DATA\";\r\nexport const GET_TIME_SERIES = \"GET_TIME_SERIES\";\r\nexport const GET_TEST_SAMPLES = \"GET_TEST_SAMPLES\";\r\nexport const GET_FACTOIDS = \"GET_FACTOIDS\";\r\nexport const GET_UPDATES = \"GET_UPDATES\";\r\n\r\n\r\n\r\n\r\nexport const getLiveStatsAction = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: FETCHING_LIVE_STATS });\r\n    const statsRequest = \"https://api.covid19india.org/data.json\";\r\n    const factoidsRequest = \"https://api.covid19india.org/website_data.json\";\r\n    const updatesRequest = \"https://api.covid19india.org/updatelog/log.json\";\r\n\r\n    const statsResp = axios.get(statsRequest);\r\n    const factoidsResp = axios.get(factoidsRequest);\r\n    const updatesResp = axios.get(updatesRequest);\r\n\r\n    axios\r\n      .all([statsResp, factoidsResp, updatesResp])\r\n      .then(\r\n        axios.spread((...allData) => {\r\n          const allDataStats = allData[0];\r\n          const allDataFactoids = allData[1];\r\n          const allDataUpdates = allData[2];\r\n\r\n          dispatch({\r\n            type: GET_LIVE_STATS,\r\n            payload: allDataStats.data.statewise[0],\r\n          });\r\n          dispatch({\r\n            type: GET_STATES_DATA,\r\n            payload: allDataStats.data.statewise.slice(1, -1),\r\n          });\r\n          dispatch({\r\n            type: GET_TIME_SERIES,\r\n            payload: allDataStats.data.cases_time_series,\r\n          });\r\n          dispatch({\r\n            type: GET_TEST_SAMPLES,\r\n            payload: allDataStats.data.tested,\r\n          });\r\n          dispatch({\r\n            type: GET_FACTOIDS,\r\n            payload: allDataFactoids.data.factoids,\r\n          });\r\n          dispatch({\r\n            type: GET_UPDATES,\r\n            payload: allDataUpdates.data,\r\n          });\r\n        })\r\n      )\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch({ type: ERROR_LIVE_STATS, payload: \"Error. Try again\" });\r\n      });\r\n  };\r\n};\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLiveStatsAction } from \"../../../store/actions/statActions\";\r\n\r\nconst ActiveMiniGraph = (props) => {\r\n  const [timeseries, setTimeseries] = useState([]);\r\n  const graphElement1 = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.timeseries.length > 1) {\r\n      setTimeseries(props.timeseries.slice(props.timeseries.length - 25));\r\n    }\r\n  }, [props.timeseries]);\r\n\r\n  const graphData = useCallback(\r\n    (timeseries) => {\r\n      if (timeseries.length <= 1) return 0;\r\n      const data = timeseries;\r\n      const svg2 = d3.select(graphElement1.current);\r\n      const margin = { top: 20, right: 10, bottom: 30, left: 0 };\r\n      const width = 100 - margin.left - margin.right;\r\n      const height = 100 - margin.top - margin.bottom;\r\n\r\n      const x = d3\r\n        .scaleTime()\r\n        .domain(\r\n          d3.extent(data, function (d) {\r\n            return new Date(d[\"date\"] + \"2020\");\r\n          })\r\n        )\r\n        .range([0, width]);\r\n\r\n      const y1 = d3\r\n        .scaleLinear()\r\n        .domain([\r\n          0,\r\n          d3.max(data, function (d) {\r\n            return +d[\"dailyconfirmed\"];\r\n          }),\r\n        ])\r\n        .range([height, 0]);\r\n\r\n      const path2 = svg2\r\n        .append(\"path\")\r\n        .datum(data)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"cursor\", \"pointer\")\r\n        .attr(\"stroke\", \"#007bff99\")\r\n        .attr(\"stroke-width\", 2)\r\n        .attr(\"cursor\", \"pointer\")\r\n        .attr(\"cursor\", \"pointer\")\r\n        .attr(\r\n          \"d\",\r\n          d3\r\n            .line()\r\n            .x(function (d) {\r\n              return x(new Date(d[\"date\"] + \"2020\"));\r\n            })\r\n            .y(function (d, i) {\r\n              if (i === 0) {\r\n                return y1(\r\n                  d[\"dailyconfirmed\"] - d[\"dailyrecovered\"] - d[\"dailydeceased\"]\r\n                );\r\n              } else {\r\n                return y1(\r\n                  d[\"dailyconfirmed\"] - d[\"dailyrecovered\"] - d[\"dailydeceased\"]\r\n                );\r\n              }\r\n            })\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength2 = path2.node().getTotalLength();\r\n      path2\r\n        .attr(\"stroke-dasharray\", totalLength2 + \" \" + totalLength2)\r\n        .attr(\"stroke-dashoffset\", totalLength2)\r\n        .transition()\r\n        .duration(props.animate ? 2000 : 0)\r\n        .attr(\"stroke-dashoffset\", 0);\r\n\r\n      svg2\r\n        .selectAll(\".dot\")\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append(\"circle\")\r\n        .attr(\"fill\", \"#007bff\")\r\n        .attr(\"stroke\", \"#007bff\")\r\n        .attr(\"r\", 2)\r\n        .attr(\"cursor\", \"pointer\")\r\n        .attr(\"cx\", function (d) {\r\n          return x(new Date(d[\"date\"] + \"2020\"));\r\n        })\r\n        .attr(\"cy\", function (d) {\r\n          /* const today =\r\n          data[data.length - 1]['dailyconfirmed'] -\r\n          data[data.length - 1]['dailyrecovered'] -\r\n          data[data.length - 1]['dailydeceased'];\r\n        const yesterday =\r\n          data[data.length - 2]['dailyconfirmed'] -\r\n          data[data.length - 2]['dailyrecovered'] -\r\n          data[data.length - 2]['dailydeceased'];*/\r\n          return y1(\r\n            d[\"dailyconfirmed\"] - d[\"dailyrecovered\"] - d[\"dailydeceased\"]\r\n          );\r\n        })\r\n        .on(\"mouseover\", (d) => {\r\n          d3.select(d3.event.target).attr(\"r\", \"5\");\r\n        })\r\n        .on(\"mouseout\", (d) => {\r\n          d3.select(d3.event.target).attr(\"r\", \"2\");\r\n        })\r\n        .style(\"opacity\", 0)\r\n        .transition()\r\n        .duration(props.animate ? 3000 : 0)\r\n        .style(\"opacity\", 1);\r\n    },\r\n    [props.animate]\r\n  );\r\n\r\n  useEffect(() => {\r\n    graphData(timeseries);\r\n  }, [timeseries, graphData]);\r\n\r\n  return (\r\n    <div className=\"Minigraph\">\r\n      <div className=\"svg-parent fadeInUp\" style={{ animationDelay: \"0.6s\" }}>\r\n        <svg\r\n          ref={graphElement1}\r\n          width=\"200\"\r\n          height=\"130\"\r\n          viewBox=\"0 0 100 70\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-blue fadeInUp\"\r\n        style={{ animationDelay: \"0.7s\" }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    timeseries: state.stats.timeSeries,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getLiveStats: () => dispatch(getLiveStatsAction()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActiveMiniGraph);\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLiveStatsAction } from \"../../../store/actions/statActions\";\r\n\r\nconst ConfirmedMiniGraph = (props) => {\r\n  const [timeseries, setTimeseries] = useState([]);\r\n  const graphElement1 = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.timeseries.length > 1) {\r\n      setTimeseries(props.timeseries.slice(props.timeseries.length - 25));\r\n    }\r\n  }, [props.timeseries]);\r\n\r\n  const graphData = useCallback(\r\n    (timeseries) => {\r\n      if (timeseries.length <= 1) return 0;\r\n      const data = timeseries;\r\n      const svg1 = d3.select(graphElement1.current);\r\n      const margin = { top: 30, right: 10, bottom: 30, left: 0 };\r\n      const width = 100 - margin.left - margin.right;\r\n      const height = 100 - margin.top - margin.bottom;\r\n\r\n      const x = d3\r\n        .scaleTime()\r\n        .domain(\r\n          d3.extent(data, function (d) {\r\n            return new Date(d[\"date\"] + \"2020\");\r\n          })\r\n        )\r\n        .range([0, width]);\r\n\r\n      const y1 = d3\r\n        .scaleLinear()\r\n        .domain([\r\n          0,\r\n          d3.max(data, function (d) {\r\n            return +d[\"dailyconfirmed\"];\r\n          }),\r\n        ])\r\n        .range([height, 0]);\r\n\r\n      const path1 = svg1\r\n        .append(\"path\")\r\n        .datum(data)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", \"#ff073a99\")\r\n        .attr(\"stroke-width\", 2)\r\n        .attr(\"cursor\", \"pointer\")\r\n        .attr(\r\n          \"d\",\r\n          d3\r\n            .line()\r\n            .x(function (d) {\r\n              return x(new Date(d[\"date\"] + \"2020\"));\r\n            })\r\n            .y(function (d, i) {\r\n              return y1(d[\"dailyconfirmed\"]);\r\n            })\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength1 = path1.node().getTotalLength();\r\n      path1\r\n        .attr(\"stroke-dasharray\", totalLength1 + \" \" + totalLength1)\r\n        .attr(\"stroke-dashoffset\", totalLength1)\r\n        .transition()\r\n        .duration(props.animate ? 2000 : 0)\r\n        .attr(\"stroke-dashoffset\", 0);\r\n\r\n      svg1\r\n        .selectAll(\".dot\")\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append(\"circle\")\r\n        .attr(\"fill\", \"#ff073a\")\r\n        .attr(\"stroke\", \"#ff073a\")\r\n        .attr(\"r\", 2)\r\n        .attr(\"cursor\", \"pointer\")\r\n        .attr(\"cx\", function (d) {\r\n          return x(new Date(d[\"date\"] + \"2020\"));\r\n        })\r\n        .attr(\"cy\", function (d) {\r\n          return y1(d[\"dailyconfirmed\"]);\r\n        })\r\n        .on(\"mouseover\", (d) => {\r\n          d3.select(d3.event.target).attr(\"r\", \"5\");\r\n        })\r\n        .on(\"mouseout\", (d) => {\r\n          d3.select(d3.event.target).attr(\"r\", \"2\");\r\n        })\r\n        .style(\"opacity\", 0)\r\n        .transition()\r\n        .duration(props.animate ? 3000 : 0)\r\n        .style(\"opacity\", 1);\r\n    },\r\n    [props.animate]\r\n  );\r\n\r\n  useEffect(() => {\r\n    graphData(timeseries);\r\n  }, [timeseries, graphData]);\r\n\r\n  return (\r\n    <div className=\"Minigraph\">\r\n      <div className=\"svg-parent fadeInUp\" style={{ animationDelay: \"0.6s\" }}>\r\n        <svg\r\n          ref={graphElement1}\r\n          width=\"200\"\r\n          height=\"130\"\r\n          viewBox=\"0 0 100 60\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-blue fadeInUp\"\r\n        style={{ animationDelay: \"0.7s\" }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      timeseries: state.stats.timeSeries,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      getLiveStats: () => dispatch(getLiveStatsAction()),\r\n    };\r\n  };\r\n  \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmedMiniGraph);","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLiveStatsAction } from \"../../../store/actions/statActions\";\r\n\r\n\r\nconst RecoveredMiniGraph = (props) => {\r\n  const [timeseries, setTimeseries] = useState([]);\r\n  const graphElement1 = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.timeseries.length > 1) {\r\n      setTimeseries(props.timeseries.slice(props.timeseries.length - 25));\r\n    }\r\n  }, [props.timeseries]);\r\n\r\n  const graphData = useCallback(\r\n    (timeseries) => {\r\n      if (timeseries.length <= 1) return 0;\r\n      const data = timeseries;\r\n      const svg3 = d3.select(graphElement1.current);\r\n      const margin = { top: 20, right: 10, bottom: 30, left: 0 };\r\n      const width = 100 - margin.left - margin.right;\r\n      const height = 100 - margin.top - margin.bottom;\r\n\r\n      const x = d3\r\n        .scaleTime()\r\n        .domain(\r\n          d3.extent(data, function (d) {\r\n            return new Date(d[\"date\"] + \"2020\");\r\n          })\r\n        )\r\n        .range([0, width]);\r\n\r\n      const y1 = d3\r\n        .scaleLinear()\r\n        .domain([\r\n          0,\r\n          d3.max(data, function (d) {\r\n            return +d[\"dailyconfirmed\"];\r\n          }),\r\n        ])\r\n        .range([height, 0]);\r\n\r\n      const path3 = svg3\r\n        .append(\"path\")\r\n        .datum(data)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", \"#28a74599\")\r\n        .attr(\"stroke-width\", 2)\r\n        .attr(\"cursor\", \"pointer\")\r\n        .attr(\r\n          \"d\",\r\n          d3\r\n            .line()\r\n            .x(function (d) {\r\n              return x(new Date(d[\"date\"] + \"2020\"));\r\n            })\r\n            .y(function (d, i) {\r\n              if (i === 0) {\r\n                return y1(d[\"dailyrecovered\"]);\r\n              } else {\r\n                return y1(d[\"dailyrecovered\"]);\r\n              }\r\n            })\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength3 = path3.node().getTotalLength();\r\n      path3\r\n        .attr(\"stroke-dasharray\", totalLength3 + \" \" + totalLength3)\r\n        .attr(\"stroke-dashoffset\", totalLength3)\r\n        .transition()\r\n        .duration(props.animate ? 2000 : 0)\r\n        .attr(\"stroke-dashoffset\", 0);\r\n\r\n      svg3\r\n        .selectAll(\".dot\")\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append(\"circle\")\r\n        .attr(\"fill\", \"#28a745\")\r\n        .attr(\"stroke\", \"#28a745\")\r\n        .attr(\"r\", 2)\r\n        .attr(\"cursor\", \"pointer\")\r\n        .attr(\"cx\", function (d) {\r\n          return x(new Date(d[\"date\"] + \"2020\"));\r\n        })\r\n        .attr(\"cy\", function (d) {\r\n          return y1(d[\"dailyrecovered\"]);\r\n        })\r\n        .on(\"mouseover\", (d) => {\r\n          d3.select(d3.event.target).attr(\"r\", \"5\");\r\n        })\r\n        .on(\"mouseout\", (d) => {\r\n          d3.select(d3.event.target).attr(\"r\", \"2\");\r\n        })\r\n        .style(\"opacity\", 0)\r\n        .transition()\r\n        .duration(props.animate ? 3000 : 0)\r\n        .style(\"opacity\", 1);\r\n    },\r\n    [props.animate]\r\n  );\r\n\r\n  useEffect(() => {\r\n    graphData(timeseries);\r\n  }, [timeseries, graphData]);\r\n\r\n  return (\r\n    <div className=\"Minigraph\">\r\n      <div className=\"svg-parent fadeInUp\" style={{ animationDelay: \"0.6s\" }}>\r\n        <svg\r\n          ref={graphElement1}\r\n          width=\"200\"\r\n          height=\"130\"\r\n          viewBox=\"0 0 100 70\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-blue fadeInUp\"\r\n        style={{ animationDelay: \"0.7s\" }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      timeseries: state.stats.timeSeries,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      getLiveStats: () => dispatch(getLiveStatsAction()),\r\n    };\r\n  };\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecoveredMiniGraph);","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLiveStatsAction } from \"../../../store/actions/statActions\";\r\n\r\n\r\nconst DeceasedMiniGraph = (props) => {\r\n  const [timeseries, setTimeseries] = useState([]);\r\n  const graphElement1 = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.timeseries.length > 1) {\r\n      setTimeseries(props.timeseries.slice(props.timeseries.length - 25));\r\n    }\r\n  }, [props.timeseries]);\r\n\r\n  const graphData = useCallback(\r\n    (timeseries) => {\r\n      if (timeseries.length <= 1) return 0;\r\n      const data = timeseries;\r\n      const svg4 = d3.select(graphElement1.current);\r\n      const margin = { top: 20, right: 10, bottom: 30, left: 0 };\r\n      const width = 100 - margin.left - margin.right;\r\n      const height = 100 - margin.top - margin.bottom;\r\n\r\n      const x = d3\r\n        .scaleTime()\r\n        .domain(\r\n          d3.extent(data, function (d) {\r\n            return new Date(d[\"date\"] + \"2020\");\r\n          })\r\n        )\r\n        .range([0, width]);\r\n\r\n      const y1 = d3\r\n        .scaleLinear()\r\n        .domain([\r\n          0,\r\n          d3.max(data, function (d) {\r\n            return +d[\"dailyconfirmed\"];\r\n          }),\r\n        ])\r\n        .range([height, 0]);\r\n\r\n        const path4 = svg4\r\n        .append('path')\r\n        .datum(data)\r\n        .attr('fill', 'none')\r\n        .attr('cursor', 'pointer')\r\n        .attr('stroke', '#6c757d99')\r\n        .attr('stroke-width', 2)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cursor', 'pointer')\r\n        .attr(\r\n          'd',\r\n          d3\r\n            .line()\r\n            .x(function (d) {\r\n              return x(new Date(d['date'] + '2020'));\r\n            })\r\n            .y(function (d, i) {\r\n              if (i === 0) {\r\n                return y1(d['dailydeceased']);\r\n              } else {\r\n                return y1(d['dailydeceased']);\r\n              }\r\n            })\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength4 = path4.node().getTotalLength();\r\n      path4\r\n        .attr('stroke-dasharray', totalLength4 + ' ' + totalLength4)\r\n        .attr('stroke-dashoffset', totalLength4)\r\n        .transition()\r\n        .duration(props.animate ? 2000 : 0)\r\n        .attr('stroke-dashoffset', 0);\r\n\r\n      svg4\r\n        .selectAll('.dot')\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('fill', '#6c757d')\r\n        .attr('stroke', '#6c757d')\r\n        .attr('r', 2)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cx', function (d) {\r\n          return x(new Date(d['date'] + '2020'));\r\n        })\r\n        .attr('cy', function (d) {\r\n          return y1(d['dailydeceased']);\r\n        })\r\n        .on('mouseover', (d) => {\r\n          d3.select(d3.event.target).attr('r', '5');\r\n        })\r\n        .on('mouseout', (d) => {\r\n          d3.select(d3.event.target).attr('r', '2');\r\n        })\r\n        .style('opacity', 0)\r\n        .transition()\r\n        .duration(props.animate ? 3000 : 0)\r\n        .style('opacity', 1);\r\n    },\r\n    [props.animate]\r\n  );\r\n\r\n  useEffect(() => {\r\n    graphData(timeseries);\r\n  }, [timeseries, graphData]);\r\n\r\n  return (\r\n    <div className=\"Minigraph\">\r\n      <div className=\"svg-parent fadeInUp\" style={{ animationDelay: \"0.6s\" }}>\r\n        <svg\r\n          ref={graphElement1}\r\n          width=\"200\"\r\n          height=\"130\"\r\n          viewBox=\"0 0 100 70\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-blue fadeInUp\"\r\n        style={{ animationDelay: \"0.7s\" }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      timeseries: state.stats.timeSeries,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      getLiveStats: () => dispatch(getLiveStatsAction()),\r\n    };\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeceasedMiniGraph)","import React from \"react\";\r\nimport \"../../index.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TestedSamples = (props) => {\r\n  var Obj = props.tested;\r\n\r\n  var bar = [];\r\n  var lastElement;\r\n  var last;\r\n  for (lastElement in Obj) {\r\n    last = Obj[lastElement];\r\n    bar.push(last.totalindividualstested);\r\n  }\r\n  const tested = bar.slice(-1)[0];\r\n\r\n  return (\r\n    <div>\r\n      {tested === '' ? '' :\r\n        <p className=\"tested text-muted rgba-blue-slight\">\r\n          '<span className=\"text-info \">{tested}</span>' Samples are being tested\r\n        till now.\r\n      </p>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tested: state.stats.samples,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TestedSamples);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../../index.css';\r\n\r\nconst LatestUpdates = (props) => {\r\n\tconst [latestUpdates, setLatestUpdates] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<p onClick={() => setLatestUpdates(!latestUpdates)} className=\"updates\">\r\n\t\t\t\t\tLatest Updates\r\n\t\t\t\t\t{latestUpdates ? <i className=\"mt-1 far fa-bell-slash\"></i> : <i className=\"mt-1 far fa-bell\"></i>}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t{latestUpdates && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{props.getLatestUpdates\r\n\t\t\t\t\t\t.reverse()\r\n\t\t\t\t\t\t.slice(0, 5)\r\n\t\t\t\t\t\t.map((item, index) => (\r\n\t\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t\t<p style={{ width: '600px' }} className={` ${props.modeState && 'dark-body'} col note note-secondary`} >\r\n\t\t\t\t\t\t\t\t\t{item.update}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tgetLatestUpdates: state.stats.latestUpdates,\r\n\t\tmodeState: state.darkMode.hasmode\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(LatestUpdates);\r\n","import React, { useEffect } from 'react';\r\nimport LiveStats from './LiveStats';\r\nimport UpdateLiveStats from './UpdateLiveStats';\r\nimport StateTable from './StateTable';\r\nimport { connect } from 'react-redux';\r\nimport { getLiveStatsAction } from '../../store/actions/statActions';\r\nimport ActiveMiniGraph from './minigraphs/ActiveMiniGraph';\r\nimport ConfirmedMiniGraph from './minigraphs/ConfirmedMiniGraph';\r\nimport RecoveredMiniGraph from './minigraphs/RecoveredMiniGraph';\r\nimport DeceasedMiniGraph from './minigraphs/DeceasedMiniGraph';\r\nimport TestedSamples from './TestedSamples';\r\nimport LatestUpdates from './LatestUpdates';\r\n\r\nconst Home = (props) => {\r\n\tuseEffect(() => {\r\n\t\tprops.getLiveStats();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"home\">\r\n\t\t\t{/* factoids banner */}\r\n\t\t\t{/* <Factoids /> */}\r\n\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-sm-6 col-lg-3\">\r\n\t\t\t\t\t\t<UpdateLiveStats lastUpdatedTime={props.liveStatsData.lastupdatedtime} />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"col-sm-6 col-lg-3\">\r\n\t\t\t\t\t\t<LatestUpdates />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* stats cards  */}\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-sm-6 col-lg-3 d-flex justify-content-center\">\r\n\t\t\t\t\t\t<LiveStats\r\n\t\t\t\t\t\t\tname=\"Confirmed\"\r\n\t\t\t\t\t\t\tcount={props.liveStatsData.confirmed}\r\n\t\t\t\t\t\t\ttodayCount={props.liveStatsData.deltaconfirmed}\r\n\t\t\t\t\t\t\tbadgeColor=\"badge badge-danger\"\r\n\t\t\t\t\t\t\thoverColor=\"red\"\r\n\t\t\t\t\t\t\ttextColor=\"text-danger\"\r\n\t\t\t\t\t\t\tactivegraph={<ConfirmedMiniGraph />}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-6 col-lg-3 d-flex justify-content-center\">\r\n\t\t\t\t\t\t<LiveStats\r\n\t\t\t\t\t\t\tname=\"Active\"\r\n\t\t\t\t\t\t\tcount={props.liveStatsData.active}\r\n\t\t\t\t\t\t\ttodayCount={props.liveStatsData.deltaconfirmed}\r\n\t\t\t\t\t\t\tbadgeColor=\"badge badge-primary\"\r\n\t\t\t\t\t\t\thoverColor=\"blue\"\r\n\t\t\t\t\t\t\ttextColor=\"text-primary\"\r\n\t\t\t\t\t\t\tactivegraph={<ActiveMiniGraph />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-6 col-lg-3 d-flex justify-content-center\">\r\n\t\t\t\t\t\t<LiveStats\r\n\t\t\t\t\t\t\tname=\"Recovered\"\r\n\t\t\t\t\t\t\tcount={props.liveStatsData.recovered}\r\n\t\t\t\t\t\t\ttodayCount={props.liveStatsData.deltarecovered}\r\n\t\t\t\t\t\t\tbadgeColor=\"badge badge-success\"\r\n\t\t\t\t\t\t\thoverColor=\"green\"\r\n\t\t\t\t\t\t\ttextColor=\"text-success\"\r\n\t\t\t\t\t\t\tactivegraph={<RecoveredMiniGraph />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-6 col-lg-3 d-flex justify-content-center\">\r\n\t\t\t\t\t\t<LiveStats\r\n\t\t\t\t\t\t\tname=\"Deceased\"\r\n\t\t\t\t\t\t\tcount={props.liveStatsData.deaths}\r\n\t\t\t\t\t\t\ttodayCount={props.liveStatsData.deltadeaths}\r\n\t\t\t\t\t\t\tbadgeColor=\"badge badge-light\"\r\n\t\t\t\t\t\t\thoverColor=\"grey\"\r\n\t\t\t\t\t\t\ttextColor=\"#ccc\"\r\n\t\t\t\t\t\t\tactivegraph={<DeceasedMiniGraph />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<TestedSamples />\r\n\r\n\t\t\t\t{/* State wise Table */}\r\n\t\t\t\t<StateTable\r\n\t\t\t\t\tstateData={props.statesData}\r\n\t\t\t\t\ttextConfirmed=\"text-danger\"\r\n\t\t\t\t\ttextActive=\"text-primary\"\r\n\t\t\t\t\ttextRecovered=\"text-success\"\r\n\t\t\t\t\ttextDeceased=\"text-dark\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tliveStatsData: state.stats.liveStats,\r\n\t\tstatesData: state.stats.statesData,\r\n\t\ttimeSeriesData: state.stats.timeSeries,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLiveStats: () => dispatch(getLiveStatsAction()),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { useState } from 'react';\r\nimport './demographics.css';\r\nimport { useEffectOnce, useLocalStorage } from 'react-use'\r\n\r\nconst BoxMessage = () => {\r\n\tconst [messageBox, setMessageBox] = useState(true)\r\n\tconst [box, setBox] = useLocalStorage('messageBox', true)\r\n\r\n\tconst handleMessageBox = () => {\r\n\t\tsetMessageBox(false)\r\n\t\tsetBox(false)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{messageBox, box &&\r\n\t\t\t\t<div className=\"card-container\">\r\n\t\t\t\t\t<div className=\"card rgba-blue-slight card-styles\">\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<i onClick={handleMessageBox} className=\"d-flex justify-content-end fas fa-times text-info\"></i>\r\n\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\r\n\t\t\t\t\t\t\t\tIt is important that we do not think of these as just tiny boxes,\r\n\t\t\t\t\t\t\t\tnumbers, or just another part of statistics - among these are our\r\n\t\t\t\t\t\t\t\tneighbors, our teachers, our healthcare workers, our supermarket\r\n\t\t\t\t\t\t\t\tvendors, our friends, our co-workers, our children or our\r\n\t\t\t\t\t\t\t\tgrandparents.\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<br />\r\n          \t\t\t\t\t\tAmong these are our people.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BoxMessage;\r\n","import React, { useState } from 'react';\r\n\r\n\r\n\r\nconst PatientModel = (props) => {\r\n\r\n    // let newArry\r\n    // newArry = props.patientData[props.patientNumber - 1]\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"modal fade\" id=\"modalPush\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n                aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-notify modal-info\" role=\"document\">\r\n                    <div className=\"modal-content text-center\">\r\n                        <div className=\"modal-header d-flex justify-content-center\">\r\n                            <p className=\"heading\">Patient Number : {props.patientNumber}</p>\r\n                        </div>\r\n\r\n                        <div className=\"modal-body\">\r\n                            {/* patient details here */}\r\n                            {/* <p>Detected City : {newArry.detectedcity}</p> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientModel","import React, { useState } from 'react';\r\nimport './demographics.css'\r\nimport { connect } from 'react-redux';\r\nimport PatientModel from './PatientModel';\r\n\r\nconst PatientHeatMap = (props) => {\r\n    const [isChecked, setIsChecked] = useState(false)\r\n    const [patientNumber, setPatientNumber] = useState('')\r\n\r\n\r\n    // expand toggle switch\r\n    const handleToggle = () => {\r\n        setIsChecked(!isChecked)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <div className=\"row\">\r\n                <h2 className=\"text-info\" style={{fontWeight:600}}>Demographics</h2>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col custom-control custom-switch\">\r\n                    <input type=\"checkbox\" className=\"custom-control-input sizer\" id=\"customSwitch1\" onClick={handleToggle} defaultChecked={isChecked} />\r\n                    <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">Expand </label>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"row d-flex justify-content-center mt-5\">\r\n\r\n                {props.patientData.map((patient, index) => (\r\n                    <div\r\n                        onClick={() => setPatientNumber(patient.patientnumber)}\r\n                        data-toggle=\"modal\" data-target=\"#modalPush\"\r\n                        key={index}\r\n                        className={`expanded-patient-box ${patient.gender === \"F\" ? 'pink lighten-1' : patient.gender === \"M\" ? 'blue lighten-1' : 'grey lighten-2'}`}>\r\n\r\n                        {isChecked ?\r\n                            <p\r\n                                className=\"text-muted\"\r\n                                style={{\r\n                                    width: isChecked && \"60px\",\r\n                                    height: isChecked && \"50px\",\r\n                                    lineHeight: \"60px\",\r\n                                    textAlign: \"center\",\r\n                                }}>\r\n                                P{patient.patientnumber}</p>\r\n                            :\r\n                            <div style={{ width: \"20px\", height: \"20px\" }}>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <PatientModel patientNumber={patientNumber} patientData={props.patientData} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        patientData: state.patient.getPatientData\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PatientHeatMap)","import React, { useEffect, useState } from 'react';\r\nimport './demographics.css'\r\nimport { connect } from 'react-redux';\r\nimport { getStatesAction } from '../../store/actions/patientActions';\r\n\r\nconst SelectOptions = (props) => {\r\nconst [stateSelect, setStateSelect] = useState('')\r\n\r\n    useEffect(() => {\r\n        props.getStates()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row select-option\">\r\n                <select\r\n                    onChange={(event) => setStateSelect(event.target.value)}\r\n                    value={stateSelect}\r\n                    className=\" btn btn-outline-primary dropdown-toggle\"\r\n                >\r\n                    <option Value=\"\" disabled>--Select State--</option>\r\n                    <option value=\"all\">All</option>\r\n                    {props.allStatesData.sort().map((state, index) => (\r\n                        <option key={index} Value={state.state}>{state.state}</option>\r\n                    ))}\r\n                </select>\r\n\r\n\r\n                {stateSelect && stateSelect !== 'all' ?\r\n                    <select\r\n                        className=\"  btn btn-outline-primary dropdown-toggle\"\r\n                    >\r\n                        <option value=\"\">--Select District--</option>\r\n                        <option value=\"genderwise\">Gender Wise Data</option>\r\n                        <option value=\"currentstatus\">Current Status</option>\r\n                        <option value=\"transmissiontype\">Type of Transmission</option>\r\n                    </select>\r\n                    : ''}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allStatesData: state.patient.getStatesData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getStates: () => dispatch(getStatesAction())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectOptions)","import axios from \"axios\"\r\n\r\nexport const GET_PATIENT_DATA = \"GET_PATIENT_FETCH\"\r\nexport const FETCHING_PATIENT_DATA = \"FETCHING_PATIENT_DATA\"\r\nexport const ERROR_PATIENT_DATA = \"ERROR_PATIENT_DATA\"\r\nexport const GET_STATES = \"GET_STATES\"\r\nexport const FETCHING_STATES = \"FETCHING_STATES\"\r\nexport const ERROR_STATES = \"ERROR_STATES\"\r\n\r\n\r\nexport const getPatientData = () => {\r\n    return dispatch => {\r\n        dispatch({ type: FETCHING_PATIENT_DATA })\r\n        axios.get('https://api.covid19india.org/raw_data.json').then(resp => {\r\n            dispatch({ type: GET_PATIENT_DATA, payload: resp.data.raw_data.reverse().slice(0, 500) })\r\n        }).catch(err => {\r\n            console.log(err)\r\n            dispatch({ type: ERROR_PATIENT_DATA, payload: \"Error Occured. Try again\" })\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getStatesAction = () => {\r\n    return dispatch => {\r\n        dispatch({ type: FETCHING_STATES })\r\n        axios.get('https://api.covid19india.org/data.json').then(resp => {\r\n            dispatch({ type: GET_STATES, payload: resp.data.statewise.slice(1, -1) })\r\n        }).catch(err => {\r\n            console.log(err)\r\n            dispatch({ type: ERROR_STATES, payload: 'error fetching states' })\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport BoxMessage from './BoxMessage';\r\nimport PatientHeatMap from './PatientHeatMap';\r\nimport { connect } from 'react-redux';\r\nimport { getPatientData } from '../../store/actions/patientActions';\r\nimport SelectOptions from './SelectOptions';\r\n\r\n\r\nconst Demographics = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.getPatient()\r\n    })\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <div className=\"mt-2\">\r\n                <SelectOptions />\r\n            </div>\r\n\r\n            <div>\r\n                <BoxMessage />\r\n            </div>\r\n\r\n            <div className=\"mt-5\">\r\n                <PatientHeatMap />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getPatient: () => dispatch(getPatientData())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Demographics)","import React from 'react';\r\n\r\nconst DeepDive = () => {\r\n    return(\r\n        <div>\r\n            Deep-Dive compo\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeepDive","import React, { useEffect } from \"react\";\nimport NavBar from \"./navbar/NavBar\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from './home/Home';\nimport Demographics from './demographics/Demographics';\nimport DeepDive from './deep-dive/DeepDive';\nimport '../index.css'\nimport { connect } from 'react-redux';\n\n\n\nfunction App(props) {\n\n\n  return (\n    <div className={`App ${props.modeState && 'dark-body'}`} >\n      <BrowserRouter>\n        <NavBar />\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/demographics\" component={Demographics} />\n        <Route path=\"/deep-dive\" component={DeepDive} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    modeState: state.darkMode.hasmode\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GET_PATIENT_DATA, FETCHING_PATIENT_DATA, ERROR_PATIENT_DATA, GET_STATES, FETCHING_STATES, ERROR_STATES } from '../actions/patientActions'\r\n\r\nconst initialState = {\r\n    fetchingData: false,\r\n    getPatientData: [],\r\n    errorPatientData: '',\r\n    fetchingStates: false,\r\n    getStatesData: [],\r\n    errorFetchingStates: ''\r\n}\r\n\r\nconst patientReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCHING_PATIENT_DATA:\r\n            return {\r\n                ...state,\r\n                fetchingData: true\r\n            }\r\n        case GET_PATIENT_DATA:\r\n            return {\r\n                ...state,\r\n                fetchingData: false,\r\n                getPatientData: action.payload\r\n            }\r\n        case ERROR_PATIENT_DATA:\r\n            return {\r\n                ...state,\r\n                fetchingData: false,\r\n                errorPatientData: action.payload\r\n            };\r\n        case FETCHING_STATES:\r\n            return {\r\n                ...state,\r\n                fetchingStates: true\r\n            }\r\n        case GET_STATES:\r\n            return {\r\n                ...state,\r\n                getStatesData: action.payload,\r\n                fetchingStates: false\r\n            }\r\n        case ERROR_STATES:\r\n            return {\r\n                ...state,\r\n                fetchingStates: false,\r\n                errorFetchingStates: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default patientReducer","import {\r\n  GET_LIVE_STATS,\r\n  ERROR_LIVE_STATS,\r\n  FETCHING_LIVE_STATS,\r\n  GET_STATES_DATA,\r\n  GET_TIME_SERIES,\r\n  GET_TEST_SAMPLES,\r\n  GET_FACTOIDS,\r\n  GET_UPDATES\r\n} from \"../actions/statActions\";\r\n\r\nconst initialState = {\r\n  fetchingStats: true,\r\n  errorFetchingStats: \"\",\r\n  liveStats: [],\r\n  statesData: [],\r\n  timeSeries: [],\r\n  samples: [],\r\n  factoids:[],\r\n  latestUpdates: []\r\n};\r\n\r\nconst statsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCHING_LIVE_STATS:\r\n      return {\r\n        ...state,\r\n        fetchingStats: true,\r\n      };\r\n    case GET_LIVE_STATS:\r\n      return {\r\n        ...state,\r\n        fetchingStats: false,\r\n        errorFetchingStats: \"\",\r\n        liveStats: action.payload,\r\n      };\r\n    case ERROR_LIVE_STATS:\r\n      return {\r\n        ...state,\r\n        fetchingStats: false,\r\n        errorFetchingStats: action.payload,\r\n      };\r\n    case GET_STATES_DATA:\r\n      return {\r\n        ...state,\r\n        statesData: action.payload,\r\n      };\r\n    case GET_TIME_SERIES:\r\n      return {\r\n        ...state,\r\n        timeSeries: action.payload,\r\n      };\r\n    case GET_TEST_SAMPLES:\r\n      return {\r\n        ...state,\r\n        samples: action.payload,\r\n      };\r\n      case GET_FACTOIDS:\r\n        return{\r\n          ...state,\r\n          factoids: action.payload\r\n        }\r\n        case GET_UPDATES:\r\n          return{\r\n            ...state,\r\n            latestUpdates:action.payload\r\n          }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default statsReducer;\r\n","import { SET_MODE } from '../actions/darkModeActions';\r\n\r\nconst initial = { hasmode: false }\r\n\r\nconst darkModeReducer = (state = initial, action) => {\r\n    // console.log(action)\r\n    if (action.type === SET_MODE) {\r\n        return { hasmode: action.payload }\r\n    } return state\r\n}\r\n\r\nexport default darkModeReducer","import {combineReducers} from 'redux';\r\nimport patientReducer from './patientReducer';\r\nimport statsReducer from './statsReducer';\r\nimport darkModeReducer from './darkModeReducer';\r\n\r\nexport default combineReducers({\r\n    patient: patientReducer,\r\n    stats: statsReducer,\r\n    darkMode: darkModeReducer\r\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\nconst middlewares = [thunk];\n\nconst store = createStore(rootReducer, {}, applyMiddleware(...middlewares));\n\nReactDOM.render(\n  <Provider store = {store}>  \n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}